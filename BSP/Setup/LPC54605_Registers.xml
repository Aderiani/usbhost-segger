<!DOCTYPE Register_Definition_File>
<Processor name="LPC54605" description="LPC54605 NXP Microcontroller">
  <RegisterGroup name="SYSCON" start="0x40000000" description="LPC5460x System configuration (SYSCON)">
    <Register start="+0x10" size="4" name="AHBMATPRIO" access="Read/Write" description="AHB multilayer matrix priority control" reset_value="0" reset_mask="0x3FFFFFF">
      <BitField start="0" size="2" name="PRI_ICODE" description="I-Code bus priority." />
      <BitField start="2" size="2" name="PRI_DCODE" description="D-Code bus priority." />
      <BitField start="4" size="2" name="PRI_SYS" description="System bus priority." />
      <BitField start="6" size="4" name="PRI_DMA" description="DMA controller priority." />
      <BitField start="10" size="2" name="PRI_ETH" description="Ethernet DMA priority." />
      <BitField start="12" size="2" name="PRI_LCD" description="LCD DMA priority." />
      <BitField start="14" size="2" name="PRI_USB0" description="USB0 DMA priority." />
      <BitField start="16" size="2" name="PRI_USB1" description="USB1 DMA priority." />
      <BitField start="18" size="2" name="PRI_SDIO" description="SDIO priority." />
      <BitField start="20" size="2" name="PRI_MCAN1" description="MCAN1 priority." />
      <BitField start="22" size="2" name="PRI_MCAN2" description="MCAN2 priority." />
      <BitField start="24" size="2" name="PRI_SHA" description="SHA priority." />
    </Register>
    <Register start="+0x40" size="4" name="SYSTCKCAL" access="Read/Write" description="System tick counter calibration" reset_value="0" reset_mask="0x3FFFFFF">
      <BitField start="0" size="24" name="CAL" description="System tick timer calibration value." />
      <BitField start="24" size="1" name="SKEW" description="Initial value for the Systick timer." />
      <BitField start="25" size="1" name="NOREF" description="Initial value for the Systick timer." />
    </Register>
    <Register start="+0x48" size="4" name="NMISRC" access="Read/Write" description="NMI Source Select" reset_value="0" reset_mask="0xC0003F3F">
      <BitField start="0" size="6" name="IRQM4" description="The IRQ number of the interrupt that acts as the Non-Maskable Interrupt (NMI) for the Cortex-M4, if enabled by NMIENM4." />
      <BitField start="31" size="1" name="NMIENM4" description="Write a 1 to this bit to enable the Non-Maskable Interrupt (NMI) source selected by IRQM4." />
    </Register>
    <Register start="+0x4C" size="4" name="ASYNCAPBCTRL" access="Read/Write" description="Asynchronous APB Control" reset_value="0x1" reset_mask="0x1">
      <BitField start="0" size="1" name="ENABLE" description="Enables the asynchronous APB bridge and subsystem.">
        <Enum name="0" start="0b0" description="Disabled. Asynchronous APB bridge is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Asynchronous APB bridge is enabled." />
      </BitField>
    </Register>
    <Register start="+0xC0" size="4" name="PIOPORCAP0" access="ReadOnly" description="POR captured value of port n" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PIOPORCAP" description="State of PIOn_31 through PIOn_0 at power-on reset" />
    </Register>
    <Register start="+0xC4" size="4" name="PIOPORCAP1" access="ReadOnly" description="POR captured value of port n" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PIOPORCAP" description="State of PIOn_31 through PIOn_0 at power-on reset" />
    </Register>
    <Register start="+0xD0" size="4" name="PIORESCAP0" access="ReadOnly" description="Reset captured value of port n" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PIORESCAP" description="State of PIOn_31 through PIOn_0 for resets other than POR." />
    </Register>
    <Register start="+0xD4" size="4" name="PIORESCAP1" access="ReadOnly" description="Reset captured value of port n" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PIORESCAP" description="State of PIOn_31 through PIOn_0 for resets other than POR." />
    </Register>
    <Register start="+0x100" size="4" name="PRESETCTRL0" access="Read/Write" description="Peripheral reset control n" reset_value="0" reset_mask="0x87FEF80">
      <BitField start="7" size="1" name="FLASH_RST" description="Flash controller reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="8" size="1" name="FMC_RST" description="Flash accelerator reset control. Note that the FMC must not be reset while executing from flash, and must be reconfigured after reset. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="9" size="1" name="EEPROM_RST" description="EEPROM reset control." />
      <BitField start="10" size="1" name="SPIFI_RST" description="SPIFI reset control." />
      <BitField start="11" size="1" name="MUX_RST" description="Input mux reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="13" size="1" name="IOCON_RST" description="IOCON reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="14" size="1" name="GPIO0_RST" description="GPIO0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="15" size="1" name="GPIO1_RST" description="GPIO1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="16" size="1" name="GPIO2_RST" description="GPIO2 reset control." />
      <BitField start="17" size="1" name="GPIO3_RST" description="GPIO3 reset control." />
      <BitField start="18" size="1" name="PINT_RST" description="Pin interrupt (PINT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="19" size="1" name="GINT_RST" description="Grouped interrupt (GINT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="20" size="1" name="DMA0_RST" description="DMA0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="21" size="1" name="CRC_RST" description="CRC generator reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="22" size="1" name="WWDT_RST" description="Watchdog timer reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="27" size="1" name="ADC0_RST" description="ADC0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
    </Register>
    <Register start="+0x104" size="4" name="PRESETCTRL1" access="Read/Write" description="Peripheral reset control n" reset_value="0" reset_mask="0xE4FFD85">
      <BitField start="0" size="1" name="MRT_RST" description="Multi-rate timer (MRT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="2" size="1" name="SCT0_RST" description="State configurable timer 0 (SCT0) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="7" size="1" name="MCAN0_RST" description="0 = Clear reset to this function." />
      <BitField start="8" size="1" name="MCAN1_RST" description="0 = Clear reset to this function." />
      <BitField start="10" size="1" name="UTICK_RST" description="Micro-tick Timer reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="11" size="1" name="FC0_RST" description="Flexcomm 0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="12" size="1" name="FC1_RST" description="Flexcomm 1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="13" size="1" name="FC2_RST" description="Flexcomm 2 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="14" size="1" name="FC3_RST" description="Flexcomm 3 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="15" size="1" name="FC4_RST" description="Flexcomm 4 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="16" size="1" name="FC5_RST" description="Flexcomm 5 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="17" size="1" name="FC6_RST" description="Flexcomm 6 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="18" size="1" name="FC7_RST" description="Flexcomm 7 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="19" size="1" name="DMIC_RST" description="Digital microphone interface reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="22" size="1" name="CTIMER2_RST" description="CTIMER2 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function" />
      <BitField start="25" size="1" name="USB0D_RST" description="USB0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="26" size="1" name="CTIMER0_RST" description="CTIMER0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="27" size="1" name="CTIMER1_RST" description="CTIMER1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
    </Register>
    <Register start="+0x108" size="4" name="PRESETCTRL2" access="Read/Write" description="Peripheral reset control n" reset_value="0" reset_mask="0xE4FFD85">
      <BitField start="2" size="1" name="LCD_RST" description="LCD reset control." />
      <BitField start="3" size="1" name="SDIO_RST" description="SDIO reset control." />
      <BitField start="4" size="1" name="USB1H_RST" description="USB1 Host reset control." />
      <BitField start="5" size="1" name="USB1D_RST" description="USB1 Device reset control." />
      <BitField start="6" size="1" name="USB1RAM_RST" description="USB1 RAM reset control." />
      <BitField start="7" size="1" name="EMC_RESET" description="EMC reset control." />
      <BitField start="8" size="1" name="ETH_RST" description="Ethernet reset control." />
      <BitField start="9" size="1" name="GPIO4_RST" description="GPIO4 reset control." />
      <BitField start="10" size="1" name="GPIO5_RST" description="GPIO5 reset control." />
      <BitField start="11" size="1" name="AES_RST" description="AES reset control." />
      <BitField start="12" size="1" name="OTP_RST" description="OTP reset control." />
      <BitField start="13" size="1" name="RNG_RST" description="RNG reset control." />
      <BitField start="14" size="1" name="FC8_RST" description="Flexcomm 8 reset control." />
      <BitField start="15" size="1" name="FC9_RST" description="Flexcomm 9 reset control." />
      <BitField start="16" size="1" name="USB0HMR_RST" description="USB0 HOST master reset control." />
      <BitField start="17" size="1" name="USB0HSL_RST" description="USB0 HOST slave reset control." />
      <BitField start="18" size="1" name="SHA_RST" description="SHA reset control." />
      <BitField start="19" size="1" name="SC0_RST" description="Smart card 0 reset control." />
      <BitField start="20" size="1" name="SC1_RST" description="Smart card 1 reset control." />
    </Register>
    <Register start="+0x120" size="4" name="PRESETCTRLSET0" access="WriteOnly" description="Set bits in PRESETCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RST_SET" description="Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x124" size="4" name="PRESETCTRLSET1" access="WriteOnly" description="Set bits in PRESETCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RST_SET" description="Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x128" size="4" name="PRESETCTRLSET2" access="WriteOnly" description="Set bits in PRESETCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RST_SET" description="Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x140" size="4" name="PRESETCTRLCLR0" access="WriteOnly" description="Clear bits in PRESETCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RST_CLR" description="Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x144" size="4" name="PRESETCTRLCLR1" access="WriteOnly" description="Clear bits in PRESETCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RST_CLR" description="Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x148" size="4" name="PRESETCTRLCLR2" access="WriteOnly" description="Clear bits in PRESETCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RST_CLR" description="Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x1F0" size="4" name="SYSRSTSTAT" access="Read/Write" description="System reset status register" reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="POR" description="POR reset status">
        <Enum name="0" start="0b0" description="No POR detected" />
        <Enum name="1" start="0b1" description="POR detected. Writing a one clears this reset." />
      </BitField>
      <BitField start="1" size="1" name="EXTRST" description="Status of the external RESET pin. External reset status">
        <Enum name="0" start="0b0" description="No reset event detected." />
        <Enum name="1" start="0b1" description="Reset detected. Writing a one clears this reset." />
      </BitField>
      <BitField start="2" size="1" name="WDT" description="Status of the Watchdog reset">
        <Enum name="0" start="0b0" description="No WDT reset detected" />
        <Enum name="1" start="0b1" description="WDT reset detected. Writing a one clears this reset." />
      </BitField>
      <BitField start="3" size="1" name="BOD" description="Status of the Brown-out detect reset">
        <Enum name="0" start="0b0" description="No BOD reset detected" />
        <Enum name="1" start="0b1" description="BOD reset detected. Writing a one clears this reset." />
      </BitField>
      <BitField start="4" size="1" name="SYSRST" description="Status of the software system reset">
        <Enum name="0" start="0b0" description="No System reset detected" />
        <Enum name="1" start="0b1" description="System reset detected. Writing a one clears this reset." />
      </BitField>
    </Register>
    <Register start="+0x200" size="4" name="AHBCLKCTRL0" access="Read/Write" description="AHB Clock control n" reset_value="0x183" reset_mask="0xFFFFFFFF">
      <BitField start="1" size="1" name="ROM" description="Enables the clock for the Boot ROM. 0 = Disable; 1 = Enable." />
      <BitField start="3" size="1" name="SRAM1" description="Enables the clock for SRAM1. 0 = Disable; 1 = Enable." />
      <BitField start="4" size="1" name="SRAM2" description="Enables the clock for SRAM2. 0 = Disable; 1 = Enable." />
      <BitField start="5" size="1" name="SRAM3" description="Enables the clock for SRAM3." />
      <BitField start="7" size="1" name="FLASH" description="Enables the clock for the flash controller. 0 = Disable; 1 = Enable. This clock is needed for flash programming, not for flash read." />
      <BitField start="8" size="1" name="FMC" description="Enables the clock for the Flash accelerator. 0 = Disable; 1 = Enable. This clock is needed if the flash is being read." />
      <BitField start="9" size="1" name="EEPROM" description="Enables the clock for EEPROM." />
      <BitField start="10" size="1" name="SPIFI" description="Enables the clock for the SPIFI. 0 = Disable; 1 = Enable." />
      <BitField start="11" size="1" name="INPUTMUX" description="Enables the clock for the input muxes. 0 = Disable; 1 = Enable." />
      <BitField start="13" size="1" name="IOCON" description="Enables the clock for the IOCON block. 0 = Disable; 1 = Enable." />
      <BitField start="14" size="1" name="GPIO0" description="Enables the clock for the GPIO0 port registers. 0 = Disable; 1 = Enable." />
      <BitField start="15" size="1" name="GPIO1" description="Enables the clock for the GPIO1 port registers. 0 = Disable; 1 = Enable." />
      <BitField start="16" size="1" name="GPIO2" description="Enables the clock for the GPIO2 port registers." />
      <BitField start="17" size="1" name="GPIO3" description="Enables the clock for the GPIO3 port registers." />
      <BitField start="18" size="1" name="PINT" description="Enables the clock for the pin interrupt block.0 = Disable; 1 = Enable." />
      <BitField start="19" size="1" name="GINT" description="Enables the clock for the grouped pin interrupt block. 0 = Disable; 1 = Enable." />
      <BitField start="20" size="1" name="DMA" description="Enables the clock for the DMA controller. 0 = Disable; 1 = Enable." />
      <BitField start="21" size="1" name="CRC" description="Enables the clock for the CRC engine. 0 = Disable; 1 = Enable." />
      <BitField start="22" size="1" name="WWDT" description="Enables the clock for the Watchdog Timer. 0 = Disable; 1 = Enable." />
      <BitField start="23" size="1" name="RTC" description="Enables the bus clock for the RTC. 0 = Disable; 1 = Enable." />
      <BitField start="27" size="1" name="ADC0" description="Enables the clock for the ADC0 register interface." />
    </Register>
    <Register start="+0x204" size="4" name="AHBCLKCTRL1" access="Read/Write" description="AHB Clock control n" reset_value="0" reset_mask="0xE4FFD87">
      <BitField start="0" size="1" name="MRT" description="Enables the clock for the Multi-Rate Timer." />
      <BitField start="1" size="1" name="RIT" description="Enables the clock for the Repetitive Interrupt Timer." />
      <BitField start="2" size="1" name="SCT0" description="Enables the clock for SCT0." />
      <BitField start="7" size="1" name="MCAN0" description="Enables the clock for MCAN0." />
      <BitField start="8" size="1" name="MCAN1" description="Enables the clock for MCAN1." />
      <BitField start="10" size="1" name="UTICK" description="Enables the clock for the Micro-tick Timer. 0 = Disable; 1 = Enable." />
      <BitField start="11" size="1" name="FLEXCOMM0" description="Enables the clock for Flexcomm 0. 0 = Disable; 1 = Enable." />
      <BitField start="12" size="1" name="FLEXCOMM1" description="Enables the clock for Flexcomm 1. 0 = Disable; 1 = Enable." />
      <BitField start="13" size="1" name="FLEXCOMM2" description="Enables the clock for Flexcomm 2. 0 = Disable; 1 = Enable." />
      <BitField start="14" size="1" name="FLEXCOMM3" description="Enables the clock for Flexcomm 3. 0 = Disable; 1 = Enable." />
      <BitField start="15" size="1" name="FLEXCOMM4" description="Enables the clock for Flexcomm 4. 0 = Disable; 1 = Enable." />
      <BitField start="16" size="1" name="FLEXCOMM5" description="Enables the clock for Flexcomm 5. 0 = Disable; 1 = Enable." />
      <BitField start="17" size="1" name="FLEXCOMM6" description="Enables the clock for Flexcomm 6. 0 = Disable; 1 = Enable." />
      <BitField start="18" size="1" name="FLEXCOMM7" description="Enables the clock for Flexcomm 7. 0 = Disable; 1 = Enable." />
      <BitField start="19" size="1" name="DMIC" description="Enables the clock for the digital microphone interface. 0 = Disable; 1 = Enable." />
      <BitField start="22" size="1" name="CTIMER2" description="Enables the clock for CTIMER 2. 0 = Disable; 1 = Enable." />
      <BitField start="25" size="1" name="USB0D" description="Enables the clock for the USB0 device interface. 0 = Disable; 1 = Enable." />
      <BitField start="26" size="1" name="CTIMER0" description="Enables the clock for timer CTIMER0. 0 = Disable; 1 = Enable." />
      <BitField start="27" size="1" name="CTIMER1" description="Enables the clock for timer CTIMER1. 0 = Disable; 1 = Enable." />
    </Register>
    <Register start="+0x208" size="4" name="AHBCLKCTRL2" access="Read/Write" description="AHB Clock control n" reset_value="0" reset_mask="0xE4FFD87">
      <BitField start="2" size="1" name="LCD" description="Enables the clock for the LCD interface." />
      <BitField start="3" size="1" name="SDIO" description="Enables the clock for the SDIO interface." />
      <BitField start="4" size="1" name="USB1H" description="Enables the clock for the USB1 host interface." />
      <BitField start="5" size="1" name="USB1D" description="Enables the clock for the USB1 device interface." />
      <BitField start="6" size="1" name="USB1RAM" description="Enables the clock for the USB1 RAM interface." />
      <BitField start="7" size="1" name="EMC" description="Enables the clock for the EMC interface." />
      <BitField start="8" size="1" name="ETH" description="Enables the clock for the ethernet interface." />
      <BitField start="9" size="1" name="GPIO4" description="Enables the clock for the GPIO4 interface." />
      <BitField start="10" size="1" name="GPIO5" description="Enables the clock for the GPIO5 interface." />
      <BitField start="11" size="1" name="AES" description="Enables the clock for the AES interface." />
      <BitField start="12" size="1" name="OTP" description="Enables the clock for the OTP interface." />
      <BitField start="13" size="1" name="RNG" description="Enables the clock for the RNG interface." />
      <BitField start="14" size="1" name="FLEXCOMM8" description="Enables the clock for the Flexcomm8 interface." />
      <BitField start="15" size="1" name="FLEXCOMM9" description="Enables the clock for the Flexcomm9 interface." />
      <BitField start="16" size="1" name="USB0HMR" description="Enables the clock for the USB host master interface." />
      <BitField start="17" size="1" name="USB0HSL" description="Enables the clock for the USB host slave interface." />
      <BitField start="18" size="1" name="SHA0" description="Enables the clock for the SHA interface." />
      <BitField start="19" size="1" name="SC0" description="Enables the clock for the Smart card0 interface." />
      <BitField start="20" size="1" name="SC1" description="Enables the clock for the Smart card1 interface." />
    </Register>
    <Register start="+0x220" size="4" name="AHBCLKCTRLSET0" access="WriteOnly" description="Set bits in AHBCLKCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CLK_SET" description="Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x224" size="4" name="AHBCLKCTRLSET1" access="WriteOnly" description="Set bits in AHBCLKCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CLK_SET" description="Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x228" size="4" name="AHBCLKCTRLSET2" access="WriteOnly" description="Set bits in AHBCLKCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CLK_SET" description="Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x240" size="4" name="AHBCLKCTRLCLR0" access="WriteOnly" description="Clear bits in AHBCLKCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CLK_CLR" description="Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x244" size="4" name="AHBCLKCTRLCLR1" access="WriteOnly" description="Clear bits in AHBCLKCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CLK_CLR" description="Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x248" size="4" name="AHBCLKCTRLCLR2" access="WriteOnly" description="Clear bits in AHBCLKCTRLn" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CLK_CLR" description="Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x280" size="4" name="MAINCLKSELA" access="Read/Write" description="Main clock source select A" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="SEL" description="Clock source for main clock source selector A">
        <Enum name="0" start="0b00" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b01" description="CLKIN (clk_in)" />
        <Enum name="10" start="0b10" description="Watchdog oscillator (wdt_clk)" />
        <Enum name="11" start="0b11" description="FRO 96 or 48 MHz (fro_hf)" />
      </BitField>
    </Register>
    <Register start="+0x284" size="4" name="MAINCLKSELB" access="Read/Write" description="Main clock source select B" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="SEL" description="Clock source for main clock source selector B. Selects the clock source for the main clock.">
        <Enum name="0" start="0b00" description="MAINCLKSELA. Use the clock source selected in MAINCLKSELA register." />
        <Enum name="1" start="0b01" description="Reserved setting" />
        <Enum name="10" start="0b10" description="System PLL output (pll_clk)" />
        <Enum name="11" start="0b11" description="RTC oscillator 32 kHz output (32k_clk)" />
      </BitField>
    </Register>
    <Register start="+0x288" size="4" name="CLKOUTSELA" access="Read/Write" description="CLKOUT clock source select A" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="CLKOUT clock source selection">
        <Enum name="0" start="0b000" description="Main clock (main_clk)" />
        <Enum name="1" start="0b001" description="CLKIN (clk_in)" />
        <Enum name="10" start="0b010" description="Watchdog oscillator (wdt_clk)" />
        <Enum name="11" start="0b011" description="FRO 96 or 48 MHz (fro_hf)" />
        <Enum name="100" start="0b100" description="PLL output (pll_clk)" />
        <Enum name="101" start="0b101" description="USB PLL clock (usb_pll_clk)" />
        <Enum name="110" start="0b110" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="111" start="0b111" description="RTC oscillator 32 kHz output (32k_clk)" />
      </BitField>
    </Register>
    <Register start="+0x290" size="4" name="SYSPLLCLKSEL" access="Read/Write" description="PLL clock source select" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="System PLL clock source selection.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="CLKIN (clk_in)" />
        <Enum name="10" start="0b010" description="Watchdog oscillator (wdt_clk)" />
        <Enum name="11" start="0b011" description="RTC oscillator 32 kHz output (32k_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x298" size="4" name="AUDPLLCLKSEL" access="Read/Write" description="Audio PLL clock source select" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Audio PLL clock source selection.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="CLKIN (clk_in)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2A0" size="4" name="SPIFICLKSEL" access="Read/Write" description="SPIFI clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="System PLL clock source selection">
        <Enum name="0" start="0b000" description="Main clock (main_clk)" />
        <Enum name="1" start="0b001" description="System PLL output (pll_clk)" />
        <Enum name="10" start="0b010" description="USB PLL clock (usb_pll_clk)" />
        <Enum name="11" start="0b011" description="FRO 96 or 48 MHz (fro_hf)" />
        <Enum name="100" start="0b100" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2A4" size="4" name="ADCCLKSEL" access="Read/Write" description="ADC clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="ADC clock source selection">
        <Enum name="0" start="0b000" description="FRO 96 or 48 MHz (fro_hf)" />
        <Enum name="1" start="0b001" description="System PLL output (pll_clk)" />
        <Enum name="10" start="0b010" description="USB PLL clock (usb_pll_clk)" />
        <Enum name="11" start="0b011" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2A8" size="4" name="USB0CLKSEL" access="Read/Write" description="USB0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="USB0 device clock source selection.">
        <Enum name="0" start="0b000" description="FRO 96 or 48 MHz (fro_hf)" />
        <Enum name="1" start="0b001" description="System PLL output (pll_clk)" />
        <Enum name="10" start="0b010" description="USB PLL clock (usb_pll_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2AC" size="4" name="USB1CLKSEL" access="Read/Write" description="USB1 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="USB1 PHY clock source selection.">
        <Enum name="0" start="0b000" description="Main clock (main_clk)" />
        <Enum name="1" start="0b001" description="System PLL output (pll_clk)" />
        <Enum name="10" start="0b010" description="USB PLL clock (usb_pll_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2B0" size="4" name="FCLKSEL0" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2B4" size="4" name="FCLKSEL1" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2B8" size="4" name="FCLKSEL2" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2BC" size="4" name="FCLKSEL3" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2C0" size="4" name="FCLKSEL4" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2C4" size="4" name="FCLKSEL5" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2C8" size="4" name="FCLKSEL6" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2CC" size="4" name="FCLKSEL7" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2D0" size="4" name="FCLKSEL8" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2D4" size="4" name="FCLKSEL9" access="Read/Write" description="Flexcomm 0 clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Flexcomm clock source selection. One per Flexcomm.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="100" start="0b100" description="FRG clock, the output of the fractional rate generator (frg_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2E0" size="4" name="MCLKCLKSEL" access="Read/Write" description="MCLK clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="MCLK source select. This may be used by Flexcomms that support I2S, and/or by the digital microphone subsystem.">
        <Enum name="0" start="0b000" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="1" start="0b001" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2E8" size="4" name="FRGCLKSEL" access="Read/Write" description="Fractional Rate Generator clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="Fractional Rate Generator clock source select.">
        <Enum name="0" start="0b000" description="Main clock (main_clk)" />
        <Enum name="1" start="0b001" description="System PLL output (pll_clk)" />
        <Enum name="10" start="0b010" description="FRO 12 MHz (fro_12m)" />
        <Enum name="11" start="0b011" description="FRO 96 or 48 MHz (fro_hf)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2EC" size="4" name="DMICCLKSEL" access="Read/Write" description="Digital microphone (DMIC) subsystem clock select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="DMIC (audio subsystem) clock source select.">
        <Enum name="0" start="0b000" description="FRO 12 MHz (fro_12m)" />
        <Enum name="1" start="0b001" description="FRO HF DIV (fro_hf_div)" />
        <Enum name="10" start="0b010" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="11" start="0b011" description="MCLK pin input, when selected in IOCON (mclk_in)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2F0" size="4" name="SCTCLKSEL" access="Read/Write" description="SCTimer/PWM clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="SCT clock source select.">
        <Enum name="0" start="0b000" description="Main clock (main_clk)" />
        <Enum name="1" start="0b001" description="System PLL output (pll_clk)" />
        <Enum name="10" start="0b010" description="FRO 96 or 48 MHz (fro_hf)" />
        <Enum name="11" start="0b011" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2F4" size="4" name="LCDCLKSEL" access="Read/Write" description="LCD clock source select" reset_value="0x3" reset_mask="0x3">
      <BitField start="0" size="2" name="SEL" description="LCD clock source select.">
        <Enum name="0" start="0b00" description="Main clock (main_clk)" />
        <Enum name="1" start="0b01" description="LCDCLKIN (LCDCLK_EXT)" />
        <Enum name="10" start="0b10" description="FRO 96 or 48 MHz (fro_hf)" />
        <Enum name="11" start="0b11" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x2F8" size="4" name="SDIOCLKSEL" access="Read/Write" description="SDIO clock source select" reset_value="0x7" reset_mask="0x7">
      <BitField start="0" size="3" name="SEL" description="SDIO clock source select.">
        <Enum name="0" start="0b000" description="Main clock (main_clk)" />
        <Enum name="1" start="0b001" description="System PLL output (pll_clk)" />
        <Enum name="10" start="0b010" description="USB PLL clock (usb_pll_clk)" />
        <Enum name="11" start="0b011" description="FRO 96 or 48 MHz (fro_hf)" />
        <Enum name="100" start="0b100" description="Audio PLL clock (audio_pll_clk)" />
        <Enum name="111" start="0b111" description="None, this may be selected in order to reduce power when no output is needed." />
      </BitField>
    </Register>
    <Register start="+0x300" size="4" name="SYSTICKCLKDIV" access="Read/Write" description="SYSTICK clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x304" size="4" name="ARMTRACECLKDIV" access="Read/Write" description="ARM Trace clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x308" size="4" name="CAN0CLKDIV" access="Read/Write" description="MCAN0 clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x30C" size="4" name="CAN1CLKDIV" access="Read/Write" description="MCAN1 clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x310" size="4" name="SC0CLKDIV" access="Read/Write" description="Smartcard0 clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x314" size="4" name="SC1CLKDIV" access="Read/Write" description="Smartcard1 clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x380" size="4" name="AHBCLKDIV" access="Read/Write" description="AHB clock divider" reset_value="0" reset_mask="0x600000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x384" size="4" name="CLKOUTDIV" access="Read/Write" description="CLKOUT clock divider" reset_value="0x40000000" reset_mask="0x600000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x388" size="4" name="FROHFCLKDIV" access="Read/Write" description="FROHF clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x390" size="4" name="SPIFICLKDIV" access="Read/Write" description="SPIFI clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x394" size="4" name="ADCCLKDIV" access="Read/Write" description="ADC clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x398" size="4" name="USB0CLKDIV" access="Read/Write" description="USB0 clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x39C" size="4" name="USB1CLKDIV" access="Read/Write" description="USB1 clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x3A0" size="4" name="FRGCTRL" access="Read/Write" description="Fractional rate divider" reset_value="0xFF" reset_mask="0xFFFF">
      <BitField start="0" size="8" name="DIV" description="Denominator of the fractional divider. DIV is equal to the programmed value +1. Always set to 0xFF to use with the fractional baud rate generator." />
      <BitField start="8" size="8" name="MULT" description="Numerator of the fractional divider. MULT is equal to the programmed value." />
    </Register>
    <Register start="+0x3A8" size="4" name="DMICCLKDIV" access="Read/Write" description="DMIC clock divider" reset_value="0x40000000" reset_mask="0x600000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x3AC" size="4" name="MCLKDIV" access="Read/Write" description="I2S MCLK clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x3B0" size="4" name="LCDCLKDIV" access="Read/Write" description="LCD clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x3B4" size="4" name="SCTCLKDIV" access="Read/Write" description="SCT/PWM clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x3B8" size="4" name="EMCCLKDIV" access="Read/Write" description="EMC clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x3BC" size="4" name="SDIOCLKDIV" access="Read/Write" description="SDIO clock divider" reset_value="0x40000000" reset_mask="0xE00000FF">
      <BitField start="0" size="8" name="DIV" description="Clock divider value." />
      <BitField start="29" size="1" name="RESET" description="Resets the divider counter." />
      <BitField start="30" size="1" name="HALT" description="Halts the divider counter." />
      <BitField start="31" size="1" name="REQFLAG" description="Divider status flag." />
    </Register>
    <Register start="+0x400" size="4" name="FLASHCFG" access="Read/Write" description="Flash wait states configuration" reset_value="0xD1A" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="2" name="FETCHCFG" description="Instruction fetch configuration. This field determines how flash accelerator buffers are used for instruction fetches.">
        <Enum name="0" start="0b00" description="Instruction fetches from flash are not buffered. Every fetch request from the CPU results in a read of the flash memory. This setting may use significantly more power than when buffering is enabled." />
        <Enum name="1" start="0b01" description="One buffer is used for all instruction fetches." />
        <Enum name="10" start="0b10" description="All buffers may be used for instruction fetches." />
        <Enum name="11" start="0b11" description="Reserved setting, do not use." />
      </BitField>
      <BitField start="2" size="2" name="DATACFG" description="Data read configuration. This field determines how flash accelerator buffers are used for data accesses.">
        <Enum name="0" start="0b00" description="Data accesses from flash are not buffered. Every data access from the CPU results in a read of the flash memory." />
        <Enum name="1" start="0b01" description="One buffer is used for all data accesses." />
        <Enum name="10" start="0b10" description="All buffers may be used for data accesses." />
        <Enum name="11" start="0b11" description="Reserved setting, do not use." />
      </BitField>
      <BitField start="4" size="1" name="ACCEL" description="Acceleration enable.">
        <Enum name="0" start="0b0" description="Flash acceleration is disabled. Every flash read (including those fulfilled from a buffer) takes FLASHTIM + 1 system clocks. This allows more determinism at a cost of performance." />
        <Enum name="1" start="0b1" description="Flash acceleration is enabled. Performance is enhanced, dependent on other FLASHCFG settings." />
      </BitField>
      <BitField start="5" size="1" name="PREFEN" description="Prefetch enable.">
        <Enum name="0" start="0b0" description="No instruction prefetch is performed." />
        <Enum name="1" start="0b1" description="If the FETCHCFG field is not 0, the next flash line following the current execution address is automatically prefetched if it is not already buffered." />
      </BitField>
      <BitField start="6" size="1" name="PREFOVR" description="Prefetch override. This bit only applies when PREFEN = 1 and a buffered instruction is completing for which the next flash line is not already buffered or being prefetched.">
        <Enum name="0" start="0b0" description="Any previously initiated prefetch will be completed." />
        <Enum name="1" start="0b1" description="Any previously initiated prefetch will be aborted, and the next flash line following the current execution address will be prefetched if not already buffered." />
      </BitField>
      <BitField start="12" size="4" name="FLASHTIM" description="Flash memory access time. The number of system clocks used for flash accesses is equal to FLASHTIM +1.">
        <Enum name="0" start="0b0000" description="1 system clock flash access time (for system clock rates up to 12 MHz)." />
        <Enum name="1" start="0b0001" description="2 system clocks flash access time (for system clock rates up to 30 MHz)." />
        <Enum name="10" start="0b0010" description="3 system clocks flash access time (for system clock rates up to 60 MHz)." />
        <Enum name="11" start="0b0011" description="4 system clocks flash access time (for system clock rates up to 85 MHz)." />
        <Enum name="100" start="0b0100" description="5 system clocks flash access time (for system clock rates up to 100 MHz)." />
      </BitField>
    </Register>
    <Register start="+0x40C" size="4" name="USB0CLKCTRL" access="Read/Write" description="USB0 clock control" reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="AP_FS_DEV_CLK" description="USB0 Device USB0_NEEDCLK signal control." />
      <BitField start="1" size="1" name="POL_FS_DEV_CLK" description="USB0 Device USB0_NEEDCLK polarity for triggering the USB0 wake-up interrupt." />
      <BitField start="2" size="1" name="AP_FS_HOST_CLK" description="USB0 Host USB0_NEEDCLK signal control." />
      <BitField start="3" size="1" name="POL_FS_HOST_CLK" description="USB0 Host USB0_NEEDCLK polarity for triggering the USB0 wake-up interrupt." />
      <BitField start="4" size="1" name="PU_DISABLE" description="Internal pull-up disable control." />
    </Register>
    <Register start="+0x410" size="4" name="USB0CLKSTAT" access="Read/Write" description="USB0 clock status" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="DEV_NEED_CLKST" description="USB0 Device USB0_NEEDCLK signal status." />
      <BitField start="1" size="1" name="HOST_NEED_CLKST" description="USB0 Host USB0_NEEDCLK signal status." />
    </Register>
    <Register start="+0x418" size="4" name="FREQMECTRL" access="Read/Write" description="Frequency measure register" reset_value="0" reset_mask="0x80003FFF">
      <BitField start="0" size="14" name="CAPVAL" description="Stores the capture result which is used to calculate the frequency of the target clock. This field is read-only." />
      <BitField start="31" size="1" name="PROG" description="Set this bit to one to initiate a frequency measurement cycle. Hardware clears this bit when the measurement cycle has completed and there is valid capture data in the CAPVAL field (bits 13:0)." />
    </Register>
    <Register start="+0x420" size="4" name="MCLKIO" access="Read/Write" description="MCLK input/output control" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="DIR" description="MCLK direction control." />
    </Register>
    <Register start="+0x424" size="4" name="USB1CLKCTRL" access="Read/Write" description="USB1 clock control" reset_value="0x10" reset_mask="0x1F">
      <BitField start="0" size="1" name="AP_FS_DEV_CLK" description="USB1 Device need_clock signal control." />
      <BitField start="1" size="1" name="POL_FS_DEV_CLK" description="USB1 Device need_clock polarity for triggering the USB1 wake-up interrupt." />
      <BitField start="2" size="1" name="AP_FS_HOST_CLK" description="USB1 Host need_clock signal control." />
      <BitField start="3" size="1" name="POL_FS_HOST_CLK" description="USB1 Host need_clock polarity for triggering the USB1 wake-up interrupt." />
      <BitField start="4" size="1" name="HS_DEV_WAKEUP_N" description="External user wake-up signal for device mode; asserting this signal (active low) will result in exiting the low power mode; input to asynchronous control logic." />
    </Register>
    <Register start="+0x428" size="4" name="USB1CLKSTAT" access="Read/Write" description="USB1 clock status" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="DEV_NEED_CLKST" description="USB1 Device USB1_NEEDCLK signal status." />
      <BitField start="1" size="1" name="HOST_NEED_CLKST" description="USB1 Device host USB1_NEEDCLK signal status." />
    </Register>
    <Register start="+0x444" size="4" name="EMCSYSCTRL" access="Read/Write" description="EMC system control" reset_value="0x1" reset_mask="0xF">
      <BitField start="0" size="1" name="EMCSC" description="EMC Shift Control." />
      <BitField start="1" size="1" name="EMCRD" description="EMC Reset Disable." />
      <BitField start="2" size="1" name="EMCBC" description="External Memory Controller burst control." />
      <BitField start="3" size="1" name="EMCFBCLKINSEL" description="External Memory Controller clock select." />
    </Register>
    <Register start="+0x448" size="4" name="EMCDLYCTRL" access="Read/Write" description="EMC clock delay control" reset_value="0x210" reset_mask="0x1F1F">
      <BitField start="0" size="5" name="CMD_DELAY" description="Programmable delay value for EMC outputs in command delayed mode." />
      <BitField start="8" size="5" name="FBCLK_DELAY" description="Programmable delay value for the feedback clock that controls input data sampling." />
    </Register>
    <Register start="+0x44C" size="4" name="EMCDLYCAL" access="Read/Write" description="EMC delay chain calibration control" reset_value="0" reset_mask="0xC0FF">
      <BitField start="0" size="8" name="CALVALUE" description="Returns the count of the approximately 50 MHz ring oscillator that occur during 32 clocks of the FRO 12 MHz." />
      <BitField start="14" size="1" name="START" description="Start control bit for the EMC calibration counter." />
      <BitField start="15" size="1" name="DONE" description="Measurement completion flag." />
    </Register>
    <Register start="+0x450" size="4" name="ETHPHYSEL" access="Read/Write" description="Ethernet PHY Selection" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="PHY_SEL" description="PHY interface select." />
    </Register>
    <Register start="+0x454" size="4" name="ETHSBDCTRL" access="Read/Write" description="Ethernet SBD flow control" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="SBD_CTRL" description="Sideband Flow Control." />
    </Register>
    <Register start="+0x460" size="4" name="SDIOCLKCTRL" access="Read/Write" description="SDIO CCLKIN phase and delay control" reset_value="0" reset_mask="0x9F9F008F">
      <BitField start="0" size="2" name="CCLK_DRV_PHASE" description="Programmable delay value by which cclk_in_drv is phase-shifted with regard to cclk_in." />
      <BitField start="2" size="2" name="CCLK_SAMPLE_PHASE" description="Programmable delay value by which cclk_in_sample is delayed with regard to cclk_in." />
      <BitField start="7" size="1" name="PHASE_ACTIVE" description="sdio_clk by 2, before feeding into ccl_in, cclk_in_sample, and cclk_in_drv." />
      <BitField start="16" size="5" name="CCLK_DRV_DELAY" description="Programmable delay value by which cclk_in_drv is delayed with regard to cclk_in." />
      <BitField start="23" size="1" name="CCLK_DRV_DELAY_ACTIVE" description="Enables drive delay, as controlled by the CCLK_DRV_DELAY field." />
      <BitField start="24" size="5" name="CCLK_SAMPLE_DELAY" description="Programmable delay value by which cclk_in_sample is delayed with regard to cclk_in." />
      <BitField start="31" size="1" name="CCLK_SAMPLE_DELAY_ACTIVE" description="Enables sample delay, as controlled by the CCLK_SAMPLE_DELAY field." />
    </Register>
    <Register start="+0x500" size="4" name="FROCTRL" access="Read/Write" description="FRO oscillator control" reset_value="0x4000" reset_mask="0xC3FF7FFF">
      <BitField start="0" size="14" name="TRIM" description="This value is factory trimmed to account for bias and temperature compensation." />
      <BitField start="14" size="1" name="SEL" description="Select the FRO HF output frequency." />
      <BitField start="16" size="8" name="FREQTRIM" description="Frequency trim." />
      <BitField start="24" size="1" name="USBCLKADJ" description="USB clock adjust mode." />
      <BitField start="25" size="1" name="USBMODCHG" description="USB Mode value Change flag." />
      <BitField start="30" size="1" name="HSPDCLK" description="High speed clock enable." />
      <BitField start="31" size="1" name="WRTRIM" description="Write Trim value." />
    </Register>
    <Register start="+0x504" size="4" name="SYSOSCCTRL" access="Read/Write" description="System oscillator control" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="BYPASS" description="Bypass system oscillator." />
      <BitField start="1" size="1" name="FREQRANGE" description="Determines frequency range for system oscillator." />
    </Register>
    <Register start="+0x508" size="4" name="WDTOSCCTRL" access="Read/Write" description="Watchdog oscillator control" reset_value="0xA0" reset_mask="0x3FF">
      <BitField start="0" size="5" name="DIVSEL" description="Divider select." />
      <BitField start="5" size="5" name="FREQSEL" description="Frequency select." />
    </Register>
    <Register start="+0x50C" size="4" name="RTCOSCCTRL" access="Read/Write" description="RTC oscillator 32 kHz output control" reset_value="0x1" reset_mask="0x1">
      <BitField start="0" size="1" name="EN" description="RTC 32 kHz clock enable." />
    </Register>
    <Register start="+0x51C" size="4" name="USBPLLCTRL" access="Read/Write" description="USB PLL control" reset_value="0" reset_mask="0">
      <BitField start="0" size="8" name="MSEL" description="PLL feedback Divider value." />
      <BitField start="8" size="2" name="PSEL" description="PLL Divider value." />
      <BitField start="10" size="2" name="NSEL" description="PLL feedback Divider value." />
      <BitField start="12" size="1" name="DIRECT" description="Direct CCO clock output control.">
        <Enum name="0" start="0b0" description="CCO Clock signal goes through post divider." />
        <Enum name="1" start="0b1" description="CCO Clock signal goes directly to output(s).." />
      </BitField>
      <BitField start="13" size="1" name="BYPASS" description="Input clock bypass control.">
        <Enum name="0" start="0b0" description="CCO clock is sent to post dividers.." />
        <Enum name="1" start="0b1" description="PLL input clock is sent to post dividers.." />
      </BitField>
      <BitField start="14" size="1" name="FBSEL" description="Feedback divider input clock control." />
    </Register>
    <Register start="+0x520" size="4" name="USBPLLSTAT" access="Read/Write" description="USB PLL status" reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="LOCK" description="USBPLL lock indicator." />
    </Register>
    <Register start="+0x580" size="4" name="SYSPLLCTRL" access="Read/Write" description="System PLL control" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="4" name="SELR" description="Bandwidth select R value." />
      <BitField start="4" size="6" name="SELI" description="Bandwidth select I value." />
      <BitField start="10" size="5" name="SELP" description="Bandwidth select P value." />
      <BitField start="15" size="1" name="BYPASS" description="PLL bypass control.">
        <Enum name="0" start="0b0" description="Bypass disabled. PLL CCO is sent to the PLL post-dividers." />
        <Enum name="1" start="0b1" description="Bypass enabled. PLL input clock is sent directly to the PLL output (default)." />
      </BitField>
      <BitField start="17" size="1" name="UPLIMOFF" description="Disable upper frequency limiter." />
      <BitField start="19" size="1" name="DIRECTI" description="PLL0 direct input enable." />
      <BitField start="20" size="1" name="DIRECTO" description="PLL0 direct output enable.">
        <Enum name="0" start="0b0" description="Disabled. The PLL output divider (P divider) is used to create the PLL output." />
        <Enum name="1" start="0b1" description="Enabled. The PLL output divider (P divider) is bypassed, the PLL CCO output is used as the PLL output." />
      </BitField>
    </Register>
    <Register start="+0x584" size="4" name="SYSPLLSTAT" access="Read/Write" description="PLL status" reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="LOCK" description="PLL lock indicator." />
    </Register>
    <Register start="+0x588" size="4" name="SYSPLLNDEC" access="Read/Write" description="PLL N divider" reset_value="0" reset_mask="0">
      <BitField start="0" size="10" name="NDEC" description="Decoded N-divider coefficient value." />
      <BitField start="10" size="1" name="NREQ" description="NDEC reload request." />
    </Register>
    <Register start="+0x58C" size="4" name="SYSPLLPDEC" access="Read/Write" description="PLL P divider" reset_value="0" reset_mask="0">
      <BitField start="0" size="7" name="PDEC" description="Decoded P-divider coefficient value." />
      <BitField start="7" size="1" name="PREQ" description="." />
    </Register>
    <Register start="+0x590" size="4" name="SYSPLLMDEC" access="Read/Write" description="System PLL M divider" reset_value="0" reset_mask="0">
      <BitField start="0" size="17" name="MDEC" description="Decoded M-divider coefficient value." />
      <BitField start="17" size="1" name="MREQ" description="MDEC reload request." />
    </Register>
    <Register start="+0x5A0" size="4" name="AUDPLLCTRL" access="Read/Write" description="Audio PLL control" reset_value="0" reset_mask="0">
      <BitField start="0" size="4" name="SELR" description="Bandwidth select R value." />
      <BitField start="4" size="6" name="SELI" description="Bandwidth select I value." />
      <BitField start="10" size="5" name="SELP" description="." />
      <BitField start="15" size="1" name="BYPASS" description="PLL bypass control.">
        <Enum name="0" start="0b0" description="Bypass disabled. PLL CCO is sent to the PLL post-dividers." />
        <Enum name="1" start="0b1" description="Bypass enabled. PLL input clock is sent directly to the PLL output (default)." />
      </BitField>
      <BitField start="17" size="1" name="UPLIMOFF" description="Disable upper frequency limiter." />
      <BitField start="19" size="1" name="DIRECTI" description="PLL direct input enable." />
      <BitField start="20" size="1" name="DIRECTO" description="PLL direct output enable">
        <Enum name="0" start="0b0" description="Disabled. The PLL output divider (P divider) is used to create the PLL output." />
        <Enum name="1" start="0b1" description="Enabled. The PLL output divider (P divider) is bypassed, the PLL CCO output is used as the PLL output." />
      </BitField>
    </Register>
    <Register start="+0x5A4" size="4" name="AUDPLLSTAT" access="Read/Write" description="Audio PLL status" reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="LOCK" description="PLL lock indicator." />
    </Register>
    <Register start="+0x5A8" size="4" name="AUDPLLNDEC" access="Read/Write" description="Audio PLL N divider" reset_value="0" reset_mask="0">
      <BitField start="0" size="10" name="NDEC" description="Decoded N-divider coefficient value." />
      <BitField start="10" size="1" name="NREQ" description="NDEC reload request." />
    </Register>
    <Register start="+0x5AC" size="4" name="AUDPLLPDEC" access="Read/Write" description="Audio PLL P divider" reset_value="0" reset_mask="0">
      <BitField start="0" size="7" name="PDEC" description="Decoded P-divider coefficient value." />
      <BitField start="7" size="1" name="PREQ" description="PDEC reload request." />
    </Register>
    <Register start="+0x5B0" size="4" name="AUDPLLMDEC" access="Read/Write" description="Audio PLL M divider" reset_value="0" reset_mask="0">
      <BitField start="0" size="17" name="MDEC" description="Decoded M-divider coefficient value." />
      <BitField start="17" size="1" name="MREQ" description="MDEC reload request." />
    </Register>
    <Register start="+0x5B4" size="4" name="AUDPLLFRAC" access="Read/Write" description="Audio PLL fractional divider control" reset_value="0" reset_mask="0">
      <BitField start="0" size="22" name="CTRL" description="PLL fractional divider control word" />
      <BitField start="22" size="1" name="REQ" description="Writing 1 to REQ signal loads CTRL value into fractional wrapper modulator." />
      <BitField start="23" size="1" name="SEL_EXT" description="Select fractional divider." />
    </Register>
    <Register start="+0x600" size="4" name="PDSLEEPCFG0" access="Read/Write" description="Sleep configuration register" reset_value="0xF81F40" reset_mask="0xFBFFD0">
      <BitField start="4" size="1" name="PDEN_FRO" description="FRO oscillator." />
      <BitField start="6" size="1" name="PDEN_TS" description="Temp sensor." />
      <BitField start="7" size="1" name="PDEN_BOD_RST" description="Brown-out Detect reset." />
      <BitField start="8" size="1" name="PDEN_BOD_INTR" description="Brown-out Detect interrupt." />
      <BitField start="9" size="1" name="PDEN_VD2_ANA" description="Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23)." />
      <BitField start="10" size="1" name="PDEN_ADC0" description="ADC power." />
      <BitField start="13" size="1" name="PDEN_SRAMX" description="PDEN_SRAMX controls SRAMX (also enable/disable bit 27)." />
      <BitField start="14" size="1" name="PDEN_SRAM0" description="PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27)." />
      <BitField start="15" size="1" name="PDEN_SRAM1_2_3" description="PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27)." />
      <BitField start="16" size="1" name="PDEN_USB_RAM" description="PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27)." />
      <BitField start="17" size="1" name="PDEN_ROM" description="ROM (also enable/disable bit 27)." />
      <BitField start="19" size="1" name="PDEN_VDDA" description="Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23)." />
      <BitField start="20" size="1" name="PDEN_WDT_OSC" description="Watchdog oscillator." />
      <BitField start="21" size="1" name="PDEN_USB0_PHY" description="USB0 PHY power (also enable/disable bit 28)." />
      <BitField start="22" size="1" name="PDEN_SYS_PLL" description="System PLL (PLL0) power (also enable/disable bit 26)." />
      <BitField start="23" size="1" name="PDEN_VREFP" description="VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19)." />
      <BitField start="26" size="1" name="PDEN_VD3" description="Power control for all PLLs." />
      <BitField start="27" size="1" name="PDEN_VD4" description="Power control for all SRAMs and ROM." />
      <BitField start="28" size="1" name="PDEN_VD5" description="Power control both USB0 PHY and USB1 PHY." />
      <BitField start="29" size="1" name="PDEN_VD6" description="Power control for EEPROM." />
    </Register>
    <Register start="+0x604" size="4" name="PDSLEEPCFG1" access="Read/Write" description="Sleep configuration register" reset_value="0xF81F40" reset_mask="0xFBFFD0">
      <BitField start="0" size="1" name="PDEN_USB1_PHY" description="USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register)." />
      <BitField start="1" size="1" name="PDEN_USB1_PLL" description="USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register)." />
      <BitField start="2" size="1" name="PDEN_AUD_PLL" description="Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register)." />
      <BitField start="3" size="1" name="PDEN_SYSOSC" description="System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register)." />
      <BitField start="5" size="1" name="PDEN_EEPROM" description="EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register)." />
      <BitField start="7" size="1" name="PDEN_RNG" description="Random Number Generator Power." />
    </Register>
    <Register start="+0x610" size="4" name="PDRUNCFG0" access="Read/Write" description="Power configuration register" reset_value="0x14F81F40" reset_mask="0x3CFBFFD0">
      <BitField start="4" size="1" name="PDEN_FRO" description="FRO oscillator." />
      <BitField start="6" size="1" name="PDEN_TS" description="Temp sensor." />
      <BitField start="7" size="1" name="PDEN_BOD_RST" description="Brown-out Detect reset." />
      <BitField start="8" size="1" name="PDEN_BOD_INTR" description="Brown-out Detect interrupt." />
      <BitField start="9" size="1" name="PDEN_VD2_ANA" description="Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23)." />
      <BitField start="10" size="1" name="PDEN_ADC0" description="ADC power." />
      <BitField start="13" size="1" name="PDEN_SRAMX" description="PDEN_SRAMX controls SRAMX (also enable/disable bit 27)." />
      <BitField start="14" size="1" name="PDEN_SRAM0" description="PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27)." />
      <BitField start="15" size="1" name="PDEN_SRAM1_2_3" description="PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27)." />
      <BitField start="16" size="1" name="PDEN_USB_RAM" description="PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27)." />
      <BitField start="17" size="1" name="PDEN_ROM" description="ROM (also enable/disable bit 27)." />
      <BitField start="19" size="1" name="PDEN_VDDA" description="Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23)." />
      <BitField start="20" size="1" name="PDEN_WDT_OSC" description="Watchdog oscillator." />
      <BitField start="21" size="1" name="PDEN_USB0_PHY" description="USB0 PHY power (also enable/disable bit 28)." />
      <BitField start="22" size="1" name="PDEN_SYS_PLL" description="System PLL (PLL0) power (also enable/disable bit 26)." />
      <BitField start="23" size="1" name="PDEN_VREFP" description="VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19)." />
      <BitField start="26" size="1" name="PDEN_VD3" description="Power control for all PLLs." />
      <BitField start="27" size="1" name="PDEN_VD4" description="Power control for all SRAMs and ROM." />
      <BitField start="28" size="1" name="PDEN_VD5" description="Power control both USB0 PHY and USB1 PHY." />
      <BitField start="29" size="1" name="PDEN_VD6" description="Power control for EEPROM." />
    </Register>
    <Register start="+0x614" size="4" name="PDRUNCFG1" access="Read/Write" description="Power configuration register" reset_value="0x14F81F40" reset_mask="0x3CFBFFD0">
      <BitField start="0" size="1" name="PDEN_USB1_PHY" description="USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register)." />
      <BitField start="1" size="1" name="PDEN_USB1_PLL" description="USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register)." />
      <BitField start="2" size="1" name="PDEN_AUD_PLL" description="Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register)." />
      <BitField start="3" size="1" name="PDEN_SYSOSC" description="System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register)." />
      <BitField start="5" size="1" name="PDEN_EEPROM" description="EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register)." />
      <BitField start="7" size="1" name="PDEN_RNG" description="Random Number Generator Power." />
    </Register>
    <Register start="+0x620" size="4" name="PDRUNCFGSET0" access="Read/Write" description="Power configuration set register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="4" size="1" name="PDEN_FRO" description="FRO oscillator." />
      <BitField start="6" size="1" name="PDEN_TS" description="Temp sensor." />
      <BitField start="7" size="1" name="PDEN_BOD_RST" description="Brown-out Detect reset." />
      <BitField start="8" size="1" name="PDEN_BOD_INTR" description="Brown-out Detect interrupt." />
      <BitField start="9" size="1" name="PDEN_VD2_ANA" description="Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23)." />
      <BitField start="10" size="1" name="PDEN_ADC0" description="ADC power." />
      <BitField start="13" size="1" name="PDEN_SRAMX" description="PDEN_SRAMX controls SRAMX (also enable/disable bit 27)." />
      <BitField start="14" size="1" name="PDEN_SRAM0" description="PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27)." />
      <BitField start="15" size="1" name="PDEN_SRAM1_2_3" description="PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27)." />
      <BitField start="16" size="1" name="PDEN_USB_RAM" description="PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27)." />
      <BitField start="17" size="1" name="PDEN_ROM" description="ROM (also enable/disable bit 27)." />
      <BitField start="19" size="1" name="PDEN_VDDA" description="Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23)." />
      <BitField start="20" size="1" name="PDEN_WDT_OSC" description="Watchdog oscillator." />
      <BitField start="21" size="1" name="PDEN_USB0_PHY" description="USB0 PHY power (also enable/disable bit 28)." />
      <BitField start="22" size="1" name="PDEN_SYS_PLL" description="System PLL (PLL0) power (also enable/disable bit 26)." />
      <BitField start="23" size="1" name="PDEN_VREFP" description="VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19)." />
      <BitField start="26" size="1" name="PDEN_VD3" description="Power control for all PLLs." />
      <BitField start="27" size="1" name="PDEN_VD4" description="Power control for all SRAMs and ROM." />
      <BitField start="28" size="1" name="PDEN_VD5" description="Power control both USB0 PHY and USB1 PHY." />
      <BitField start="29" size="1" name="PDEN_VD6" description="Power control for EEPROM." />
    </Register>
    <Register start="+0x624" size="4" name="PDRUNCFGSET1" access="Read/Write" description="Power configuration set register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="1" name="PDEN_USB1_PHY" description="USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register)." />
      <BitField start="1" size="1" name="PDEN_USB1_PLL" description="USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register)." />
      <BitField start="2" size="1" name="PDEN_AUD_PLL" description="Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register)." />
      <BitField start="3" size="1" name="PDEN_SYSOSC" description="System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register)." />
      <BitField start="5" size="1" name="PDEN_EEPROM" description="EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register)." />
      <BitField start="7" size="1" name="PDEN_RNG" description="Random Number Generator Power." />
    </Register>
    <Register start="+0x630" size="4" name="PDRUNCFGCLR0" access="Read/Write" description="Power configuration clear register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="4" size="1" name="PDEN_FRO" description="FRO oscillator." />
      <BitField start="6" size="1" name="PDEN_TS" description="Temp sensor." />
      <BitField start="7" size="1" name="PDEN_BOD_RST" description="Brown-out Detect reset." />
      <BitField start="8" size="1" name="PDEN_BOD_INTR" description="Brown-out Detect interrupt." />
      <BitField start="9" size="1" name="PDEN_VD2_ANA" description="Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23)." />
      <BitField start="10" size="1" name="PDEN_ADC0" description="ADC power." />
      <BitField start="13" size="1" name="PDEN_SRAMX" description="PDEN_SRAMX controls SRAMX (also enable/disable bit 27)." />
      <BitField start="14" size="1" name="PDEN_SRAM0" description="PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27)." />
      <BitField start="15" size="1" name="PDEN_SRAM1_2_3" description="PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27)." />
      <BitField start="16" size="1" name="PDEN_USB_RAM" description="PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27)." />
      <BitField start="17" size="1" name="PDEN_ROM" description="ROM (also enable/disable bit 27)." />
      <BitField start="19" size="1" name="PDEN_VDDA" description="Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23)." />
      <BitField start="20" size="1" name="PDEN_WDT_OSC" description="Watchdog oscillator." />
      <BitField start="21" size="1" name="PDEN_USB0_PHY" description="USB0 PHY power (also enable/disable bit 28)." />
      <BitField start="22" size="1" name="PDEN_SYS_PLL" description="System PLL (PLL0) power (also enable/disable bit 26)." />
      <BitField start="23" size="1" name="PDEN_VREFP" description="VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19)." />
      <BitField start="26" size="1" name="PDEN_VD3" description="Power control for all PLLs." />
      <BitField start="27" size="1" name="PDEN_VD4" description="Power control for all SRAMs and ROM." />
      <BitField start="28" size="1" name="PDEN_VD5" description="Power control both USB0 PHY and USB1 PHY." />
      <BitField start="29" size="1" name="PDEN_VD6" description="Power control for EEPROM." />
    </Register>
    <Register start="+0x634" size="4" name="PDRUNCFGCLR1" access="Read/Write" description="Power configuration clear register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="1" name="PDEN_USB1_PHY" description="USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register)." />
      <BitField start="1" size="1" name="PDEN_USB1_PLL" description="USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register)." />
      <BitField start="2" size="1" name="PDEN_AUD_PLL" description="Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register)." />
      <BitField start="3" size="1" name="PDEN_SYSOSC" description="System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register)." />
      <BitField start="5" size="1" name="PDEN_EEPROM" description="EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register)." />
      <BitField start="7" size="1" name="PDEN_RNG" description="Random Number Generator Power." />
    </Register>
    <Register start="+0x680" size="4" name="STARTER0" access="Read/Write" description="Start logic 0 wake-up enable register" reset_value="0" reset_mask="0x3FFFFFFF">
      <BitField start="0" size="1" name="WDT_BOD" description="WWDT and BOD interrupt wake-up." />
      <BitField start="1" size="1" name="DMA" description="DMA wake-up." />
      <BitField start="2" size="1" name="GINT0" description="Group interrupt 0 wake-up." />
      <BitField start="3" size="1" name="GINT1" description="Group interrupt 1 wake-up." />
      <BitField start="4" size="1" name="PIN_INT0" description="GPIO pin interrupt 0 wake-up." />
      <BitField start="5" size="1" name="PIN_INT1" description="GPIO pin interrupt 1 wake-up." />
      <BitField start="6" size="1" name="PIN_INT2" description="GPIO pin interrupt 2 wake-up." />
      <BitField start="7" size="1" name="PIN_INT3" description="GPIO pin interrupt 3 wake-up." />
      <BitField start="8" size="1" name="UTICK" description="Micro-tick Timer wake-up." />
      <BitField start="9" size="1" name="MRT" description="Multi-Rate Timer wake-up." />
      <BitField start="10" size="1" name="CTIMER0" description="Standard counter/timer CTIMER0 wake-up." />
      <BitField start="11" size="1" name="CTIMER1" description="Standard counter/timer CTIMER1 wake-up." />
      <BitField start="12" size="1" name="SCT0" description="SCT0 wake-up." />
      <BitField start="13" size="1" name="CTIMER3" description="Standard counter/timer CTIMER3 wake-up." />
      <BitField start="14" size="1" name="FLEXCOMM0" description="Flexcomm0 peripheral interrupt wake-up." />
      <BitField start="15" size="1" name="FLEXCOMM1" description="Flexcomm1 peripheral interrupt wake-up." />
      <BitField start="16" size="1" name="FLEXCOMM2" description="Flexcomm2 peripheral interrupt wake-up." />
      <BitField start="17" size="1" name="FLEXCOMM3" description="Flexcomm3 peripheral interrupt wake-up." />
      <BitField start="18" size="1" name="FLEXCOMM4" description="Flexcomm4 peripheral interrupt wake-up." />
      <BitField start="19" size="1" name="FLEXCOMM5" description="Flexcomm5 peripheral interrupt wake-up." />
      <BitField start="20" size="1" name="FLEXCOMM6" description="Flexcomm6 peripheral interrupt wake-up." />
      <BitField start="21" size="1" name="FLEXCOMM7" description="Flexcomm7 peripheral interrupt wake-up." />
      <BitField start="22" size="1" name="ADC0_SEQA" description="ADC0 sequence A interrupt wake-up." />
      <BitField start="23" size="1" name="ADC0_SEQB" description="ADC0 sequence B interrupt wake-up." />
      <BitField start="24" size="1" name="ADC0_THCMP" description="ADC0 threshold and error interrupt wake-up." />
      <BitField start="25" size="1" name="DMIC" description="Digital microphone interrupt wake-up." />
      <BitField start="26" size="1" name="HWVAD" description="Hardware voice activity detect interrupt wake-up." />
      <BitField start="27" size="1" name="USB0_NEEDCLK" description="USB activity interrupt wake-up." />
      <BitField start="28" size="1" name="USB0" description="USB function interrupt wake-up." />
      <BitField start="29" size="1" name="RTC" description="RTC interrupt alarm and wake-up timer." />
    </Register>
    <Register start="+0x684" size="4" name="STARTER1" access="Read/Write" description="Start logic 0 wake-up enable register" reset_value="0" reset_mask="0x3FFFFFFF">
      <BitField start="0" size="1" name="PINT4" description="GPIO pin interrupt 4 wake-up." />
      <BitField start="1" size="1" name="PINT5" description="GPIO pin interrupt 5 wake-up." />
      <BitField start="2" size="1" name="PINT6" description="GPIO pin interrupt 6 wake-up." />
      <BitField start="3" size="1" name="PINT7" description="GPIO pin interrupt 7 wake-up." />
      <BitField start="4" size="1" name="CTIMER2" description="Standard counter/timer CTIMER2 wake-up." />
      <BitField start="5" size="1" name="CTIMER4" description="Standard counter/timer CTIMER4 wake-up." />
      <BitField start="7" size="1" name="SPIFI" description="SPIFI interrupt wake-up. 0 = Wake-up disabled. 1 = Wake-up enabled." />
      <BitField start="8" size="1" name="FLEXCOMM8" description="Flexcomm Interface 8 wake-up." />
      <BitField start="9" size="1" name="FLEXCOMM9" description="Flexcomm Interface 9 wake-up." />
      <BitField start="15" size="1" name="USB1" description="USB 1 wake-up." />
      <BitField start="16" size="1" name="USB1_ACT" description="USB 1 activity wake-up." />
      <BitField start="17" size="1" name="ENET_INT1" description="Ethernet." />
      <BitField start="18" size="1" name="ENET_INT2" description="Ethernet." />
      <BitField start="19" size="1" name="ENET_INT0" description="Ethernet." />
      <BitField start="23" size="1" name="SMARTCARD0" description="Smart card 0 wake-up." />
      <BitField start="24" size="1" name="SMARTCARD1" description="Smart card 1 wake-up." />
    </Register>
    <Register start="+0x6A0" size="4" name="STARTERSET0" access="WriteOnly" description="Set bits in STARTER" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="START_SET" description="Writing ones to this register sets the corresponding bit or bits in the STARTER0 register, if they are implemented." />
    </Register>
    <Register start="+0x6A4" size="4" name="STARTERSET1" access="WriteOnly" description="Set bits in STARTER" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="START_SET" description="Writing ones to this register sets the corresponding bit or bits in the STARTER0 register, if they are implemented." />
    </Register>
    <Register start="+0x6C0" size="4" name="STARTERCLR0" access="WriteOnly" description="Clear bits in STARTER0" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="START_CLR" description="Writing ones to this register clears the corresponding bit or bits in the STARTER0 register, if they are implemented." />
    </Register>
    <Register start="+0x6C4" size="4" name="STARTERCLR1" access="WriteOnly" description="Clear bits in STARTER0" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="START_CLR" description="Writing ones to this register clears the corresponding bit or bits in the STARTER0 register, if they are implemented." />
    </Register>
    <Register start="+0x780" size="4" name="HWWAKE" access="Read/Write" description="Configures special cases of hardware wake-up" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="FORCEWAKE" description="Force peripheral clocking to stay on during Deep Sleep and Power-down modes. When 1, clocking to peripherals is prevented from being shut down when the CPU enters Deep Sleep and Power-down modes. This is intended to allow a coprocessor to continue operating while the main CPU(s) are shut down." />
      <BitField start="1" size="1" name="FCWAKE" description="Wake for Flexcomms. When 1, any Flexcomm FIFO reaching the level specified by its own TXLVL will cause peripheral clocking to wake up temporarily while the related status is asserted." />
      <BitField start="2" size="1" name="WAKEDMIC" description="Wake for Digital Microphone. When 1, the digital microphone input FIFO reaching the level specified by TRIGLVL of either channel will cause peripheral clocking to wake up temporarily while the related status is asserted." />
      <BitField start="3" size="1" name="WAKEDMA" description="Wake for DMA. When 1, DMA being busy will cause peripheral clocking to remain running until DMA completes. This is generally used in conjunction with bit 1 and/or 2 in order to prevent peripheral clocking from being shut down as soon as the cause of wake-up is cleared, but before DMA has completed its related activity." />
    </Register>
    <Register start="+0xE04" size="4" name="AUTOCGOR" access="Read/Write" description="Auto Clock-Gate Override Register" reset_value="0" reset_mask="0xE">
      <BitField start="1" size="1" name="RAM0X" description="When 1, automatic clock gating for RAMX and RAM0 are turned off." />
      <BitField start="2" size="1" name="RAM1" description="When 1, automatic clock gating for RAM1 are turned off." />
      <BitField start="3" size="1" name="RAM2" description="When 1, automatic clock gating for RAM1 are turned off." />
      <BitField start="4" size="1" name="RAM3" description="When 1, automatic clock gating for RAM1 are turned off." />
    </Register>
    <Register start="+0xFF4" size="4" name="JTAGIDCODE" access="ReadOnly" description="JTAG ID code register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="JTAGID" description="JTAG ID code." />
    </Register>
    <Register start="+0xFF8" size="4" name="DEVICE_ID0" access="ReadOnly" description="Part ID register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PARTID" description="Part ID" />
    </Register>
    <Register start="+0xFFC" size="4" name="DEVICE_ID1" access="ReadOnly" description="Boot ROM and die revision register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="REVID" description="Revision." />
    </Register>
    <Register start="+0x20044" size="4" name="BODCTRL" access="Read/Write" description="Brown-Out Detect control" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="2" name="BODRSTLEV" description="BOD reset level">
        <Enum name="0" start="0b00" description="Level 0: 1.5 V" />
        <Enum name="1" start="0b01" description="Level 1: 1.85 V" />
        <Enum name="10" start="0b10" description="Level 2: 2.0 V" />
        <Enum name="11" start="0b11" description="Level 3: 2.3 V" />
      </BitField>
      <BitField start="2" size="1" name="BODRSTENA" description="BOD reset enable">
        <Enum name="0" start="0b0" description="Disable reset function." />
        <Enum name="1" start="0b1" description="Enable reset function." />
      </BitField>
      <BitField start="3" size="2" name="BODINTLEV" description="BOD interrupt level">
        <Enum name="0" start="0b00" description="Level 0: 2.05 V" />
        <Enum name="1" start="0b01" description="Level 1: 2.45 V" />
        <Enum name="10" start="0b10" description="Level 2: 2.75 V" />
        <Enum name="11" start="0b11" description="Level 3: 3.05 V" />
      </BitField>
      <BitField start="5" size="1" name="BODINTENA" description="BOD interrupt enable">
        <Enum name="0" start="0b0" description="Disable interrupt function." />
        <Enum name="1" start="0b1" description="Enable interrupt function." />
      </BitField>
      <BitField start="6" size="1" name="BODRSTSTAT" description="BOD reset status. When 1, a BOD reset has occurred. Cleared by writing 1 to this bit." />
      <BitField start="7" size="1" name="BODINTSTAT" description="BOD interrupt status. When 1, a BOD interrupt has occurred. Cleared by writing 1 to this bit." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="IOCON" start="0x40001000" description="LPC5411x I/O pin configuration (IOCON)">
    <Register start="+0" size="4" name="PIO00" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_0" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="PIO01" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_1" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="PIO02" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_2" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xC" size="4" name="PIO03" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_3" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x10" size="4" name="PIO04" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_4" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x14" size="4" name="PIO05" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_5" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x18" size="4" name="PIO06" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_6" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1C" size="4" name="PIO07" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_7" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x20" size="4" name="PIO08" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_8" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x24" size="4" name="PIO09" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_9" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x28" size="4" name="PIO010" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_10" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2C" size="4" name="PIO011" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_11" reset_value="0x326" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x30" size="4" name="PIO012" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_12" reset_value="0x326" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x34" size="4" name="PIO013" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_13" reset_value="0x340" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="6" size="1" name="I2CSLEW" description="Controls slew rate of I2C pad.">
        <Enum name="0" start="0b0" description="I2C mode." />
        <Enum name="1" start="0b1" description="GPIO mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="I2CDRIVE" description="Controls the current sink capability of the pin.">
        <Enum name="0" start="0b0" description="Low drive. Output drive sink is 4 mA. This is sufficient for standard and fast mode I2C." />
        <Enum name="1" start="0b1" description="High drive. Output drive sink is 20 mA. This is needed for Fast Mode Plus I 2C. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="I2CFILTER" description="Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation.">
        <Enum name="0" start="0b0" description="Enabled. I2C 50 ns glitch filter enabled." />
        <Enum name="1" start="0b1" description="Disabled. I2C 50 ns glitch filter disabled." />
      </BitField>
    </Register>
    <Register start="+0x38" size="4" name="PIO014" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_14" reset_value="0x340" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="6" size="1" name="I2CSLEW" description="Controls slew rate of I2C pad.">
        <Enum name="0" start="0b0" description="I2C mode." />
        <Enum name="1" start="0b1" description="GPIO mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="I2CDRIVE" description="Controls the current sink capability of the pin.">
        <Enum name="0" start="0b0" description="Low drive. Output drive sink is 4 mA. This is sufficient for standard and fast mode I2C." />
        <Enum name="1" start="0b1" description="High drive. Output drive sink is 20 mA. This is needed for Fast Mode Plus I 2C. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="I2CFILTER" description="Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation.">
        <Enum name="0" start="0b0" description="Enabled. I2C 50 ns glitch filter enabled." />
        <Enum name="1" start="0b1" description="Disabled. I2C 50 ns glitch filter disabled." />
      </BitField>
    </Register>
    <Register start="+0x3C" size="4" name="PIO015" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_15" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x40" size="4" name="PIO016" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_16" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x44" size="4" name="PIO017" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_17" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x48" size="4" name="PIO018" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_18" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x4C" size="4" name="PIO019" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_19" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x50" size="4" name="PIO020" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_20" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x54" size="4" name="PIO021" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_21" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x58" size="4" name="PIO022" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_22" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x5C" size="4" name="PIO023" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_23" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x60" size="4" name="PIO024" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_24" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x64" size="4" name="PIO025" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_25" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x68" size="4" name="PIO026" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_26" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x6C" size="4" name="PIO027" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_27" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x70" size="4" name="PIO028" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_28" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x74" size="4" name="PIO029" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_29" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x78" size="4" name="PIO030" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_30" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x7C" size="4" name="PIO031" access="Read/Write" description="Digital I/O control for port 0 pins PIO0_31" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x80" size="4" name="PIO10" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_0" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x84" size="4" name="PIO11" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_1" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x88" size="4" name="PIO12" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_2" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x8C" size="4" name="PIO13" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_3" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x90" size="4" name="PIO14" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_4" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x94" size="4" name="PIO15" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_5" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x98" size="4" name="PIO16" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_6" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x9C" size="4" name="PIO17" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_7" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xA0" size="4" name="PIO18" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_8" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xA4" size="4" name="PIO19" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_9" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xA8" size="4" name="PIO110" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_10" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xAC" size="4" name="PIO111" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_11" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xB0" size="4" name="PIO112" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_12" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xB4" size="4" name="PIO113" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_13" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xB8" size="4" name="PIO114" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_14" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xBC" size="4" name="PIO115" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_15" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xC0" size="4" name="PIO116" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_16" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xC4" size="4" name="PIO117" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_17" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xC8" size="4" name="PIO118" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_18" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xCC" size="4" name="PIO119" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_19" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xD0" size="4" name="PIO120" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_20" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xD4" size="4" name="PIO121" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_21" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xD8" size="4" name="PIO122" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_22" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xDC" size="4" name="PIO123" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_23" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xE0" size="4" name="PIO124" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_24" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xE4" size="4" name="PIO125" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_25" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xE8" size="4" name="PIO126" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_26" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xEC" size="4" name="PIO127" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_27" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xF0" size="4" name="PIO128" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_28" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xF4" size="4" name="PIO129" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_29" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xF8" size="4" name="PIO130" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_30" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0xFC" size="4" name="PIO131" access="Read/Write" description="Digital I/O control for port 1 pins PIO1_31" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x100" size="4" name="PIO20" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_0" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x104" size="4" name="PIO21" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_1" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x108" size="4" name="PIO22" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_2" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x10C" size="4" name="PIO23" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_3" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x110" size="4" name="PIO24" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_4" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x114" size="4" name="PIO25" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_5" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x118" size="4" name="PIO26" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_6" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x11C" size="4" name="PIO27" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_7" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x120" size="4" name="PIO28" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_8" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x124" size="4" name="PIO29" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_9" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x128" size="4" name="PIO210" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_10" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x12C" size="4" name="PIO211" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_11" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x130" size="4" name="PIO212" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_12" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x134" size="4" name="PIO213" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_13" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x138" size="4" name="PIO214" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_14" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x13C" size="4" name="PIO215" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_15" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x140" size="4" name="PIO216" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_16" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x144" size="4" name="PIO217" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_17" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x148" size="4" name="PIO218" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_18" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x14C" size="4" name="PIO219" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_19" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x150" size="4" name="PIO220" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_20" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x154" size="4" name="PIO221" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_21" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x158" size="4" name="PIO222" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_22" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x15C" size="4" name="PIO223" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_23" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x160" size="4" name="PIO224" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_24" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x164" size="4" name="PIO225" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_25" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x168" size="4" name="PIO226" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_26" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x16C" size="4" name="PIO227" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_27" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x170" size="4" name="PIO228" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_28" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x174" size="4" name="PIO229" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_29" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x178" size="4" name="PIO230" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_30" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x17C" size="4" name="PIO231" access="Read/Write" description="Digital I/O control for port 2 pins PIO2_31" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x180" size="4" name="PIO30" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_0" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x184" size="4" name="PIO31" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_1" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x188" size="4" name="PIO32" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_2" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x18C" size="4" name="PIO33" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_3" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x190" size="4" name="PIO34" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_4" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x194" size="4" name="PIO35" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_5" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x198" size="4" name="PIO36" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_6" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x19C" size="4" name="PIO37" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_7" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1A0" size="4" name="PIO38" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_8" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1A4" size="4" name="PIO39" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_9" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1A8" size="4" name="PIO310" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_10" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1AC" size="4" name="PIO311" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_11" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1B0" size="4" name="PIO312" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_12" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1B4" size="4" name="PIO313" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_13" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1B8" size="4" name="PIO314" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_14" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1BC" size="4" name="PIO315" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_15" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1C0" size="4" name="PIO316" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_16" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1C4" size="4" name="PIO317" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_17" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1C8" size="4" name="PIO318" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_18" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1CC" size="4" name="PIO319" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_19" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1D0" size="4" name="PIO320" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_20" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1D4" size="4" name="PIO321" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_21" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1D8" size="4" name="PIO322" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_22" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1DC" size="4" name="PIO323" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_23" reset_value="0x340" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="6" size="1" name="I2CSLEW" description="Controls slew rate of I2C pad.">
        <Enum name="0" start="0b0" description="I2C mode." />
        <Enum name="1" start="0b1" description="GPIO mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="I2CDRIVE" description="Controls the current sink capability of the pin.">
        <Enum name="0" start="0b0" description="Low drive. Output drive sink is 4 mA. This is sufficient for standard and fast mode I2C." />
        <Enum name="1" start="0b1" description="High drive. Output drive sink is 20 mA. This is needed for Fast Mode Plus I 2C. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="I2CFILTER" description="Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation.">
        <Enum name="0" start="0b0" description="Enabled. I2C 50 ns glitch filter enabled." />
        <Enum name="1" start="0b1" description="Disabled. I2C 50 ns glitch filter disabled." />
      </BitField>
    </Register>
    <Register start="+0x1E0" size="4" name="PIO324" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_24" reset_value="0x340" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="6" size="1" name="I2CSLEW" description="Controls slew rate of I2C pad.">
        <Enum name="0" start="0b0" description="I2C mode." />
        <Enum name="1" start="0b1" description="GPIO mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="I2CDRIVE" description="Controls the current sink capability of the pin.">
        <Enum name="0" start="0b0" description="Low drive. Output drive sink is 4 mA. This is sufficient for standard and fast mode I2C." />
        <Enum name="1" start="0b1" description="High drive. Output drive sink is 20 mA. This is needed for Fast Mode Plus I 2C. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="I2CFILTER" description="Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation.">
        <Enum name="0" start="0b0" description="Enabled. I2C 50 ns glitch filter enabled." />
        <Enum name="1" start="0b1" description="Disabled. I2C 50 ns glitch filter disabled." />
      </BitField>
    </Register>
    <Register start="+0x1E4" size="4" name="PIO325" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_25" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1E8" size="4" name="PIO326" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_26" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1EC" size="4" name="PIO327" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_27" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1F0" size="4" name="PIO328" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_28" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1F4" size="4" name="PIO329" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_29" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1F8" size="4" name="PIO330" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_30" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x1FC" size="4" name="PIO331" access="Read/Write" description="Digital I/O control for port 3 pins PIO3_31" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x200" size="4" name="PIO40" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_0" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x204" size="4" name="PIO41" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_1" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x208" size="4" name="PIO42" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_2" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x20C" size="4" name="PIO43" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_3" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x210" size="4" name="PIO44" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_4" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x214" size="4" name="PIO45" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_5" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x218" size="4" name="PIO46" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_6" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x21C" size="4" name="PIO47" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_7" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x220" size="4" name="PIO48" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_8" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x224" size="4" name="PIO49" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_9" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x228" size="4" name="PIO410" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_10" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x22C" size="4" name="PIO411" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_11" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x230" size="4" name="PIO412" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_12" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x234" size="4" name="PIO413" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_13" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x238" size="4" name="PIO414" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_14" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x23C" size="4" name="PIO415" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_15" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x240" size="4" name="PIO416" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_16" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x244" size="4" name="PIO417" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_17" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x248" size="4" name="PIO418" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_18" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x24C" size="4" name="PIO419" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_19" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x250" size="4" name="PIO420" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_20" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x254" size="4" name="PIO421" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_21" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x258" size="4" name="PIO422" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_22" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x25C" size="4" name="PIO423" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_23" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x260" size="4" name="PIO424" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_24" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x264" size="4" name="PIO425" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_25" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x268" size="4" name="PIO426" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_26" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x26C" size="4" name="PIO427" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_27" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x270" size="4" name="PIO428" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_28" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x274" size="4" name="PIO429" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_29" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x278" size="4" name="PIO430" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_30" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x27C" size="4" name="PIO431" access="Read/Write" description="Digital I/O control for port 4 pins PIO4_31" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x280" size="4" name="PIO50" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_0" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x284" size="4" name="PIO51" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_1" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x288" size="4" name="PIO52" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_2" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x28C" size="4" name="PIO53" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_3" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x290" size="4" name="PIO54" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_4" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x294" size="4" name="PIO55" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_5" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x298" size="4" name="PIO56" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_6" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x29C" size="4" name="PIO57" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_7" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2A0" size="4" name="PIO58" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_8" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2A4" size="4" name="PIO59" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_9" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2A8" size="4" name="PIO510" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_10" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2AC" size="4" name="PIO511" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_11" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2B0" size="4" name="PIO512" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_12" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2B4" size="4" name="PIO513" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_13" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2B8" size="4" name="PIO514" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_14" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2BC" size="4" name="PIO515" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_15" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2C0" size="4" name="PIO516" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_16" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2C4" size="4" name="PIO517" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_17" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2C8" size="4" name="PIO518" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_18" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2CC" size="4" name="PIO519" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_19" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2D0" size="4" name="PIO520" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_20" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2D4" size="4" name="PIO521" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_21" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2D8" size="4" name="PIO522" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_22" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2DC" size="4" name="PIO523" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_23" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2E0" size="4" name="PIO524" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_24" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2E4" size="4" name="PIO525" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_25" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2E8" size="4" name="PIO526" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_26" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2EC" size="4" name="PIO527" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_27" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2F0" size="4" name="PIO528" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_28" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2F4" size="4" name="PIO529" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_29" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2F8" size="4" name="PIO530" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_30" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
    <Register start="+0x2FC" size="4" name="PIO531" access="Read/Write" description="Digital I/O control for port 5 pins PIO5_31" reset_value="0x320" reset_mask="0xFFF">
      <BitField start="0" size="4" name="FUNC" description="Selects pin function.">
        <Enum name="0" start="0b0000" description="Alternative connection 0." />
        <Enum name="1" start="0b0001" description="Alternative connection 1." />
        <Enum name="2" start="0b0010" description="Alternative connection 2." />
        <Enum name="3" start="0b0011" description="Alternative connection 3." />
        <Enum name="4" start="0b0100" description="Alternative connection 4." />
        <Enum name="5" start="0b0101" description="Alternative connection 5." />
        <Enum name="6" start="0b0110" description="Alternative connection 6." />
        <Enum name="7" start="0b0111" description="Alternative connection 7." />
      </BitField>
      <BitField start="4" size="2" name="MODE" description="Selects function mode (on-chip pull-up/pull-down resistor control).">
        <Enum name="0" start="0b00" description="Inactive. Inactive (no pull-down/pull-up resistor enabled)." />
        <Enum name="1" start="0b01" description="Pull-down. Pull-down resistor enabled." />
        <Enum name="10" start="0b10" description="Pull-up. Pull-up resistor enabled." />
        <Enum name="11" start="0b11" description="Repeater. Repeater mode." />
      </BitField>
      <BitField start="7" size="1" name="INVERT" description="Input polarity.">
        <Enum name="0" start="0b0" description="Disabled. Input function is not inverted." />
        <Enum name="1" start="0b1" description="Enabled. Input is function inverted." />
      </BitField>
      <BitField start="8" size="1" name="DIGIMODE" description="Select Analog/Digital mode.">
        <Enum name="0" start="0b0" description="Analog mode." />
        <Enum name="1" start="0b1" description="Digital mode." />
      </BitField>
      <BitField start="9" size="1" name="FILTEROFF" description="Controls input glitch filter.">
        <Enum name="0" start="0b0" description="Filter enabled. Noise pulses below approximately 10 ns are filtered out." />
        <Enum name="1" start="0b1" description="Filter disabled. No input filtering is done." />
      </BitField>
      <BitField start="10" size="1" name="SLEW" description="Driver slew rate.">
        <Enum name="0" start="0b0" description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously." />
        <Enum name="1" start="0b1" description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details." />
      </BitField>
      <BitField start="11" size="1" name="OD" description="Controls open-drain mode.">
        <Enum name="0" start="0b0" description="Normal. Normal push-pull output" />
        <Enum name="1" start="0b1" description="Open-drain. Simulated open-drain output (high drive disabled)." />
      </BitField>
    </Register>
  </RegisterGroup>
  <RegisterGroup name="GINT0" start="0x40002000" description="LPC5411x Group GPIO input interrupt (GINT0/1)">
    <Register start="+0" size="4" name="CTRL" access="Read/Write" description="GPIO grouped interrupt control register" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INT" description="Group interrupt status. This bit is cleared by writing a one to it. Writing zero has no effect.">
        <Enum name="0" start="0b0" description="No request. No interrupt request is pending." />
        <Enum name="1" start="0b1" description="Request active. Interrupt request is active." />
      </BitField>
      <BitField start="1" size="1" name="COMB" description="Combine enabled inputs for group interrupt">
        <Enum name="0" start="0b0" description="Or. OR functionality: A grouped interrupt is generated when any one of the enabled inputs is active (based on its programmed polarity)." />
        <Enum name="1" start="0b1" description="And. AND functionality: An interrupt is generated when all enabled bits are active (based on their programmed polarity)." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Group interrupt trigger">
        <Enum name="0" start="0b0" description="Edge-triggered." />
        <Enum name="1" start="0b1" description="Level-triggered." />
      </BitField>
    </Register>
    <Register start="+0x20" size="4" name="PORT_POL0" access="Read/Write" description="GPIO grouped interrupt port 0 polarity register" reset_value="0xFFFFFFFF" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="POL" description="Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt." />
    </Register>
    <Register start="+0x24" size="4" name="PORT_POL1" access="Read/Write" description="GPIO grouped interrupt port 0 polarity register" reset_value="0xFFFFFFFF" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="POL" description="Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt." />
    </Register>
    <Register start="+0x40" size="4" name="PORT_ENA0" access="Read/Write" description="GPIO grouped interrupt port 0 enable register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ENA" description="Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt." />
    </Register>
    <Register start="+0x44" size="4" name="PORT_ENA1" access="Read/Write" description="GPIO grouped interrupt port 0 enable register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ENA" description="Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="GINT1" start="0x40003000" description="LPC5411x Group GPIO input interrupt (GINT0/1)">
    <Register start="+0" size="4" name="CTRL" access="Read/Write" description="GPIO grouped interrupt control register" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INT" description="Group interrupt status. This bit is cleared by writing a one to it. Writing zero has no effect.">
        <Enum name="0" start="0b0" description="No request. No interrupt request is pending." />
        <Enum name="1" start="0b1" description="Request active. Interrupt request is active." />
      </BitField>
      <BitField start="1" size="1" name="COMB" description="Combine enabled inputs for group interrupt">
        <Enum name="0" start="0b0" description="Or. OR functionality: A grouped interrupt is generated when any one of the enabled inputs is active (based on its programmed polarity)." />
        <Enum name="1" start="0b1" description="And. AND functionality: An interrupt is generated when all enabled bits are active (based on their programmed polarity)." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Group interrupt trigger">
        <Enum name="0" start="0b0" description="Edge-triggered." />
        <Enum name="1" start="0b1" description="Level-triggered." />
      </BitField>
    </Register>
    <Register start="+0x20" size="4" name="PORT_POL0" access="Read/Write" description="GPIO grouped interrupt port 0 polarity register" reset_value="0xFFFFFFFF" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="POL" description="Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt." />
    </Register>
    <Register start="+0x24" size="4" name="PORT_POL1" access="Read/Write" description="GPIO grouped interrupt port 0 polarity register" reset_value="0xFFFFFFFF" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="POL" description="Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt." />
    </Register>
    <Register start="+0x40" size="4" name="PORT_ENA0" access="Read/Write" description="GPIO grouped interrupt port 0 enable register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ENA" description="Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt." />
    </Register>
    <Register start="+0x44" size="4" name="PORT_ENA1" access="Read/Write" description="GPIO grouped interrupt port 0 enable register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ENA" description="Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="PINT" start="0x40004000" description="LPC5411x Pin interrupt and pattern match (PINT)">
    <Register start="+0" size="4" name="ISEL" access="Read/Write" description="Pin Interrupt Mode register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="PMODE" description="Selects the interrupt mode for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Edge sensitive 1 = Level sensitive" />
    </Register>
    <Register start="+0x4" size="4" name="IENR" access="Read/Write" description="Pin interrupt level or rising edge interrupt enable register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ENRL" description="Enables the rising edge or level interrupt for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable rising edge or level interrupt. 1 = Enable rising edge or level interrupt." />
    </Register>
    <Register start="+0x8" size="4" name="SIENR" access="WriteOnly" description="Pin interrupt level or rising edge interrupt set register" reset_value="0" reset_mask="0">
      <BitField start="0" size="8" name="SETENRL" description="Ones written to this address set bits in the IENR, thus enabling interrupts. Bit n sets bit n in the IENR register. 0 = No operation. 1 = Enable rising edge or level interrupt." />
    </Register>
    <Register start="+0xC" size="4" name="CIENR" access="WriteOnly" description="Pin interrupt level (rising edge interrupt) clear register" reset_value="0" reset_mask="0">
      <BitField start="0" size="8" name="CENRL" description="Ones written to this address clear bits in the IENR, thus disabling the interrupts. Bit n clears bit n in the IENR register. 0 = No operation. 1 = Disable rising edge or level interrupt." />
    </Register>
    <Register start="+0x10" size="4" name="IENF" access="Read/Write" description="Pin interrupt active level or falling edge interrupt enable register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ENAF" description="Enables the falling edge or configures the active level interrupt for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable falling edge interrupt or set active interrupt level LOW. 1 = Enable falling edge interrupt enabled or set active interrupt level HIGH." />
    </Register>
    <Register start="+0x14" size="4" name="SIENF" access="WriteOnly" description="Pin interrupt active level or falling edge interrupt set register" reset_value="0" reset_mask="0">
      <BitField start="0" size="8" name="SETENAF" description="Ones written to this address set bits in the IENF, thus enabling interrupts. Bit n sets bit n in the IENF register. 0 = No operation. 1 = Select HIGH-active interrupt or enable falling edge interrupt." />
    </Register>
    <Register start="+0x18" size="4" name="CIENF" access="WriteOnly" description="Pin interrupt active level or falling edge interrupt clear register" reset_value="0" reset_mask="0">
      <BitField start="0" size="8" name="CENAF" description="Ones written to this address clears bits in the IENF, thus disabling interrupts. Bit n clears bit n in the IENF register. 0 = No operation. 1 = LOW-active interrupt selected or falling edge interrupt disabled." />
    </Register>
    <Register start="+0x1C" size="4" name="RISE" access="Read/Write" description="Pin interrupt rising edge register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="RDET" description="Rising edge detect. Bit n detects the rising edge of the pin selected in PINTSELn. Read 0: No rising edge has been detected on this pin since Reset or the last time a one was written to this bit. Write 0: no operation. Read 1: a rising edge has been detected since Reset or the last time a one was written to this bit. Write 1: clear rising edge detection for this pin." />
    </Register>
    <Register start="+0x20" size="4" name="FALL" access="Read/Write" description="Pin interrupt falling edge register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="FDET" description="Falling edge detect. Bit n detects the falling edge of the pin selected in PINTSELn. Read 0: No falling edge has been detected on this pin since Reset or the last time a one was written to this bit. Write 0: no operation. Read 1: a falling edge has been detected since Reset or the last time a one was written to this bit. Write 1: clear falling edge detection for this pin." />
    </Register>
    <Register start="+0x24" size="4" name="IST" access="Read/Write" description="Pin interrupt status register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="PSTAT" description="Pin interrupt status. Bit n returns the status, clears the edge interrupt, or inverts the active level of the pin selected in PINTSELn. Read 0: interrupt is not being requested for this interrupt pin. Write 0: no operation. Read 1: interrupt is being requested for this interrupt pin. Write 1 (edge-sensitive): clear rising- and falling-edge detection for this pin. Write 1 (level-sensitive): switch the active level for this pin (in the IENF register)." />
    </Register>
    <Register start="+0x28" size="4" name="PMCTRL" access="Read/Write" description="Pattern match interrupt control register" reset_value="0" reset_mask="0xFF000003">
      <BitField start="0" size="1" name="SEL_PMATCH" description="Specifies whether the 8 pin interrupts are controlled by the pin interrupt function or by the pattern match function.">
        <Enum name="0" start="0b0" description="Pin interrupt. Interrupts are driven in response to the standard pin interrupt function." />
        <Enum name="1" start="0b1" description="Pattern match. Interrupts are driven in response to pattern matches." />
      </BitField>
      <BitField start="1" size="1" name="ENA_RXEV" description="Enables the RXEV output to the CPU and/or to a GPIO output when the specified boolean expression evaluates to true.">
        <Enum name="0" start="0b0" description="Disabled. RXEV output to the CPU is disabled." />
        <Enum name="1" start="0b1" description="Enabled. RXEV output to the CPU is enabled." />
      </BitField>
      <BitField start="24" size="8" name="PMAT" description="This field displays the current state of pattern matches. A 1 in any bit of this field indicates that the corresponding product term is matched by the current state of the appropriate inputs." />
    </Register>
    <Register start="+0x2C" size="4" name="PMSRC" access="Read/Write" description="Pattern match interrupt bit-slice source register" reset_value="0" reset_mask="0xFFFFFF00">
      <BitField start="8" size="3" name="SRC0" description="Selects the input source for bit slice 0">
        <Enum name="0" start="0b000" description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 0." />
        <Enum name="1" start="0b001" description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 0." />
        <Enum name="10" start="0b010" description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 0." />
        <Enum name="11" start="0b011" description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 0." />
        <Enum name="100" start="0b100" description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 0." />
        <Enum name="101" start="0b101" description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 0." />
        <Enum name="110" start="0b110" description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 0." />
        <Enum name="111" start="0b111" description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 0." />
      </BitField>
      <BitField start="11" size="3" name="SRC1" description="Selects the input source for bit slice 1">
        <Enum name="0" start="0b000" description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 1." />
        <Enum name="1" start="0b001" description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 1." />
        <Enum name="10" start="0b010" description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 1." />
        <Enum name="11" start="0b011" description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 1." />
        <Enum name="100" start="0b100" description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 1." />
        <Enum name="101" start="0b101" description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 1." />
        <Enum name="110" start="0b110" description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 1." />
        <Enum name="111" start="0b111" description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 1." />
      </BitField>
      <BitField start="14" size="3" name="SRC2" description="Selects the input source for bit slice 2">
        <Enum name="0" start="0b000" description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 2." />
        <Enum name="1" start="0b001" description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 2." />
        <Enum name="10" start="0b010" description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 2." />
        <Enum name="11" start="0b011" description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 2." />
        <Enum name="100" start="0b100" description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 2." />
        <Enum name="101" start="0b101" description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 2." />
        <Enum name="110" start="0b110" description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 2." />
        <Enum name="111" start="0b111" description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 2." />
      </BitField>
      <BitField start="17" size="3" name="SRC3" description="Selects the input source for bit slice 3">
        <Enum name="0" start="0b000" description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 3." />
        <Enum name="1" start="0b001" description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 3." />
        <Enum name="10" start="0b010" description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 3." />
        <Enum name="11" start="0b011" description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 3." />
        <Enum name="100" start="0b100" description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 3." />
        <Enum name="101" start="0b101" description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 3." />
        <Enum name="110" start="0b110" description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 3." />
        <Enum name="111" start="0b111" description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 3." />
      </BitField>
      <BitField start="20" size="3" name="SRC4" description="Selects the input source for bit slice 4">
        <Enum name="0" start="0b000" description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 4." />
        <Enum name="1" start="0b001" description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 4." />
        <Enum name="10" start="0b010" description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 4." />
        <Enum name="11" start="0b011" description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 4." />
        <Enum name="100" start="0b100" description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 4." />
        <Enum name="101" start="0b101" description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 4." />
        <Enum name="110" start="0b110" description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 4." />
        <Enum name="111" start="0b111" description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 4." />
      </BitField>
      <BitField start="23" size="3" name="SRC5" description="Selects the input source for bit slice 5">
        <Enum name="0" start="0b000" description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 5." />
        <Enum name="1" start="0b001" description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 5." />
        <Enum name="10" start="0b010" description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 5." />
        <Enum name="11" start="0b011" description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 5." />
        <Enum name="100" start="0b100" description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 5." />
        <Enum name="101" start="0b101" description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 5." />
        <Enum name="110" start="0b110" description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 5." />
        <Enum name="111" start="0b111" description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 5." />
      </BitField>
      <BitField start="26" size="3" name="SRC6" description="Selects the input source for bit slice 6">
        <Enum name="0" start="0b000" description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 6." />
        <Enum name="1" start="0b001" description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 6." />
        <Enum name="10" start="0b010" description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 6." />
        <Enum name="11" start="0b011" description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 6." />
        <Enum name="100" start="0b100" description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 6." />
        <Enum name="101" start="0b101" description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 6." />
        <Enum name="110" start="0b110" description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 6." />
        <Enum name="111" start="0b111" description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 6." />
      </BitField>
      <BitField start="29" size="3" name="SRC7" description="Selects the input source for bit slice 7">
        <Enum name="0" start="0b000" description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 7." />
        <Enum name="1" start="0b001" description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 7." />
        <Enum name="10" start="0b010" description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 7." />
        <Enum name="11" start="0b011" description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 7." />
        <Enum name="100" start="0b100" description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 7." />
        <Enum name="101" start="0b101" description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 7." />
        <Enum name="110" start="0b110" description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 7." />
        <Enum name="111" start="0b111" description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 7." />
      </BitField>
    </Register>
    <Register start="+0x30" size="4" name="PMCFG" access="Read/Write" description="Pattern match interrupt bit slice configuration register" reset_value="0" reset_mask="0xFFFFFF7F">
      <BitField start="0" size="1" name="PROD_ENDPTS0" description="Determines whether slice 0 is an endpoint.">
        <Enum name="0" start="0b0" description="No effect. Slice 0 is not an endpoint." />
        <Enum name="1" start="0b1" description="endpoint. Slice 0 is the endpoint of a product term (minterm). Pin interrupt 0 in the NVIC is raised if the minterm evaluates as true." />
      </BitField>
      <BitField start="1" size="1" name="PROD_ENDPTS1" description="Determines whether slice 1 is an endpoint.">
        <Enum name="0" start="0b0" description="No effect. Slice 1 is not an endpoint." />
        <Enum name="1" start="0b1" description="endpoint. Slice 1 is the endpoint of a product term (minterm). Pin interrupt 1 in the NVIC is raised if the minterm evaluates as true." />
      </BitField>
      <BitField start="2" size="1" name="PROD_ENDPTS2" description="Determines whether slice 2 is an endpoint.">
        <Enum name="0" start="0b0" description="No effect. Slice 2 is not an endpoint." />
        <Enum name="1" start="0b1" description="endpoint. Slice 2 is the endpoint of a product term (minterm). Pin interrupt 2 in the NVIC is raised if the minterm evaluates as true." />
      </BitField>
      <BitField start="3" size="1" name="PROD_ENDPTS3" description="Determines whether slice 3 is an endpoint.">
        <Enum name="0" start="0b0" description="No effect. Slice 3 is not an endpoint." />
        <Enum name="1" start="0b1" description="endpoint. Slice 3 is the endpoint of a product term (minterm). Pin interrupt 3 in the NVIC is raised if the minterm evaluates as true." />
      </BitField>
      <BitField start="4" size="1" name="PROD_ENDPTS4" description="Determines whether slice 4 is an endpoint.">
        <Enum name="0" start="0b0" description="No effect. Slice 4 is not an endpoint." />
        <Enum name="1" start="0b1" description="endpoint. Slice 4 is the endpoint of a product term (minterm). Pin interrupt 4 in the NVIC is raised if the minterm evaluates as true." />
      </BitField>
      <BitField start="5" size="1" name="PROD_ENDPTS5" description="Determines whether slice 5 is an endpoint.">
        <Enum name="0" start="0b0" description="No effect. Slice 5 is not an endpoint." />
        <Enum name="1" start="0b1" description="endpoint. Slice 5 is the endpoint of a product term (minterm). Pin interrupt 5 in the NVIC is raised if the minterm evaluates as true." />
      </BitField>
      <BitField start="6" size="1" name="PROD_ENDPTS6" description="Determines whether slice 6 is an endpoint.">
        <Enum name="0" start="0b0" description="No effect. Slice 6 is not an endpoint." />
        <Enum name="1" start="0b1" description="endpoint. Slice 6 is the endpoint of a product term (minterm). Pin interrupt 6 in the NVIC is raised if the minterm evaluates as true." />
      </BitField>
      <BitField start="8" size="3" name="CFG0" description="Specifies the match contribution condition for bit slice 0.">
        <Enum name="0" start="0b000" description="Constant HIGH. This bit slice always contributes to a product term match." />
        <Enum name="1" start="0b001" description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="10" start="0b010" description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="11" start="0b011" description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="100" start="0b100" description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register." />
        <Enum name="101" start="0b101" description="Low level. Match occurs when there is a low level on the specified input." />
        <Enum name="110" start="0b110" description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)." />
        <Enum name="111" start="0b111" description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle." />
      </BitField>
      <BitField start="11" size="3" name="CFG1" description="Specifies the match contribution condition for bit slice 1.">
        <Enum name="0" start="0b000" description="Constant HIGH. This bit slice always contributes to a product term match." />
        <Enum name="1" start="0b001" description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="10" start="0b010" description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="11" start="0b011" description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="100" start="0b100" description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register." />
        <Enum name="101" start="0b101" description="Low level. Match occurs when there is a low level on the specified input." />
        <Enum name="110" start="0b110" description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)." />
        <Enum name="111" start="0b111" description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle." />
      </BitField>
      <BitField start="14" size="3" name="CFG2" description="Specifies the match contribution condition for bit slice 2.">
        <Enum name="0" start="0b000" description="Constant HIGH. This bit slice always contributes to a product term match." />
        <Enum name="1" start="0b001" description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="10" start="0b010" description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="11" start="0b011" description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="100" start="0b100" description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register." />
        <Enum name="101" start="0b101" description="Low level. Match occurs when there is a low level on the specified input." />
        <Enum name="110" start="0b110" description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)." />
        <Enum name="111" start="0b111" description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle." />
      </BitField>
      <BitField start="17" size="3" name="CFG3" description="Specifies the match contribution condition for bit slice 3.">
        <Enum name="0" start="0b000" description="Constant HIGH. This bit slice always contributes to a product term match." />
        <Enum name="1" start="0b001" description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="10" start="0b010" description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="11" start="0b011" description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="100" start="0b100" description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register." />
        <Enum name="101" start="0b101" description="Low level. Match occurs when there is a low level on the specified input." />
        <Enum name="110" start="0b110" description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)." />
        <Enum name="111" start="0b111" description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle." />
      </BitField>
      <BitField start="20" size="3" name="CFG4" description="Specifies the match contribution condition for bit slice 4.">
        <Enum name="0" start="0b000" description="Constant HIGH. This bit slice always contributes to a product term match." />
        <Enum name="1" start="0b001" description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="10" start="0b010" description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="11" start="0b011" description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="100" start="0b100" description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register." />
        <Enum name="101" start="0b101" description="Low level. Match occurs when there is a low level on the specified input." />
        <Enum name="110" start="0b110" description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)." />
        <Enum name="111" start="0b111" description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle." />
      </BitField>
      <BitField start="23" size="3" name="CFG5" description="Specifies the match contribution condition for bit slice 5.">
        <Enum name="0" start="0b000" description="Constant HIGH. This bit slice always contributes to a product term match." />
        <Enum name="1" start="0b001" description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="10" start="0b010" description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="11" start="0b011" description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="100" start="0b100" description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register." />
        <Enum name="101" start="0b101" description="Low level. Match occurs when there is a low level on the specified input." />
        <Enum name="110" start="0b110" description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)." />
        <Enum name="111" start="0b111" description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle." />
      </BitField>
      <BitField start="26" size="3" name="CFG6" description="Specifies the match contribution condition for bit slice 6.">
        <Enum name="0" start="0b000" description="Constant HIGH. This bit slice always contributes to a product term match." />
        <Enum name="1" start="0b001" description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="10" start="0b010" description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="11" start="0b011" description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="100" start="0b100" description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register." />
        <Enum name="101" start="0b101" description="Low level. Match occurs when there is a low level on the specified input." />
        <Enum name="110" start="0b110" description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)." />
        <Enum name="111" start="0b111" description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle." />
      </BitField>
      <BitField start="29" size="3" name="CFG7" description="Specifies the match contribution condition for bit slice 7.">
        <Enum name="0" start="0b000" description="Constant HIGH. This bit slice always contributes to a product term match." />
        <Enum name="1" start="0b001" description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="10" start="0b010" description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="11" start="0b011" description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to." />
        <Enum name="100" start="0b100" description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register." />
        <Enum name="101" start="0b101" description="Low level. Match occurs when there is a low level on the specified input." />
        <Enum name="110" start="0b110" description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)." />
        <Enum name="111" start="0b111" description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle." />
      </BitField>
    </Register>
  </RegisterGroup>
  <RegisterGroup name="INPUTMUX" start="0x40005000" description="LPC5411x Input multiplexing (INPUT MUX)">
    <Register start="+0" size="4" name="SCT0_INMUX0" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP_N" description="Input number to SCT0 inputs 0 to 6.." />
    </Register>
    <Register start="+0x4" size="4" name="SCT0_INMUX1" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP_N" description="Input number to SCT0 inputs 0 to 6.." />
    </Register>
    <Register start="+0x8" size="4" name="SCT0_INMUX2" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP_N" description="Input number to SCT0 inputs 0 to 6.." />
    </Register>
    <Register start="+0xC" size="4" name="SCT0_INMUX3" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP_N" description="Input number to SCT0 inputs 0 to 6.." />
    </Register>
    <Register start="+0x10" size="4" name="SCT0_INMUX4" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP_N" description="Input number to SCT0 inputs 0 to 6.." />
    </Register>
    <Register start="+0x14" size="4" name="SCT0_INMUX5" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP_N" description="Input number to SCT0 inputs 0 to 6.." />
    </Register>
    <Register start="+0x18" size="4" name="SCT0_INMUX6" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP_N" description="Input number to SCT0 inputs 0 to 6.." />
    </Register>
    <Register start="+0xC0" size="4" name="PINTSEL0" access="Read/Write" description="Pin interrupt select register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="INTPIN" description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)." />
    </Register>
    <Register start="+0xC4" size="4" name="PINTSEL1" access="Read/Write" description="Pin interrupt select register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="INTPIN" description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)." />
    </Register>
    <Register start="+0xC8" size="4" name="PINTSEL2" access="Read/Write" description="Pin interrupt select register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="INTPIN" description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)." />
    </Register>
    <Register start="+0xCC" size="4" name="PINTSEL3" access="Read/Write" description="Pin interrupt select register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="INTPIN" description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)." />
    </Register>
    <Register start="+0xD0" size="4" name="PINTSEL4" access="Read/Write" description="Pin interrupt select register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="INTPIN" description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)." />
    </Register>
    <Register start="+0xD4" size="4" name="PINTSEL5" access="Read/Write" description="Pin interrupt select register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="INTPIN" description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)." />
    </Register>
    <Register start="+0xD8" size="4" name="PINTSEL6" access="Read/Write" description="Pin interrupt select register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="INTPIN" description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)." />
    </Register>
    <Register start="+0xDC" size="4" name="PINTSEL7" access="Read/Write" description="Pin interrupt select register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="INTPIN" description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)." />
    </Register>
    <Register start="+0xE0" size="4" name="DMA_ITRIG_INMUX0" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0xE4" size="4" name="DMA_ITRIG_INMUX1" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0xE8" size="4" name="DMA_ITRIG_INMUX2" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0xEC" size="4" name="DMA_ITRIG_INMUX3" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0xF0" size="4" name="DMA_ITRIG_INMUX4" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0xF4" size="4" name="DMA_ITRIG_INMUX5" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0xF8" size="4" name="DMA_ITRIG_INMUX6" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0xFC" size="4" name="DMA_ITRIG_INMUX7" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x100" size="4" name="DMA_ITRIG_INMUX8" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x104" size="4" name="DMA_ITRIG_INMUX9" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x108" size="4" name="DMA_ITRIG_INMUX10" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x10C" size="4" name="DMA_ITRIG_INMUX11" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x110" size="4" name="DMA_ITRIG_INMUX12" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x114" size="4" name="DMA_ITRIG_INMUX13" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x118" size="4" name="DMA_ITRIG_INMUX14" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x11C" size="4" name="DMA_ITRIG_INMUX15" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x120" size="4" name="DMA_ITRIG_INMUX16" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x124" size="4" name="DMA_ITRIG_INMUX17" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x128" size="4" name="DMA_ITRIG_INMUX18" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x12C" size="4" name="DMA_ITRIG_INMUX19" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x130" size="4" name="DMA_ITRIG_INMUX20" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x134" size="4" name="DMA_ITRIG_INMUX21" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x138" size="4" name="DMA_ITRIG_INMUX22" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x13C" size="4" name="DMA_ITRIG_INMUX23" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x140" size="4" name="DMA_ITRIG_INMUX24" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x144" size="4" name="DMA_ITRIG_INMUX25" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x148" size="4" name="DMA_ITRIG_INMUX26" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x14C" size="4" name="DMA_ITRIG_INMUX27" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x150" size="4" name="DMA_ITRIG_INMUX28" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x154" size="4" name="DMA_ITRIG_INMUX29" access="Read/Write" description="Trigger select register for DMA channel" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3" />
    </Register>
    <Register start="+0x160" size="4" name="DMA_OTRIG_INMUX0" access="Read/Write" description="DMA output trigger selection to become DMA trigger" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19)." />
    </Register>
    <Register start="+0x164" size="4" name="DMA_OTRIG_INMUX1" access="Read/Write" description="DMA output trigger selection to become DMA trigger" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19)." />
    </Register>
    <Register start="+0x168" size="4" name="DMA_OTRIG_INMUX2" access="Read/Write" description="DMA output trigger selection to become DMA trigger" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19)." />
    </Register>
    <Register start="+0x16C" size="4" name="DMA_OTRIG_INMUX3" access="Read/Write" description="DMA output trigger selection to become DMA trigger" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="INP" description="DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19)." />
    </Register>
    <Register start="+0x180" size="4" name="FREQMEAS_REF" access="Read/Write" description="Selection for frequency measurement reference clock" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="CLKIN" description="Clock source number (decimal value) for frequency measure function target clock: 0 = CLK_IN 1 = FRO 12 MHz oscillator 2 = Watchdog oscillator 3 = 32 kHz RTC oscillator 4 = Main clock (see Section 4.5.23) 5 = PIO0_4 6 = PIO0_20 7 = PIO0_24 8 = PIO1_4" />
    </Register>
    <Register start="+0x184" size="4" name="FREQMEAS_TARGET" access="Read/Write" description="Selection for frequency measurement target clock" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="CLKIN" description="Clock source number (decimal value) for frequency measure function target clock: 0 = CLK_IN 1 = FRO 12 MHz oscillator 2 = Watchdog oscillator 3 = 32 kHz RTC oscillator 4 = Main clock (see Section 4.5.23) 5 = PIO0_4 6 = PIO0_20 7 = PIO0_24 8 = PIO1_4" />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="CTIMER0" start="0x40008000" description="LPC5411x Standard counter/timers (CTIMER0 to 4)">
    <Register start="+0" size="4" name="IR" access="Read/Write" description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="MR0INT" description="Interrupt flag for match channel 0." />
      <BitField start="1" size="1" name="MR1INT" description="Interrupt flag for match channel 1." />
      <BitField start="2" size="1" name="MR2INT" description="Interrupt flag for match channel 2." />
      <BitField start="3" size="1" name="MR3INT" description="Interrupt flag for match channel 3." />
      <BitField start="4" size="1" name="CR0INT" description="Interrupt flag for capture channel 0 event." />
      <BitField start="5" size="1" name="CR1INT" description="Interrupt flag for capture channel 1 event." />
      <BitField start="6" size="1" name="CR2INT" description="Interrupt flag for capture channel 2 event." />
      <BitField start="7" size="1" name="CR3INT" description="Interrupt flag for capture channel 3 event." />
    </Register>
    <Register start="+0x4" size="4" name="TCR" access="Read/Write" description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR." reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="CEN" description="Counter enable.">
        <Enum name="0" start="0b0" description="Disabled.The counters are disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and Prescale Counter are enabled." />
      </BitField>
      <BitField start="1" size="1" name="CRST" description="Counter reset.">
        <Enum name="0" start="0b0" description="Disabled. Do nothing." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of the APB bus clock. The counters remain reset until TCR[1] is returned to zero." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="TC" access="Read/Write" description="Timer Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="TCVAL" description="Timer counter value." />
    </Register>
    <Register start="+0xC" size="4" name="PR" access="Read/Write" description="Prescale Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PRVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x10" size="4" name="PC" access="Read/Write" description="Prescale Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PCVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x14" size="4" name="MCR" access="Read/Write" description="Match Control Register" reset_value="0" reset_mask="0xF000FFF">
      <BitField start="0" size="1" name="MR0I" description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC." />
      <BitField start="1" size="1" name="MR0R" description="Reset on MR0: the TC will be reset if MR0 matches it." />
      <BitField start="2" size="1" name="MR0S" description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC." />
      <BitField start="3" size="1" name="MR1I" description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC." />
      <BitField start="4" size="1" name="MR1R" description="Reset on MR1: the TC will be reset if MR1 matches it." />
      <BitField start="5" size="1" name="MR1S" description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC." />
      <BitField start="6" size="1" name="MR2I" description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC." />
      <BitField start="7" size="1" name="MR2R" description="Reset on MR2: the TC will be reset if MR2 matches it." />
      <BitField start="8" size="1" name="MR2S" description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC." />
      <BitField start="9" size="1" name="MR3I" description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC." />
      <BitField start="10" size="1" name="MR3R" description="Reset on MR3: the TC will be reset if MR3 matches it." />
      <BitField start="11" size="1" name="MR3S" description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC." />
      <BitField start="24" size="1" name="MR0RL" description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="25" size="1" name="MR1RL" description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="26" size="1" name="MR2RL" description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="27" size="1" name="MR3RL" description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
    </Register>
    <Register start="+0x18" size="4" name="MR0" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x1C" size="4" name="MR1" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x20" size="4" name="MR2" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x24" size="4" name="MR3" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x28" size="4" name="CCR" access="Read/Write" description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="CAP0RE" description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="1" size="1" name="CAP0FE" description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="2" size="1" name="CAP0I" description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt." />
      <BitField start="3" size="1" name="CAP1RE" description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="4" size="1" name="CAP1FE" description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="5" size="1" name="CAP1I" description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt." />
      <BitField start="6" size="1" name="CAP2RE" description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="7" size="1" name="CAP2FE" description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="8" size="1" name="CAP2I" description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt." />
      <BitField start="9" size="1" name="CAP3RE" description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="10" size="1" name="CAP3FE" description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="11" size="1" name="CAP3I" description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt." />
    </Register>
    <Register start="+0x2C" size="4" name="CR0" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x30" size="4" name="CR1" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x34" size="4" name="CR2" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x38" size="4" name="CR3" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x3C" size="4" name="EMR" access="Read/Write" description="External Match Register. The EMR controls the match function and the external match pins." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="EM0" description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="1" size="1" name="EM1" description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="2" size="1" name="EM2" description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="3" size="1" name="EM3" description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="4" size="2" name="EMC0" description="External Match Control 0. Determines the functionality of External Match 0.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT0 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT0 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="6" size="2" name="EMC1" description="External Match Control 1. Determines the functionality of External Match 1.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT1 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT1 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="8" size="2" name="EMC2" description="External Match Control 2. Determines the functionality of External Match 2.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT2 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT2 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="10" size="2" name="EMC3" description="External Match Control 3. Determines the functionality of External Match 3.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT3 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT3 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
    </Register>
    <Register start="+0x70" size="4" name="CTCR" access="Read/Write" description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="2" name="CTMODE" description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.">
        <Enum name="0" start="0b00" description="Timer Mode. Incremented every rising APB bus clock edge." />
        <Enum name="1" start="0b01" description="Counter Mode rising edge. TC is incremented on rising edges on the CAP input selected by bits 3:2." />
        <Enum name="10" start="0b10" description="Counter Mode falling edge. TC is incremented on falling edges on the CAP input selected by bits 3:2." />
        <Enum name="11" start="0b11" description="Counter Mode dual edge. TC is incremented on both edges on the CAP input selected by bits 3:2." />
      </BitField>
      <BitField start="2" size="2" name="CINSEL" description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.">
        <Enum name="0" start="0b00" description="Channel 0. CAPn.0 for CTIMERn" />
        <Enum name="1" start="0b01" description="Channel 1. CAPn.1 for CTIMERn" />
        <Enum name="10" start="0b10" description="Channel 2. CAPn.2 for CTIMERn" />
        <Enum name="11" start="0b11" description="Channel 3. CAPn.3 for CTIMERn" />
      </BitField>
      <BitField start="4" size="1" name="ENCC" description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs." />
      <BitField start="5" size="3" name="SELCC" description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.">
        <Enum name="0" start="0b000" description="Channel 0 Rising Edge. Rising edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="1" start="0b001" description="Channel 0 Falling Edge. Falling edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="10" start="0b010" description="Channel 1 Rising Edge. Rising edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="11" start="0b011" description="Channel 1 Falling Edge. Falling edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="100" start="0b100" description="Channel 2 Rising Edge. Rising edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
        <Enum name="101" start="0b101" description="Channel 2 Falling Edge. Falling edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
      </BitField>
    </Register>
    <Register start="+0x74" size="4" name="PWMC" access="Read/Write" description="PWM Control Register. The PWMCON enables PWM mode for the external match pins." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="PWMEN0" description="PWM mode enable for channel0.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT0 is controlled by EM0." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT0." />
      </BitField>
      <BitField start="1" size="1" name="PWMEN1" description="PWM mode enable for channel1.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT01 is controlled by EM1." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT1." />
      </BitField>
      <BitField start="2" size="1" name="PWMEN2" description="PWM mode enable for channel2.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT2 is controlled by EM2." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT2." />
      </BitField>
      <BitField start="3" size="1" name="PWMEN3" description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT3 is controlled by EM3." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CT132Bn_MAT3." />
      </BitField>
    </Register>
    <Register start="+0x78" size="4" name="MSR0" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x7C" size="4" name="MSR1" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x80" size="4" name="MSR2" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x84" size="4" name="MSR3" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="CTIMER1" start="0x40009000" description="LPC5411x Standard counter/timers (CTIMER0 to 4)">
    <Register start="+0" size="4" name="IR" access="Read/Write" description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="MR0INT" description="Interrupt flag for match channel 0." />
      <BitField start="1" size="1" name="MR1INT" description="Interrupt flag for match channel 1." />
      <BitField start="2" size="1" name="MR2INT" description="Interrupt flag for match channel 2." />
      <BitField start="3" size="1" name="MR3INT" description="Interrupt flag for match channel 3." />
      <BitField start="4" size="1" name="CR0INT" description="Interrupt flag for capture channel 0 event." />
      <BitField start="5" size="1" name="CR1INT" description="Interrupt flag for capture channel 1 event." />
      <BitField start="6" size="1" name="CR2INT" description="Interrupt flag for capture channel 2 event." />
      <BitField start="7" size="1" name="CR3INT" description="Interrupt flag for capture channel 3 event." />
    </Register>
    <Register start="+0x4" size="4" name="TCR" access="Read/Write" description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR." reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="CEN" description="Counter enable.">
        <Enum name="0" start="0b0" description="Disabled.The counters are disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and Prescale Counter are enabled." />
      </BitField>
      <BitField start="1" size="1" name="CRST" description="Counter reset.">
        <Enum name="0" start="0b0" description="Disabled. Do nothing." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of the APB bus clock. The counters remain reset until TCR[1] is returned to zero." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="TC" access="Read/Write" description="Timer Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="TCVAL" description="Timer counter value." />
    </Register>
    <Register start="+0xC" size="4" name="PR" access="Read/Write" description="Prescale Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PRVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x10" size="4" name="PC" access="Read/Write" description="Prescale Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PCVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x14" size="4" name="MCR" access="Read/Write" description="Match Control Register" reset_value="0" reset_mask="0xF000FFF">
      <BitField start="0" size="1" name="MR0I" description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC." />
      <BitField start="1" size="1" name="MR0R" description="Reset on MR0: the TC will be reset if MR0 matches it." />
      <BitField start="2" size="1" name="MR0S" description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC." />
      <BitField start="3" size="1" name="MR1I" description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC." />
      <BitField start="4" size="1" name="MR1R" description="Reset on MR1: the TC will be reset if MR1 matches it." />
      <BitField start="5" size="1" name="MR1S" description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC." />
      <BitField start="6" size="1" name="MR2I" description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC." />
      <BitField start="7" size="1" name="MR2R" description="Reset on MR2: the TC will be reset if MR2 matches it." />
      <BitField start="8" size="1" name="MR2S" description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC." />
      <BitField start="9" size="1" name="MR3I" description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC." />
      <BitField start="10" size="1" name="MR3R" description="Reset on MR3: the TC will be reset if MR3 matches it." />
      <BitField start="11" size="1" name="MR3S" description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC." />
      <BitField start="24" size="1" name="MR0RL" description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="25" size="1" name="MR1RL" description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="26" size="1" name="MR2RL" description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="27" size="1" name="MR3RL" description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
    </Register>
    <Register start="+0x18" size="4" name="MR0" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x1C" size="4" name="MR1" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x20" size="4" name="MR2" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x24" size="4" name="MR3" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x28" size="4" name="CCR" access="Read/Write" description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="CAP0RE" description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="1" size="1" name="CAP0FE" description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="2" size="1" name="CAP0I" description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt." />
      <BitField start="3" size="1" name="CAP1RE" description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="4" size="1" name="CAP1FE" description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="5" size="1" name="CAP1I" description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt." />
      <BitField start="6" size="1" name="CAP2RE" description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="7" size="1" name="CAP2FE" description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="8" size="1" name="CAP2I" description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt." />
      <BitField start="9" size="1" name="CAP3RE" description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="10" size="1" name="CAP3FE" description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="11" size="1" name="CAP3I" description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt." />
    </Register>
    <Register start="+0x2C" size="4" name="CR0" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x30" size="4" name="CR1" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x34" size="4" name="CR2" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x38" size="4" name="CR3" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x3C" size="4" name="EMR" access="Read/Write" description="External Match Register. The EMR controls the match function and the external match pins." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="EM0" description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="1" size="1" name="EM1" description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="2" size="1" name="EM2" description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="3" size="1" name="EM3" description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="4" size="2" name="EMC0" description="External Match Control 0. Determines the functionality of External Match 0.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT0 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT0 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="6" size="2" name="EMC1" description="External Match Control 1. Determines the functionality of External Match 1.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT1 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT1 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="8" size="2" name="EMC2" description="External Match Control 2. Determines the functionality of External Match 2.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT2 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT2 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="10" size="2" name="EMC3" description="External Match Control 3. Determines the functionality of External Match 3.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT3 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT3 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
    </Register>
    <Register start="+0x70" size="4" name="CTCR" access="Read/Write" description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="2" name="CTMODE" description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.">
        <Enum name="0" start="0b00" description="Timer Mode. Incremented every rising APB bus clock edge." />
        <Enum name="1" start="0b01" description="Counter Mode rising edge. TC is incremented on rising edges on the CAP input selected by bits 3:2." />
        <Enum name="10" start="0b10" description="Counter Mode falling edge. TC is incremented on falling edges on the CAP input selected by bits 3:2." />
        <Enum name="11" start="0b11" description="Counter Mode dual edge. TC is incremented on both edges on the CAP input selected by bits 3:2." />
      </BitField>
      <BitField start="2" size="2" name="CINSEL" description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.">
        <Enum name="0" start="0b00" description="Channel 0. CAPn.0 for CTIMERn" />
        <Enum name="1" start="0b01" description="Channel 1. CAPn.1 for CTIMERn" />
        <Enum name="10" start="0b10" description="Channel 2. CAPn.2 for CTIMERn" />
        <Enum name="11" start="0b11" description="Channel 3. CAPn.3 for CTIMERn" />
      </BitField>
      <BitField start="4" size="1" name="ENCC" description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs." />
      <BitField start="5" size="3" name="SELCC" description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.">
        <Enum name="0" start="0b000" description="Channel 0 Rising Edge. Rising edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="1" start="0b001" description="Channel 0 Falling Edge. Falling edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="10" start="0b010" description="Channel 1 Rising Edge. Rising edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="11" start="0b011" description="Channel 1 Falling Edge. Falling edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="100" start="0b100" description="Channel 2 Rising Edge. Rising edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
        <Enum name="101" start="0b101" description="Channel 2 Falling Edge. Falling edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
      </BitField>
    </Register>
    <Register start="+0x74" size="4" name="PWMC" access="Read/Write" description="PWM Control Register. The PWMCON enables PWM mode for the external match pins." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="PWMEN0" description="PWM mode enable for channel0.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT0 is controlled by EM0." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT0." />
      </BitField>
      <BitField start="1" size="1" name="PWMEN1" description="PWM mode enable for channel1.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT01 is controlled by EM1." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT1." />
      </BitField>
      <BitField start="2" size="1" name="PWMEN2" description="PWM mode enable for channel2.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT2 is controlled by EM2." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT2." />
      </BitField>
      <BitField start="3" size="1" name="PWMEN3" description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT3 is controlled by EM3." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CT132Bn_MAT3." />
      </BitField>
    </Register>
    <Register start="+0x78" size="4" name="MSR0" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x7C" size="4" name="MSR1" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x80" size="4" name="MSR2" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x84" size="4" name="MSR3" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="CTIMER2" start="0x40028000" description="LPC5411x Standard counter/timers (CTIMER0 to 4)">
    <Register start="+0" size="4" name="IR" access="Read/Write" description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="MR0INT" description="Interrupt flag for match channel 0." />
      <BitField start="1" size="1" name="MR1INT" description="Interrupt flag for match channel 1." />
      <BitField start="2" size="1" name="MR2INT" description="Interrupt flag for match channel 2." />
      <BitField start="3" size="1" name="MR3INT" description="Interrupt flag for match channel 3." />
      <BitField start="4" size="1" name="CR0INT" description="Interrupt flag for capture channel 0 event." />
      <BitField start="5" size="1" name="CR1INT" description="Interrupt flag for capture channel 1 event." />
      <BitField start="6" size="1" name="CR2INT" description="Interrupt flag for capture channel 2 event." />
      <BitField start="7" size="1" name="CR3INT" description="Interrupt flag for capture channel 3 event." />
    </Register>
    <Register start="+0x4" size="4" name="TCR" access="Read/Write" description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR." reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="CEN" description="Counter enable.">
        <Enum name="0" start="0b0" description="Disabled.The counters are disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and Prescale Counter are enabled." />
      </BitField>
      <BitField start="1" size="1" name="CRST" description="Counter reset.">
        <Enum name="0" start="0b0" description="Disabled. Do nothing." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of the APB bus clock. The counters remain reset until TCR[1] is returned to zero." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="TC" access="Read/Write" description="Timer Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="TCVAL" description="Timer counter value." />
    </Register>
    <Register start="+0xC" size="4" name="PR" access="Read/Write" description="Prescale Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PRVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x10" size="4" name="PC" access="Read/Write" description="Prescale Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PCVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x14" size="4" name="MCR" access="Read/Write" description="Match Control Register" reset_value="0" reset_mask="0xF000FFF">
      <BitField start="0" size="1" name="MR0I" description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC." />
      <BitField start="1" size="1" name="MR0R" description="Reset on MR0: the TC will be reset if MR0 matches it." />
      <BitField start="2" size="1" name="MR0S" description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC." />
      <BitField start="3" size="1" name="MR1I" description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC." />
      <BitField start="4" size="1" name="MR1R" description="Reset on MR1: the TC will be reset if MR1 matches it." />
      <BitField start="5" size="1" name="MR1S" description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC." />
      <BitField start="6" size="1" name="MR2I" description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC." />
      <BitField start="7" size="1" name="MR2R" description="Reset on MR2: the TC will be reset if MR2 matches it." />
      <BitField start="8" size="1" name="MR2S" description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC." />
      <BitField start="9" size="1" name="MR3I" description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC." />
      <BitField start="10" size="1" name="MR3R" description="Reset on MR3: the TC will be reset if MR3 matches it." />
      <BitField start="11" size="1" name="MR3S" description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC." />
      <BitField start="24" size="1" name="MR0RL" description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="25" size="1" name="MR1RL" description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="26" size="1" name="MR2RL" description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="27" size="1" name="MR3RL" description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
    </Register>
    <Register start="+0x18" size="4" name="MR0" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x1C" size="4" name="MR1" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x20" size="4" name="MR2" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x24" size="4" name="MR3" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x28" size="4" name="CCR" access="Read/Write" description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="CAP0RE" description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="1" size="1" name="CAP0FE" description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="2" size="1" name="CAP0I" description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt." />
      <BitField start="3" size="1" name="CAP1RE" description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="4" size="1" name="CAP1FE" description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="5" size="1" name="CAP1I" description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt." />
      <BitField start="6" size="1" name="CAP2RE" description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="7" size="1" name="CAP2FE" description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="8" size="1" name="CAP2I" description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt." />
      <BitField start="9" size="1" name="CAP3RE" description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="10" size="1" name="CAP3FE" description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="11" size="1" name="CAP3I" description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt." />
    </Register>
    <Register start="+0x2C" size="4" name="CR0" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x30" size="4" name="CR1" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x34" size="4" name="CR2" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x38" size="4" name="CR3" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x3C" size="4" name="EMR" access="Read/Write" description="External Match Register. The EMR controls the match function and the external match pins." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="EM0" description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="1" size="1" name="EM1" description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="2" size="1" name="EM2" description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="3" size="1" name="EM3" description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="4" size="2" name="EMC0" description="External Match Control 0. Determines the functionality of External Match 0.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT0 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT0 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="6" size="2" name="EMC1" description="External Match Control 1. Determines the functionality of External Match 1.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT1 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT1 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="8" size="2" name="EMC2" description="External Match Control 2. Determines the functionality of External Match 2.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT2 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT2 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="10" size="2" name="EMC3" description="External Match Control 3. Determines the functionality of External Match 3.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT3 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT3 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
    </Register>
    <Register start="+0x70" size="4" name="CTCR" access="Read/Write" description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="2" name="CTMODE" description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.">
        <Enum name="0" start="0b00" description="Timer Mode. Incremented every rising APB bus clock edge." />
        <Enum name="1" start="0b01" description="Counter Mode rising edge. TC is incremented on rising edges on the CAP input selected by bits 3:2." />
        <Enum name="10" start="0b10" description="Counter Mode falling edge. TC is incremented on falling edges on the CAP input selected by bits 3:2." />
        <Enum name="11" start="0b11" description="Counter Mode dual edge. TC is incremented on both edges on the CAP input selected by bits 3:2." />
      </BitField>
      <BitField start="2" size="2" name="CINSEL" description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.">
        <Enum name="0" start="0b00" description="Channel 0. CAPn.0 for CTIMERn" />
        <Enum name="1" start="0b01" description="Channel 1. CAPn.1 for CTIMERn" />
        <Enum name="10" start="0b10" description="Channel 2. CAPn.2 for CTIMERn" />
        <Enum name="11" start="0b11" description="Channel 3. CAPn.3 for CTIMERn" />
      </BitField>
      <BitField start="4" size="1" name="ENCC" description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs." />
      <BitField start="5" size="3" name="SELCC" description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.">
        <Enum name="0" start="0b000" description="Channel 0 Rising Edge. Rising edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="1" start="0b001" description="Channel 0 Falling Edge. Falling edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="10" start="0b010" description="Channel 1 Rising Edge. Rising edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="11" start="0b011" description="Channel 1 Falling Edge. Falling edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="100" start="0b100" description="Channel 2 Rising Edge. Rising edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
        <Enum name="101" start="0b101" description="Channel 2 Falling Edge. Falling edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
      </BitField>
    </Register>
    <Register start="+0x74" size="4" name="PWMC" access="Read/Write" description="PWM Control Register. The PWMCON enables PWM mode for the external match pins." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="PWMEN0" description="PWM mode enable for channel0.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT0 is controlled by EM0." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT0." />
      </BitField>
      <BitField start="1" size="1" name="PWMEN1" description="PWM mode enable for channel1.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT01 is controlled by EM1." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT1." />
      </BitField>
      <BitField start="2" size="1" name="PWMEN2" description="PWM mode enable for channel2.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT2 is controlled by EM2." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT2." />
      </BitField>
      <BitField start="3" size="1" name="PWMEN3" description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT3 is controlled by EM3." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CT132Bn_MAT3." />
      </BitField>
    </Register>
    <Register start="+0x78" size="4" name="MSR0" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x7C" size="4" name="MSR1" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x80" size="4" name="MSR2" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x84" size="4" name="MSR3" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="CTIMER3" start="0x40048000" description="LPC5411x Standard counter/timers (CTIMER0 to 4)">
    <Register start="+0" size="4" name="IR" access="Read/Write" description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="MR0INT" description="Interrupt flag for match channel 0." />
      <BitField start="1" size="1" name="MR1INT" description="Interrupt flag for match channel 1." />
      <BitField start="2" size="1" name="MR2INT" description="Interrupt flag for match channel 2." />
      <BitField start="3" size="1" name="MR3INT" description="Interrupt flag for match channel 3." />
      <BitField start="4" size="1" name="CR0INT" description="Interrupt flag for capture channel 0 event." />
      <BitField start="5" size="1" name="CR1INT" description="Interrupt flag for capture channel 1 event." />
      <BitField start="6" size="1" name="CR2INT" description="Interrupt flag for capture channel 2 event." />
      <BitField start="7" size="1" name="CR3INT" description="Interrupt flag for capture channel 3 event." />
    </Register>
    <Register start="+0x4" size="4" name="TCR" access="Read/Write" description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR." reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="CEN" description="Counter enable.">
        <Enum name="0" start="0b0" description="Disabled.The counters are disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and Prescale Counter are enabled." />
      </BitField>
      <BitField start="1" size="1" name="CRST" description="Counter reset.">
        <Enum name="0" start="0b0" description="Disabled. Do nothing." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of the APB bus clock. The counters remain reset until TCR[1] is returned to zero." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="TC" access="Read/Write" description="Timer Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="TCVAL" description="Timer counter value." />
    </Register>
    <Register start="+0xC" size="4" name="PR" access="Read/Write" description="Prescale Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PRVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x10" size="4" name="PC" access="Read/Write" description="Prescale Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PCVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x14" size="4" name="MCR" access="Read/Write" description="Match Control Register" reset_value="0" reset_mask="0xF000FFF">
      <BitField start="0" size="1" name="MR0I" description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC." />
      <BitField start="1" size="1" name="MR0R" description="Reset on MR0: the TC will be reset if MR0 matches it." />
      <BitField start="2" size="1" name="MR0S" description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC." />
      <BitField start="3" size="1" name="MR1I" description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC." />
      <BitField start="4" size="1" name="MR1R" description="Reset on MR1: the TC will be reset if MR1 matches it." />
      <BitField start="5" size="1" name="MR1S" description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC." />
      <BitField start="6" size="1" name="MR2I" description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC." />
      <BitField start="7" size="1" name="MR2R" description="Reset on MR2: the TC will be reset if MR2 matches it." />
      <BitField start="8" size="1" name="MR2S" description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC." />
      <BitField start="9" size="1" name="MR3I" description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC." />
      <BitField start="10" size="1" name="MR3R" description="Reset on MR3: the TC will be reset if MR3 matches it." />
      <BitField start="11" size="1" name="MR3S" description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC." />
      <BitField start="24" size="1" name="MR0RL" description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="25" size="1" name="MR1RL" description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="26" size="1" name="MR2RL" description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="27" size="1" name="MR3RL" description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
    </Register>
    <Register start="+0x18" size="4" name="MR0" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x1C" size="4" name="MR1" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x20" size="4" name="MR2" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x24" size="4" name="MR3" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x28" size="4" name="CCR" access="Read/Write" description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="CAP0RE" description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="1" size="1" name="CAP0FE" description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="2" size="1" name="CAP0I" description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt." />
      <BitField start="3" size="1" name="CAP1RE" description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="4" size="1" name="CAP1FE" description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="5" size="1" name="CAP1I" description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt." />
      <BitField start="6" size="1" name="CAP2RE" description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="7" size="1" name="CAP2FE" description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="8" size="1" name="CAP2I" description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt." />
      <BitField start="9" size="1" name="CAP3RE" description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="10" size="1" name="CAP3FE" description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="11" size="1" name="CAP3I" description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt." />
    </Register>
    <Register start="+0x2C" size="4" name="CR0" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x30" size="4" name="CR1" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x34" size="4" name="CR2" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x38" size="4" name="CR3" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x3C" size="4" name="EMR" access="Read/Write" description="External Match Register. The EMR controls the match function and the external match pins." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="EM0" description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="1" size="1" name="EM1" description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="2" size="1" name="EM2" description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="3" size="1" name="EM3" description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="4" size="2" name="EMC0" description="External Match Control 0. Determines the functionality of External Match 0.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT0 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT0 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="6" size="2" name="EMC1" description="External Match Control 1. Determines the functionality of External Match 1.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT1 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT1 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="8" size="2" name="EMC2" description="External Match Control 2. Determines the functionality of External Match 2.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT2 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT2 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="10" size="2" name="EMC3" description="External Match Control 3. Determines the functionality of External Match 3.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT3 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT3 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
    </Register>
    <Register start="+0x70" size="4" name="CTCR" access="Read/Write" description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="2" name="CTMODE" description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.">
        <Enum name="0" start="0b00" description="Timer Mode. Incremented every rising APB bus clock edge." />
        <Enum name="1" start="0b01" description="Counter Mode rising edge. TC is incremented on rising edges on the CAP input selected by bits 3:2." />
        <Enum name="10" start="0b10" description="Counter Mode falling edge. TC is incremented on falling edges on the CAP input selected by bits 3:2." />
        <Enum name="11" start="0b11" description="Counter Mode dual edge. TC is incremented on both edges on the CAP input selected by bits 3:2." />
      </BitField>
      <BitField start="2" size="2" name="CINSEL" description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.">
        <Enum name="0" start="0b00" description="Channel 0. CAPn.0 for CTIMERn" />
        <Enum name="1" start="0b01" description="Channel 1. CAPn.1 for CTIMERn" />
        <Enum name="10" start="0b10" description="Channel 2. CAPn.2 for CTIMERn" />
        <Enum name="11" start="0b11" description="Channel 3. CAPn.3 for CTIMERn" />
      </BitField>
      <BitField start="4" size="1" name="ENCC" description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs." />
      <BitField start="5" size="3" name="SELCC" description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.">
        <Enum name="0" start="0b000" description="Channel 0 Rising Edge. Rising edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="1" start="0b001" description="Channel 0 Falling Edge. Falling edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="10" start="0b010" description="Channel 1 Rising Edge. Rising edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="11" start="0b011" description="Channel 1 Falling Edge. Falling edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="100" start="0b100" description="Channel 2 Rising Edge. Rising edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
        <Enum name="101" start="0b101" description="Channel 2 Falling Edge. Falling edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
      </BitField>
    </Register>
    <Register start="+0x74" size="4" name="PWMC" access="Read/Write" description="PWM Control Register. The PWMCON enables PWM mode for the external match pins." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="PWMEN0" description="PWM mode enable for channel0.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT0 is controlled by EM0." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT0." />
      </BitField>
      <BitField start="1" size="1" name="PWMEN1" description="PWM mode enable for channel1.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT01 is controlled by EM1." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT1." />
      </BitField>
      <BitField start="2" size="1" name="PWMEN2" description="PWM mode enable for channel2.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT2 is controlled by EM2." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT2." />
      </BitField>
      <BitField start="3" size="1" name="PWMEN3" description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT3 is controlled by EM3." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CT132Bn_MAT3." />
      </BitField>
    </Register>
    <Register start="+0x78" size="4" name="MSR0" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x7C" size="4" name="MSR1" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x80" size="4" name="MSR2" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x84" size="4" name="MSR3" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="CTIMER4" start="0x40049000" description="LPC5411x Standard counter/timers (CTIMER0 to 4)">
    <Register start="+0" size="4" name="IR" access="Read/Write" description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="MR0INT" description="Interrupt flag for match channel 0." />
      <BitField start="1" size="1" name="MR1INT" description="Interrupt flag for match channel 1." />
      <BitField start="2" size="1" name="MR2INT" description="Interrupt flag for match channel 2." />
      <BitField start="3" size="1" name="MR3INT" description="Interrupt flag for match channel 3." />
      <BitField start="4" size="1" name="CR0INT" description="Interrupt flag for capture channel 0 event." />
      <BitField start="5" size="1" name="CR1INT" description="Interrupt flag for capture channel 1 event." />
      <BitField start="6" size="1" name="CR2INT" description="Interrupt flag for capture channel 2 event." />
      <BitField start="7" size="1" name="CR3INT" description="Interrupt flag for capture channel 3 event." />
    </Register>
    <Register start="+0x4" size="4" name="TCR" access="Read/Write" description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR." reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="CEN" description="Counter enable.">
        <Enum name="0" start="0b0" description="Disabled.The counters are disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and Prescale Counter are enabled." />
      </BitField>
      <BitField start="1" size="1" name="CRST" description="Counter reset.">
        <Enum name="0" start="0b0" description="Disabled. Do nothing." />
        <Enum name="1" start="0b1" description="Enabled. The Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of the APB bus clock. The counters remain reset until TCR[1] is returned to zero." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="TC" access="Read/Write" description="Timer Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="TCVAL" description="Timer counter value." />
    </Register>
    <Register start="+0xC" size="4" name="PR" access="Read/Write" description="Prescale Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PRVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x10" size="4" name="PC" access="Read/Write" description="Prescale Counter" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PCVAL" description="Prescale counter value." />
    </Register>
    <Register start="+0x14" size="4" name="MCR" access="Read/Write" description="Match Control Register" reset_value="0" reset_mask="0xF000FFF">
      <BitField start="0" size="1" name="MR0I" description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC." />
      <BitField start="1" size="1" name="MR0R" description="Reset on MR0: the TC will be reset if MR0 matches it." />
      <BitField start="2" size="1" name="MR0S" description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC." />
      <BitField start="3" size="1" name="MR1I" description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC." />
      <BitField start="4" size="1" name="MR1R" description="Reset on MR1: the TC will be reset if MR1 matches it." />
      <BitField start="5" size="1" name="MR1S" description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC." />
      <BitField start="6" size="1" name="MR2I" description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC." />
      <BitField start="7" size="1" name="MR2R" description="Reset on MR2: the TC will be reset if MR2 matches it." />
      <BitField start="8" size="1" name="MR2S" description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC." />
      <BitField start="9" size="1" name="MR3I" description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC." />
      <BitField start="10" size="1" name="MR3R" description="Reset on MR3: the TC will be reset if MR3 matches it." />
      <BitField start="11" size="1" name="MR3S" description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC." />
      <BitField start="24" size="1" name="MR0RL" description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="25" size="1" name="MR1RL" description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="26" size="1" name="MR2RL" description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
      <BitField start="27" size="1" name="MR3RL" description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)." />
    </Register>
    <Register start="+0x18" size="4" name="MR0" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x1C" size="4" name="MR1" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x20" size="4" name="MR2" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x24" size="4" name="MR3" access="Read/Write" description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATCH" description="Timer counter match value." />
    </Register>
    <Register start="+0x28" size="4" name="CCR" access="Read/Write" description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="CAP0RE" description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="1" size="1" name="CAP0FE" description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="2" size="1" name="CAP0I" description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt." />
      <BitField start="3" size="1" name="CAP1RE" description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="4" size="1" name="CAP1FE" description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="5" size="1" name="CAP1I" description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt." />
      <BitField start="6" size="1" name="CAP2RE" description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="7" size="1" name="CAP2FE" description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="8" size="1" name="CAP2I" description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt." />
      <BitField start="9" size="1" name="CAP3RE" description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="10" size="1" name="CAP3FE" description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled." />
      <BitField start="11" size="1" name="CAP3I" description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt." />
    </Register>
    <Register start="+0x2C" size="4" name="CR0" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x30" size="4" name="CR1" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x34" size="4" name="CR2" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x38" size="4" name="CR3" access="ReadOnly" description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CAP" description="Timer counter capture value." />
    </Register>
    <Register start="+0x3C" size="4" name="EMR" access="Read/Write" description="External Match Register. The EMR controls the match function and the external match pins." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="EM0" description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="1" size="1" name="EM1" description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="2" size="1" name="EM2" description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="3" size="1" name="EM3" description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH." />
      <BitField start="4" size="2" name="EMC0" description="External Match Control 0. Determines the functionality of External Match 0.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT0 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT0 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="6" size="2" name="EMC1" description="External Match Control 1. Determines the functionality of External Match 1.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT1 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT1 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="8" size="2" name="EMC2" description="External Match Control 2. Determines the functionality of External Match 2.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT2 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT2 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
      <BitField start="10" size="2" name="EMC3" description="External Match Control 3. Determines the functionality of External Match 3.">
        <Enum name="0" start="0b00" description="Do Nothing." />
        <Enum name="1" start="0b01" description="Clear. Clear the corresponding External Match bit/output to 0 (MAT3 pin is LOW if pinned out)." />
        <Enum name="10" start="0b10" description="Set. Set the corresponding External Match bit/output to 1 (MAT3 pin is HIGH if pinned out)." />
        <Enum name="11" start="0b11" description="Toggle. Toggle the corresponding External Match bit/output." />
      </BitField>
    </Register>
    <Register start="+0x70" size="4" name="CTCR" access="Read/Write" description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="2" name="CTMODE" description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.">
        <Enum name="0" start="0b00" description="Timer Mode. Incremented every rising APB bus clock edge." />
        <Enum name="1" start="0b01" description="Counter Mode rising edge. TC is incremented on rising edges on the CAP input selected by bits 3:2." />
        <Enum name="10" start="0b10" description="Counter Mode falling edge. TC is incremented on falling edges on the CAP input selected by bits 3:2." />
        <Enum name="11" start="0b11" description="Counter Mode dual edge. TC is incremented on both edges on the CAP input selected by bits 3:2." />
      </BitField>
      <BitField start="2" size="2" name="CINSEL" description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.">
        <Enum name="0" start="0b00" description="Channel 0. CAPn.0 for CTIMERn" />
        <Enum name="1" start="0b01" description="Channel 1. CAPn.1 for CTIMERn" />
        <Enum name="10" start="0b10" description="Channel 2. CAPn.2 for CTIMERn" />
        <Enum name="11" start="0b11" description="Channel 3. CAPn.3 for CTIMERn" />
      </BitField>
      <BitField start="4" size="1" name="ENCC" description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs." />
      <BitField start="5" size="3" name="SELCC" description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.">
        <Enum name="0" start="0b000" description="Channel 0 Rising Edge. Rising edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="1" start="0b001" description="Channel 0 Falling Edge. Falling edge of the signal on capture channel 0 clears the timer (if bit 4 is set)." />
        <Enum name="10" start="0b010" description="Channel 1 Rising Edge. Rising edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="11" start="0b011" description="Channel 1 Falling Edge. Falling edge of the signal on capture channel 1 clears the timer (if bit 4 is set)." />
        <Enum name="100" start="0b100" description="Channel 2 Rising Edge. Rising edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
        <Enum name="101" start="0b101" description="Channel 2 Falling Edge. Falling edge of the signal on capture channel 2 clears the timer (if bit 4 is set)." />
      </BitField>
    </Register>
    <Register start="+0x74" size="4" name="PWMC" access="Read/Write" description="PWM Control Register. The PWMCON enables PWM mode for the external match pins." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="PWMEN0" description="PWM mode enable for channel0.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT0 is controlled by EM0." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT0." />
      </BitField>
      <BitField start="1" size="1" name="PWMEN1" description="PWM mode enable for channel1.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT01 is controlled by EM1." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT1." />
      </BitField>
      <BitField start="2" size="1" name="PWMEN2" description="PWM mode enable for channel2.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT2 is controlled by EM2." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CTIMERn_MAT2." />
      </BitField>
      <BitField start="3" size="1" name="PWMEN3" description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.">
        <Enum name="0" start="0b0" description="Match. CTIMERn_MAT3 is controlled by EM3." />
        <Enum name="1" start="0b1" description="PWM. PWM mode is enabled for CT132Bn_MAT3." />
      </BitField>
    </Register>
    <Register start="+0x78" size="4" name="MSR0" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x7C" size="4" name="MSR1" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x80" size="4" name="MSR2" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
    <Register start="+0x84" size="4" name="MSR3" access="Read/Write" description="Match Shadow Register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SHADOWW" description="Timer counter match shadow value." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="WWDT" start="0x4000C000" description="LPC5411x Windowed Watchdog Timer (WWDT)">
    <Register start="+0" size="4" name="MOD" access="Read/Write" description="Watchdog mode register. This register contains the basic mode and status of the Watchdog Timer." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="WDEN" description="Watchdog enable bit. Once this bit is set to one and a watchdog feed is performed, the watchdog timer will run permanently.">
        <Enum name="0" start="0b0" description="Stop. The watchdog timer is stopped." />
        <Enum name="1" start="0b1" description="Run. The watchdog timer is running." />
      </BitField>
      <BitField start="1" size="1" name="WDRESET" description="Watchdog reset enable bit. Once this bit has been written with a 1 it cannot be re-written with a 0.">
        <Enum name="0" start="0b0" description="Interrupt. A watchdog time-out will not cause a chip reset." />
        <Enum name="1" start="0b1" description="Reset. A watchdog time-out will cause a chip reset." />
      </BitField>
      <BitField start="2" size="1" name="WDTOF" description="Watchdog time-out flag. Set when the watchdog timer times out, by a feed error, or by events associated with WDPROTECT. Cleared by software writing a 0 to this bit position. Causes a chip reset if WDRESET = 1." />
      <BitField start="3" size="1" name="WDINT" description="Warning interrupt flag. Set when the timer is at or below the value in WDWARNINT. Cleared by software writing a 1 to this bit position. Note that this bit cannot be cleared while the WARNINT value is equal to the value of the TV register. This can occur if the value of WARNINT is 0 and the WDRESET bit is 0 when TV decrements to 0." />
      <BitField start="4" size="1" name="WDPROTECT" description="Watchdog update mode. This bit can be set once by software and is only cleared by a reset.">
        <Enum name="0" start="0b0" description="Flexible. The watchdog time-out value (TC) can be changed at any time." />
        <Enum name="1" start="0b1" description="Threshold. The watchdog time-out value (TC) can be changed only after the counter is below the value of WDWARNINT and WDWINDOW." />
      </BitField>
      <BitField start="5" size="1" name="LOCK" description="Once this bit is set to one and a watchdog feed is performed, disabling or powering down the watchdog oscillator is prevented by hardware. This bit can be set once by software and is only cleared by any reset." />
    </Register>
    <Register start="+0x4" size="4" name="TC" access="Read/Write" description="Watchdog timer constant register. This 24-bit register determines the time-out value." reset_value="0xFF" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="COUNT" description="Watchdog time-out value." />
    </Register>
    <Register start="+0x8" size="4" name="FEED" access="WriteOnly" description="Watchdog feed sequence register. Writing 0xAA followed by 0x55 to this register reloads the Watchdog timer with the value contained in TC." reset_value="0" reset_mask="0">
      <BitField start="0" size="8" name="FEED" description="Feed value should be 0xAA followed by 0x55." />
    </Register>
    <Register start="+0xC" size="4" name="TV" access="ReadOnly" description="Watchdog timer value register. This 24-bit register reads out the current value of the Watchdog timer." reset_value="0xFF" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="COUNT" description="Counter timer value." />
    </Register>
    <Register start="+0x14" size="4" name="WARNINT" access="Read/Write" description="Watchdog Warning Interrupt compare value." reset_value="0" reset_mask="0x3FF">
      <BitField start="0" size="10" name="WARNINT" description="Watchdog warning interrupt compare value." />
    </Register>
    <Register start="+0x18" size="4" name="WINDOW" access="Read/Write" description="Watchdog Window compare value." reset_value="0xFFFFFF" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="WINDOW" description="Watchdog window value." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="MRT0" start="0x4000D000" description="LPC5411x Multi-Rate Timer (MRT)">
    <Register start="+0" size="4" name="INTVAL0" access="Read/Write" description="MRT Time interval value register. This value is loaded into the TIMER register." reset_value="0" reset_mask="0x80FFFFFF">
      <BitField start="0" size="24" name="IVALUE" description="Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval." />
      <BitField start="31" size="1" name="LOAD" description="Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.">
        <Enum name="0" start="0b0" description="No force load. The load from the INTVALn register to the TIMERn register is processed at the end of the time interval if the repeat mode is selected." />
        <Enum name="1" start="0b1" description="Force load. The INTVALn interval value IVALUE -1 is immediately loaded into the TIMERn register while TIMERn is running." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="TIMER0" access="ReadOnly" description="MRT Timer register. This register reads the value of the down-counter." reset_value="0xFFFFFF" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="VALUE" description="Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF)." />
    </Register>
    <Register start="+0x8" size="4" name="CTRL0" access="Read/Write" description="MRT Control register. This register controls the MRT modes." reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INTEN" description="Enable the TIMERn interrupt.">
        <Enum name="0" start="0b0" description="Disabled. TIMERn interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. TIMERn interrupt is enabled." />
      </BitField>
      <BitField start="1" size="2" name="MODE" description="Selects timer mode.">
        <Enum name="0" start="0b00" description="Repeat interrupt mode." />
        <Enum name="1" start="0b01" description="One-shot interrupt mode." />
        <Enum name="10" start="0b10" description="One-shot stall mode." />
      </BitField>
    </Register>
    <Register start="+0xC" size="4" name="STAT0" access="Read/Write" description="MRT Status register." reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INTFLAG" description="Monitors the interrupt flag.">
        <Enum name="0" start="0b0" description="No pending interrupt. Writing a zero is equivalent to no operation." />
        <Enum name="1" start="0b1" description="Pending interrupt. The interrupt is pending because TIMERn has reached the end of the time interval. If the INTEN bit in the CONTROLn is also set to 1, the interrupt for timer channel n and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request." />
      </BitField>
      <BitField start="1" size="1" name="RUN" description="Indicates the state of TIMERn. This bit is read-only.">
        <Enum name="0" start="0b0" description="Idle state. TIMERn is stopped." />
        <Enum name="1" start="0b1" description="Running. TIMERn is running." />
      </BitField>
      <BitField start="2" size="1" name="INUSE" description="Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.">
        <Enum name="0" start="0b0" description="This channel is not in use." />
        <Enum name="1" start="0b1" description="This channel is in use." />
      </BitField>
    </Register>
    <Register start="+0x10" size="4" name="INTVAL1" access="Read/Write" description="MRT Time interval value register. This value is loaded into the TIMER register." reset_value="0" reset_mask="0x80FFFFFF">
      <BitField start="0" size="24" name="IVALUE" description="Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval." />
      <BitField start="31" size="1" name="LOAD" description="Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.">
        <Enum name="0" start="0b0" description="No force load. The load from the INTVALn register to the TIMERn register is processed at the end of the time interval if the repeat mode is selected." />
        <Enum name="1" start="0b1" description="Force load. The INTVALn interval value IVALUE -1 is immediately loaded into the TIMERn register while TIMERn is running." />
      </BitField>
    </Register>
    <Register start="+0x14" size="4" name="TIMER1" access="ReadOnly" description="MRT Timer register. This register reads the value of the down-counter." reset_value="0xFFFFFF" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="VALUE" description="Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF)." />
    </Register>
    <Register start="+0x18" size="4" name="CTRL1" access="Read/Write" description="MRT Control register. This register controls the MRT modes." reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INTEN" description="Enable the TIMERn interrupt.">
        <Enum name="0" start="0b0" description="Disabled. TIMERn interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. TIMERn interrupt is enabled." />
      </BitField>
      <BitField start="1" size="2" name="MODE" description="Selects timer mode.">
        <Enum name="0" start="0b00" description="Repeat interrupt mode." />
        <Enum name="1" start="0b01" description="One-shot interrupt mode." />
        <Enum name="10" start="0b10" description="One-shot stall mode." />
      </BitField>
    </Register>
    <Register start="+0x1C" size="4" name="STAT1" access="Read/Write" description="MRT Status register." reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INTFLAG" description="Monitors the interrupt flag.">
        <Enum name="0" start="0b0" description="No pending interrupt. Writing a zero is equivalent to no operation." />
        <Enum name="1" start="0b1" description="Pending interrupt. The interrupt is pending because TIMERn has reached the end of the time interval. If the INTEN bit in the CONTROLn is also set to 1, the interrupt for timer channel n and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request." />
      </BitField>
      <BitField start="1" size="1" name="RUN" description="Indicates the state of TIMERn. This bit is read-only.">
        <Enum name="0" start="0b0" description="Idle state. TIMERn is stopped." />
        <Enum name="1" start="0b1" description="Running. TIMERn is running." />
      </BitField>
      <BitField start="2" size="1" name="INUSE" description="Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.">
        <Enum name="0" start="0b0" description="This channel is not in use." />
        <Enum name="1" start="0b1" description="This channel is in use." />
      </BitField>
    </Register>
    <Register start="+0x20" size="4" name="INTVAL2" access="Read/Write" description="MRT Time interval value register. This value is loaded into the TIMER register." reset_value="0" reset_mask="0x80FFFFFF">
      <BitField start="0" size="24" name="IVALUE" description="Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval." />
      <BitField start="31" size="1" name="LOAD" description="Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.">
        <Enum name="0" start="0b0" description="No force load. The load from the INTVALn register to the TIMERn register is processed at the end of the time interval if the repeat mode is selected." />
        <Enum name="1" start="0b1" description="Force load. The INTVALn interval value IVALUE -1 is immediately loaded into the TIMERn register while TIMERn is running." />
      </BitField>
    </Register>
    <Register start="+0x24" size="4" name="TIMER2" access="ReadOnly" description="MRT Timer register. This register reads the value of the down-counter." reset_value="0xFFFFFF" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="VALUE" description="Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF)." />
    </Register>
    <Register start="+0x28" size="4" name="CTRL2" access="Read/Write" description="MRT Control register. This register controls the MRT modes." reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INTEN" description="Enable the TIMERn interrupt.">
        <Enum name="0" start="0b0" description="Disabled. TIMERn interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. TIMERn interrupt is enabled." />
      </BitField>
      <BitField start="1" size="2" name="MODE" description="Selects timer mode.">
        <Enum name="0" start="0b00" description="Repeat interrupt mode." />
        <Enum name="1" start="0b01" description="One-shot interrupt mode." />
        <Enum name="10" start="0b10" description="One-shot stall mode." />
      </BitField>
    </Register>
    <Register start="+0x2C" size="4" name="STAT2" access="Read/Write" description="MRT Status register." reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INTFLAG" description="Monitors the interrupt flag.">
        <Enum name="0" start="0b0" description="No pending interrupt. Writing a zero is equivalent to no operation." />
        <Enum name="1" start="0b1" description="Pending interrupt. The interrupt is pending because TIMERn has reached the end of the time interval. If the INTEN bit in the CONTROLn is also set to 1, the interrupt for timer channel n and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request." />
      </BitField>
      <BitField start="1" size="1" name="RUN" description="Indicates the state of TIMERn. This bit is read-only.">
        <Enum name="0" start="0b0" description="Idle state. TIMERn is stopped." />
        <Enum name="1" start="0b1" description="Running. TIMERn is running." />
      </BitField>
      <BitField start="2" size="1" name="INUSE" description="Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.">
        <Enum name="0" start="0b0" description="This channel is not in use." />
        <Enum name="1" start="0b1" description="This channel is in use." />
      </BitField>
    </Register>
    <Register start="+0x30" size="4" name="INTVAL3" access="Read/Write" description="MRT Time interval value register. This value is loaded into the TIMER register." reset_value="0" reset_mask="0x80FFFFFF">
      <BitField start="0" size="24" name="IVALUE" description="Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval." />
      <BitField start="31" size="1" name="LOAD" description="Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.">
        <Enum name="0" start="0b0" description="No force load. The load from the INTVALn register to the TIMERn register is processed at the end of the time interval if the repeat mode is selected." />
        <Enum name="1" start="0b1" description="Force load. The INTVALn interval value IVALUE -1 is immediately loaded into the TIMERn register while TIMERn is running." />
      </BitField>
    </Register>
    <Register start="+0x34" size="4" name="TIMER3" access="ReadOnly" description="MRT Timer register. This register reads the value of the down-counter." reset_value="0xFFFFFF" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="VALUE" description="Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF)." />
    </Register>
    <Register start="+0x38" size="4" name="CTRL3" access="Read/Write" description="MRT Control register. This register controls the MRT modes." reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INTEN" description="Enable the TIMERn interrupt.">
        <Enum name="0" start="0b0" description="Disabled. TIMERn interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. TIMERn interrupt is enabled." />
      </BitField>
      <BitField start="1" size="2" name="MODE" description="Selects timer mode.">
        <Enum name="0" start="0b00" description="Repeat interrupt mode." />
        <Enum name="1" start="0b01" description="One-shot interrupt mode." />
        <Enum name="10" start="0b10" description="One-shot stall mode." />
      </BitField>
    </Register>
    <Register start="+0x3C" size="4" name="STAT3" access="Read/Write" description="MRT Status register." reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INTFLAG" description="Monitors the interrupt flag.">
        <Enum name="0" start="0b0" description="No pending interrupt. Writing a zero is equivalent to no operation." />
        <Enum name="1" start="0b1" description="Pending interrupt. The interrupt is pending because TIMERn has reached the end of the time interval. If the INTEN bit in the CONTROLn is also set to 1, the interrupt for timer channel n and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request." />
      </BitField>
      <BitField start="1" size="1" name="RUN" description="Indicates the state of TIMERn. This bit is read-only.">
        <Enum name="0" start="0b0" description="Idle state. TIMERn is stopped." />
        <Enum name="1" start="0b1" description="Running. TIMERn is running." />
      </BitField>
      <BitField start="2" size="1" name="INUSE" description="Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.">
        <Enum name="0" start="0b0" description="This channel is not in use." />
        <Enum name="1" start="0b1" description="This channel is in use." />
      </BitField>
    </Register>
    <Register start="+0xF0" size="4" name="MODCFG" access="Read/Write" description="Module Configuration register. This register provides information about this particular MRT instance, and allows choosing an overall mode for the idle channel feature." reset_value="0x173" reset_mask="0x800001FF">
      <BitField start="0" size="4" name="NOC" description="Identifies the number of channels in this MRT.(4 channels on this device.)" />
      <BitField start="4" size="5" name="NOB" description="Identifies the number of timer bits in this MRT. (24 bits wide on this device.)" />
      <BitField start="31" size="1" name="MULTITASK" description="Selects the operating mode for the INUSE flags and the IDLE_CH register.">
        <Enum name="0" start="0b0" description="Hardware status mode. In this mode, the INUSE(n) flags for all channels are reset." />
        <Enum name="1" start="0b1" description="Multi-task mode." />
      </BitField>
    </Register>
    <Register start="+0xF4" size="4" name="IDLE_CH" access="ReadOnly" description="Idle channel register. This register returns the number of the first idle channel." reset_value="0" reset_mask="0xF0">
      <BitField start="4" size="4" name="CHAN" description="Idle channel. Reading the CHAN bits, returns the lowest idle timer channel. The number is positioned such that it can be used as an offset from the MRT base address in order to access the registers for the allocated channel. If all timer channels are running, CHAN = 0xF. See text above for more details." />
    </Register>
    <Register start="+0xF8" size="4" name="IRQ_FLAG" access="Read/Write" description="Global interrupt flag register" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="GFLAG0" description="Monitors the interrupt flag of TIMER0.">
        <Enum name="0" start="0b0" description="No pending interrupt. Writing a zero is equivalent to no operation." />
        <Enum name="1" start="0b1" description="Pending interrupt. The interrupt is pending because TIMER0 has reached the end of the time interval. If the INTEN bit in the CONTROL0 register is also set to 1, the interrupt for timer channel 0 and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request." />
      </BitField>
      <BitField start="1" size="1" name="GFLAG1" description="Monitors the interrupt flag of TIMER1. See description of channel 0." />
      <BitField start="2" size="1" name="GFLAG2" description="Monitors the interrupt flag of TIMER2. See description of channel 0." />
      <BitField start="3" size="1" name="GFLAG3" description="Monitors the interrupt flag of TIMER3. See description of channel 0." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="UTICK0" start="0x4000E000" description="LPC5411x Micro-tick Timer (UTICK)">
    <Register start="+0" size="4" name="CTRL" access="Read/Write" description="Control register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="31" name="DELAYVAL" description="Tick interval value. The delay will be equal to DELAYVAL + 1 periods of the timer clock. The minimum usable value is 1, for a delay of 2 timer clocks. A value of 0 stops the timer." />
      <BitField start="31" size="1" name="REPEAT" description="Repeat delay. 0 = One-time delay. 1 = Delay repeats continuously." />
    </Register>
    <Register start="+0x4" size="4" name="STAT" access="Read/Write" description="Status register." reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="INTR" description="Interrupt flag. 0 = No interrupt is pending. 1 = An interrupt is pending. A write of any value to this register clears this flag." />
      <BitField start="1" size="1" name="ACTIVE" description="Active flag. 0 = The Micro-Tick Timer is stopped. 1 = The Micro-Tick Timer is currently active." />
    </Register>
    <Register start="+0x8" size="4" name="CFG" access="Read/Write" description="Capture configuration register." reset_value="0" reset_mask="0xF0F">
      <BitField start="0" size="1" name="CAPEN0" description="Enable Capture 0. 1 = Enabled, 0 = Disabled." />
      <BitField start="1" size="1" name="CAPEN1" description="Enable Capture 1. 1 = Enabled, 0 = Disabled." />
      <BitField start="2" size="1" name="CAPEN2" description="Enable Capture 2. 1 = Enabled, 0 = Disabled." />
      <BitField start="3" size="1" name="CAPEN3" description="Enable Capture 3. 1 = Enabled, 0 = Disabled." />
      <BitField start="8" size="1" name="CAPPOL0" description="Capture Polarity 0. 0 = Positive edge capture, 1 = Negative edge capture." />
      <BitField start="9" size="1" name="CAPPOL1" description="Capture Polarity 1. 0 = Positive edge capture, 1 = Negative edge capture." />
      <BitField start="10" size="1" name="CAPPOL2" description="Capture Polarity 2. 0 = Positive edge capture, 1 = Negative edge capture." />
      <BitField start="11" size="1" name="CAPPOL3" description="Capture Polarity 3. 0 = Positive edge capture, 1 = Negative edge capture." />
    </Register>
    <Register start="+0xC" size="4" name="CAPCLR" access="WriteOnly" description="Capture clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="CAPCLR0" description="Clear capture 0. Writing 1 to this bit clears the CAP0 register value." />
      <BitField start="1" size="1" name="CAPCLR1" description="Clear capture 1. Writing 1 to this bit clears the CAP1 register value." />
      <BitField start="2" size="1" name="CAPCLR2" description="Clear capture 2. Writing 1 to this bit clears the CAP2 register value." />
      <BitField start="3" size="1" name="CAPCLR3" description="Clear capture 3. Writing 1 to this bit clears the CAP3 register value." />
    </Register>
    <Register start="+0x10" size="4" name="CAP0" access="ReadOnly" description="Capture register ." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="31" name="CAP_VALUE" description="Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event." />
      <BitField start="31" size="1" name="VALID" description="Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register." />
    </Register>
    <Register start="+0x14" size="4" name="CAP1" access="ReadOnly" description="Capture register ." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="31" name="CAP_VALUE" description="Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event." />
      <BitField start="31" size="1" name="VALID" description="Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register." />
    </Register>
    <Register start="+0x18" size="4" name="CAP2" access="ReadOnly" description="Capture register ." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="31" name="CAP_VALUE" description="Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event." />
      <BitField start="31" size="1" name="VALID" description="Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register." />
    </Register>
    <Register start="+0x1C" size="4" name="CAP3" access="ReadOnly" description="Capture register ." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="31" name="CAP_VALUE" description="Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event." />
      <BitField start="31" size="1" name="VALID" description="Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="EEPROM" start="0x40014000" description="LPC54S60x/LPC5460x EEPROM controller">
    <Register start="+0" size="4" name="CMD" access="Read/Write" description="EEPROM command register" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="3" name="CMD" description="Command." />
    </Register>
    <Register start="+0x8" size="4" name="RWSTATE" access="Read/Write" description="EEPROM read wait state register" reset_value="0xE07" reset_mask="0xFFFF">
      <BitField start="0" size="8" name="RPHASE2" description="Wait states 2 (minus 1 encoded)." />
      <BitField start="8" size="8" name="RPHASE1" description="Wait states 1 (minus 1 encoded)." />
    </Register>
    <Register start="+0xC" size="4" name="AUTOPROG" access="Read/Write" description="EEPROM auto programming register" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="AUTOPROG" description="Auto programming mode: 00 = auto programming off 01 = erase/program cycle is triggered after 1 word is written 10 = erase/program cycle is triggered after a write to AHB address ending with ." />
    </Register>
    <Register start="+0x10" size="4" name="WSTATE" access="Read/Write" description="EEPROM wait state register" reset_value="0x40802" reset_mask="0x80FFFFFF">
      <BitField start="0" size="8" name="PHASE3" description="Wait states for phase 3 (minus 1 encoded)." />
      <BitField start="8" size="8" name="PHASE2" description="Wait states for phase 2 (minus 1 encoded)." />
      <BitField start="16" size="8" name="PHASE1" description="Wait states for phase 1 (minus 1 encoded)." />
      <BitField start="31" size="1" name="LCK_PARWEP" description="Lock timing parameters for write, erase and program operation 0 = WSTATE and CLKDIV registers have R/W access 1 = WSTATE and CLKDIV registers have R only access." />
    </Register>
    <Register start="+0x14" size="4" name="CLKDIV" access="Read/Write" description="EEPROM clock divider register" reset_value="0x63" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLKDIV" description="Division factor (minus 1 encoded)." />
    </Register>
    <Register start="+0x18" size="4" name="PWRDWN" access="Read/Write" description="EEPROM power-down register" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PWRDWN" description="Power down mode bit." />
    </Register>
    <Register start="+0xFD8" size="4" name="INTENCLR" access="WriteOnly" description="EEPROM interrupt enable clear" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="PROG_CLR_EN" description="Clear program operation finished interrupt enable bit for EEPROM." />
    </Register>
    <Register start="+0xFDC" size="4" name="INTENSET" access="WriteOnly" description="EEPROM interrupt enable set" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="PROG_SET_EN" description="Set program operation finished interrupt enable bit for EEPROM device 1." />
    </Register>
    <Register start="+0xFE0" size="4" name="INTSTAT" access="ReadOnly" description="EEPROM interrupt status" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="END_OF_PROG" description="EEPROM program operation finished interrupt status bit." />
    </Register>
    <Register start="+0xFE4" size="4" name="INTEN" access="ReadOnly" description="EEPROM interrupt enable" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="EE_PROG_DONE" description="EEPROM program operation finished interrupt enable bit." />
    </Register>
    <Register start="+0xFE8" size="4" name="INTSTATCLR" access="WriteOnly" description="EEPROM interrupt status clear" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="PROG_CLR_ST" description="Clear program operation finished interrupt status bit for EEPROM device." />
    </Register>
    <Register start="+0xFEC" size="4" name="INTSTATSET" access="WriteOnly" description="EEPROM interrupt status set" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="PROG_SET_ST" description="Set program operation finished interrupt status bit for EEPROM device." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="OTPC" start="0x40015000" description="This is the description of component otpc It is an eFUSE OTP (One Time Programmable memory) controller with APB bus interface. More details will follow.">
    <Register start="+0x10" size="4" name="AESKEY0" access="ReadOnly" description="Register for reading the AES key." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="KEY" description="AES key." />
    </Register>
    <Register start="+0x14" size="4" name="AESKEY1" access="ReadOnly" description="Register for reading the AES key." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="KEY" description="AES key." />
    </Register>
    <Register start="+0x18" size="4" name="AESKEY2" access="ReadOnly" description="Register for reading the AES key." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="KEY" description="AES key." />
    </Register>
    <Register start="+0x1C" size="4" name="AESKEY3" access="ReadOnly" description="Register for reading the AES key." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="KEY" description="AES key." />
    </Register>
    <Register start="+0x20" size="4" name="AESKEY4" access="ReadOnly" description="Register for reading the AES key." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="KEY" description="AES key." />
    </Register>
    <Register start="+0x24" size="4" name="AESKEY5" access="ReadOnly" description="Register for reading the AES key." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="KEY" description="AES key." />
    </Register>
    <Register start="+0x28" size="4" name="AESKEY6" access="ReadOnly" description="Register for reading the AES key." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="KEY" description="AES key." />
    </Register>
    <Register start="+0x2C" size="4" name="AESKEY7" access="ReadOnly" description="Register for reading the AES key." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="KEY" description="AES key." />
    </Register>
    <Register start="+0x30" size="4" name="ECRP" access="ReadOnly" description="ECRP options." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="CRP_MASS_ERASE_DISABLE" description="Disable or enable CRP mass erase." />
      <BitField start="5" size="1" name="IAP_PROTECTION_ENABLE" description="This bit controls the ability to enable checking for ECRP in IAP functions." />
      <BitField start="6" size="1" name="CRP_ISP_DISABLE_PIN" description="This bit controls the ability to enter ISP mode using the ISP pin." />
      <BitField start="7" size="1" name="CRP_ISP_DISABLE_IAP" description="This bit controls the ability to re-invoke ISP using IAP routines." />
      <BitField start="9" size="1" name="CRP_ALLOW_ZERO" description="This bit controls how 0 is treated when read as a ECRP value.." />
      <BitField start="31" size="1" name="JTAG_DISABLE" description="0 =&gt; Enable SWD/JTAG; 1 =&gt; Disable SWD/JTAG.." />
    </Register>
    <Register start="+0x38" size="4" name="USER0" access="ReadOnly" description="User application specific options." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="USER0" description="User application specific option." />
    </Register>
    <Register start="+0x3C" size="4" name="USER1" access="ReadOnly" description="User application specific options." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="USER1" description="User application specific option." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="RTC" start="0x4002C000" description="LPC5411x Real-Time Clock (RTC)">
    <Register start="+0" size="4" name="CTRL" access="Read/Write" description="RTC control register" reset_value="0x1" reset_mask="0x3FD">
      <BitField start="0" size="1" name="SWRESET" description="Software reset control">
        <Enum name="0" start="0b0" description="Not in reset. The RTC is not held in reset. This bit must be cleared prior to configuring or initiating any operation of the RTC." />
        <Enum name="1" start="0b1" description="In reset. The RTC is held in reset. All register bits within the RTC will be forced to their reset value except the OFD bit. This bit must be cleared before writing to any register in the RTC - including writes to set any of the other bits within this register. Do not attempt to write to any bits of this register at the same time that the reset bit is being cleared." />
      </BitField>
      <BitField start="2" size="1" name="ALARM1HZ" description="RTC 1 Hz timer alarm flag status.">
        <Enum name="0" start="0b0" description="No match. No match has occurred on the 1 Hz RTC timer. Writing a 0 has no effect." />
        <Enum name="1" start="0b1" description="Match. A match condition has occurred on the 1 Hz RTC timer. This flag generates an RTC alarm interrupt request RTC_ALARM which can also wake up the part from any low power mode. Writing a 1 clears this bit." />
      </BitField>
      <BitField start="3" size="1" name="WAKE1KHZ" description="RTC 1 kHz timer wake-up flag status.">
        <Enum name="0" start="0b0" description="Run. The RTC 1 kHz timer is running. Writing a 0 has no effect." />
        <Enum name="1" start="0b1" description="Time-out. The 1 kHz high-resolution/wake-up timer has timed out. This flag generates an RTC wake-up interrupt request RTC-WAKE which can also wake up the part from any low power mode. Writing a 1 clears this bit." />
      </BitField>
      <BitField start="4" size="1" name="ALARMDPD_EN" description="RTC 1 Hz timer alarm enable for Deep power-down.">
        <Enum name="0" start="0b0" description="Disable. A match on the 1 Hz RTC timer will not bring the part out of Deep power-down mode." />
        <Enum name="1" start="0b1" description="Enable. A match on the 1 Hz RTC timer bring the part out of Deep power-down mode." />
      </BitField>
      <BitField start="5" size="1" name="WAKEDPD_EN" description="RTC 1 kHz timer wake-up enable for Deep power-down.">
        <Enum name="0" start="0b0" description="Disable. A match on the 1 kHz RTC timer will not bring the part out of Deep power-down mode." />
        <Enum name="1" start="0b1" description="Enable. A match on the 1 kHz RTC timer bring the part out of Deep power-down mode." />
      </BitField>
      <BitField start="6" size="1" name="RTC1KHZ_EN" description="RTC 1 kHz clock enable. This bit can be set to 0 to conserve power if the 1 kHz timer is not used. This bit has no effect when the RTC is disabled (bit 7 of this register is 0).">
        <Enum name="0" start="0b0" description="Disable. A match on the 1 kHz RTC timer will not bring the part out of Deep power-down mode." />
        <Enum name="1" start="0b1" description="Enable. The 1 kHz RTC timer is enabled." />
      </BitField>
      <BitField start="7" size="1" name="RTC_EN" description="RTC enable.">
        <Enum name="0" start="0b0" description="Disable. The RTC 1 Hz and 1 kHz clocks are shut down and the RTC operation is disabled. This bit should be 0 when writing to load a value in the RTC counter register." />
        <Enum name="1" start="0b1" description="Enable. The 1 Hz RTC clock is running and RTC operation is enabled. This bit must be set to initiate operation of the RTC. The first clock to the RTC counter occurs 1 s after this bit is set. To also enable the high-resolution, 1 kHz clock, set bit 6 in this register." />
      </BitField>
      <BitField start="8" size="1" name="RTC_OSC_PD" description="RTC oscillator power-down control.">
        <Enum name="0" start="0b0" description="See RTC_OSC_BYPASS" />
        <Enum name="1" start="0b1" description="RTC oscillator is powered-down." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="MATCH" access="Read/Write" description="RTC match register" reset_value="0xFFFFFFFF" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MATVAL" description="Contains the match value against which the 1 Hz RTC timer will be compared to set the alarm flag RTC_ALARM and generate an alarm interrupt/wake-up if enabled." />
    </Register>
    <Register start="+0x8" size="4" name="COUNT" access="Read/Write" description="RTC counter register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="VAL" description="A read reflects the current value of the main, 1 Hz RTC timer. A write loads a new initial value into the timer. The RTC counter will count up continuously at a 1 Hz rate once the RTC Software Reset is removed (by clearing bit 0 of the CTRL register). Only write to this register when the RTC_EN bit in the RTC CTRL Register is 0. The counter increments one second after the RTC_EN bit is set." />
    </Register>
    <Register start="+0xC" size="4" name="WAKE" access="Read/Write" description="High-resolution/wake-up timer control register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="VAL" description="A read reflects the current value of the high-resolution/wake-up timer. A write pre-loads a start count value into the wake-up timer and initializes a count-down sequence. Do not write to this register while counting is in progress." />
    </Register>
    <Register start="+0x40" size="4" name="GPREG0" access="Read/Write" description="General Purpose register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="GPDATA" description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied." />
    </Register>
    <Register start="+0x44" size="4" name="GPREG1" access="Read/Write" description="General Purpose register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="GPDATA" description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied." />
    </Register>
    <Register start="+0x48" size="4" name="GPREG2" access="Read/Write" description="General Purpose register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="GPDATA" description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied." />
    </Register>
    <Register start="+0x4C" size="4" name="GPREG3" access="Read/Write" description="General Purpose register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="GPDATA" description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied." />
    </Register>
    <Register start="+0x50" size="4" name="GPREG4" access="Read/Write" description="General Purpose register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="GPDATA" description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied." />
    </Register>
    <Register start="+0x54" size="4" name="GPREG5" access="Read/Write" description="General Purpose register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="GPDATA" description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied." />
    </Register>
    <Register start="+0x58" size="4" name="GPREG6" access="Read/Write" description="General Purpose register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="GPDATA" description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied." />
    </Register>
    <Register start="+0x5C" size="4" name="GPREG7" access="Read/Write" description="General Purpose register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="GPDATA" description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="RIT" start="0x4002D000" description="LPC54S60x/LPC5460x Repetitive Interrupt Timer(RIT)">
    <Register start="+0" size="4" name="COMPVAL" access="Read/Write" description="Compare value LSB register" reset_value="0xFFFFFFFF" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RICOMP" description="." />
    </Register>
    <Register start="+0x4" size="4" name="MASK" access="Read/Write" description="Mask LSB register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RIMASK" description="Mask register." />
    </Register>
    <Register start="+0x8" size="4" name="CTRL" access="Read/Write" description="Control register" reset_value="0xC" reset_mask="0xF">
      <BitField start="0" size="1" name="RITINT" description="Interrupt flag." />
      <BitField start="1" size="1" name="RITENCLR" description="Timer enable clear." />
      <BitField start="2" size="1" name="RITENBR" description="Timer enable for debug." />
      <BitField start="3" size="1" name="RITEN" description="Timer enable." />
    </Register>
    <Register start="+0xC" size="4" name="COUNTER" access="Read/Write" description="Counter LSB register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RICOUNTER" description="32 LSBs of the up counter." />
    </Register>
    <Register start="+0x10" size="4" name="COMPVAL_H" access="Read/Write" description="Compare value MSB register" reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="RICOMP" description="Compare value MSB register." />
    </Register>
    <Register start="+0x14" size="4" name="MASK_H" access="Read/Write" description="Mask MSB register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="RIMASK" description="Mask register." />
    </Register>
    <Register start="+0x1C" size="4" name="COUNTER_H" access="Read/Write" description="Counter MSB register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="RICOUNTER" description="16 LSBs of the up counter." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FMC" start="0x40034000" description="LPC54S60x/LPC5460x Flash signature generator">
    <Register start="+0" size="4" name="FCTR" access="Read/Write" description="Control register" reset_value="0x200005" reset_mask="0xFFFFFF">
      <BitField start="3" size="1" name="FS_RD0" description="Value must be 0 for signature generation." />
      <BitField start="4" size="1" name="FS_RD1" description="Value must be 1 for signature generation." />
    </Register>
    <Register start="+0x10" size="4" name="FBWST" access="Read/Write" description="Wait state register" reset_value="0xC005" reset_mask="0xFFFFFF">
      <BitField start="0" size="8" name="WAITSTATES" description="Wait states for signature generation." />
    </Register>
    <Register start="+0x20" size="4" name="FMSSTART" access="Read/Write" description="Signature start address register" reset_value="0" reset_mask="0x1FFFF">
      <BitField start="0" size="17" name="START" description="Signature generation start address (corresponds to AHB byte address bits[20:4])." />
    </Register>
    <Register start="+0x24" size="4" name="FMSSTOP" access="Read/Write" description="Signature stop-address register" reset_value="0" reset_mask="0x3FFFF">
      <BitField start="0" size="17" name="STOP" description="Stop address for signature generation (the word specified by STOP is included in the address range)." />
      <BitField start="17" size="1" name="SIG_START" description="When this bit is written to 1, signature generation starts." />
    </Register>
    <Register start="+0x2C" size="4" name="FMSW0" access="ReadOnly" description="Words of 128-bit signature word" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SW" description="Words of 128-bit signature (bits)." />
    </Register>
    <Register start="+0x30" size="4" name="FMSW1" access="ReadOnly" description="Words of 128-bit signature word" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SW" description="Words of 128-bit signature (bits)." />
    </Register>
    <Register start="+0x34" size="4" name="FMSW2" access="ReadOnly" description="Words of 128-bit signature word" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SW" description="Words of 128-bit signature (bits)." />
    </Register>
    <Register start="+0x38" size="4" name="FMSW3" access="ReadOnly" description="Words of 128-bit signature word" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SW" description="Words of 128-bit signature (bits)." />
    </Register>
    <Register start="+0xFE0" size="4" name="FMSTAT" access="ReadOnly" description="Signature generation status register" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="SIG_DONE" description="When 1, a previously started signature generation has completed." />
    </Register>
    <Register start="+0xFE8" size="4" name="FMSTATCLR" access="WriteOnly" description="Signature generation status clear register" reset_value="0" reset_mask="0x4">
      <BitField start="2" size="1" name="SIG_DONE_CLR" description="Writing a 1 to this bits clears the signature generation completion flag (SIG_DONE) in the FMSTAT register." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SMARTCARD0" start="0x40036000" description="LPC5460x/LPC54S60x Smart Card Interface">
    <Register start="+0" size="4" name="DLL" access="Read/Write" description="Divisor Latch LSB" reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="8" name="DLLSB" description="The SCIn Divisor Latch LSB Register, along with the SCInDLM register, determines the baud rate of the SCIn." />
    </Register>
    <Register start="+0" size="4" name="RBR" access="ReadOnly" description="Receiver Buffer Register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="RBR" description="The SCIn Receiver Buffer Register contains the oldest received byte in the SCIn Rx FIFO." />
    </Register>
    <Register start="+0" size="4" name="THR" access="WriteOnly" description="Transmit Holding Register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="THR" description="Writing to the SCIn Transmit Holding Register causes the data to be stored in the SCIn transmit FIFO." />
    </Register>
    <Register start="+0x4" size="4" name="DLM" access="Read/Write" description="Divisor Latch MSB" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DLMSB" description="The SCIn Divisor Latch MSB Register, along with the DLL register, determines the baud rate of the SCIn." />
    </Register>
    <Register start="+0x4" size="4" name="IER" access="Read/Write" description="Interrupt Enable Register" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="RBRIE" description="RBR Interrupt Enable." />
      <BitField start="1" size="1" name="THREIE" description="THRE Interrupt Enable." />
      <BitField start="2" size="1" name="RXIE" description="RX Line Status Interrupt Enable." />
    </Register>
    <Register start="+0x8" size="4" name="FCR" access="WriteOnly" description="FIFO Control Register" reset_value="0" reset_mask="0xCF">
      <BitField start="0" size="1" name="FIFOEN" description="FIFO Enable." />
      <BitField start="1" size="1" name="RXFIFORES" description="RX FIFO Reset." />
      <BitField start="2" size="1" name="TXFIFORES" description="TX FIFO Reset." />
      <BitField start="3" size="1" name="DMAMODE" description="DMA Mode Select." />
      <BitField start="6" size="2" name="RXTRIGLVL" description="RX Trigger Level." />
    </Register>
    <Register start="+0x8" size="4" name="IIR" access="ReadOnly" description="Interrupt ID Register" reset_value="0x1" reset_mask="0xCF">
      <BitField start="0" size="1" name="INTSTATUS" description="Interrupt status." />
      <BitField start="1" size="3" name="INTID" description="Interrupt identification." />
      <BitField start="6" size="2" name="FIFOENABLE" description="Copies of SCInFCR[0]." />
    </Register>
    <Register start="+0xC" size="4" name="LCR" access="Read/Write" description="Line Control Register" reset_value="0" reset_mask="0xBF">
      <BitField start="0" size="2" name="WLS" description="Word Length Select." />
      <BitField start="2" size="1" name="SBS" description="Stop Bit Select." />
      <BitField start="3" size="1" name="PE" description="Parity Enable." />
      <BitField start="4" size="2" name="PS" description="Parity Select." />
      <BitField start="7" size="1" name="DLAB" description="Divisor Latch Access Bit." />
    </Register>
    <Register start="+0x14" size="4" name="LSR" access="ReadOnly" description="Line Status Register" reset_value="0x60" reset_mask="0xEF">
      <BitField start="0" size="1" name="RDR" description="Receiver Data Ready." />
      <BitField start="1" size="1" name="OE" description="Overrun Error." />
      <BitField start="2" size="1" name="PE" description="Parity Error." />
      <BitField start="3" size="1" name="FE" description="Framing Error." />
      <BitField start="5" size="1" name="THRE" description="Transmitter Holding Register Empty." />
      <BitField start="6" size="1" name="TEMT" description="Transmitter Empty." />
      <BitField start="7" size="1" name="RXFE" description="Error in RX FIFO." />
    </Register>
    <Register start="+0x1C" size="4" name="SCR" access="Read/Write" description="Scratch Pad Register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="PAD" description="A readable, writable byte." />
    </Register>
    <Register start="+0x2C" size="4" name="OSR" access="Read/Write" description="Oversampling register" reset_value="0xF0" reset_mask="0x7FFE">
      <BitField start="1" size="3" name="OSFRAC" description="Fractional part of the oversampling ratio, in units of 1/8th of an input clock period." />
      <BitField start="4" size="4" name="OSINT" description="Integer part of the oversampling ratio, minus 1." />
      <BitField start="8" size="7" name="FDINT" description="These bits act as a more-significant extension of the OSint field, allowing an oversampling ratio up to 2048 as required by ISO7816-3." />
    </Register>
    <Register start="+0x48" size="4" name="SCICTRL" access="Read/Write" description="Smart Card Interface control register" reset_value="0" reset_mask="0xFFE7">
      <BitField start="0" size="1" name="SCIEN" description="Smart Card Interface Enable." />
      <BitField start="1" size="1" name="NACKDIS" description="NACK response disable." />
      <BitField start="2" size="1" name="PROTSEL" description="Protocol selection as defined in the ISO7816-3 standard." />
      <BitField start="5" size="3" name="TXRETRY" description="Maximum number of retransmissions in case of a negative acknowledge (protocol T=0)." />
      <BitField start="8" size="8" name="GUARDTIME" description="Extra guard time." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SMARTCARD1" start="0x40037000" description="LPC5460x/LPC54S60x Smart Card Interface">
    <Register start="+0" size="4" name="DLL" access="Read/Write" description="Divisor Latch LSB" reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="8" name="DLLSB" description="The SCIn Divisor Latch LSB Register, along with the SCInDLM register, determines the baud rate of the SCIn." />
    </Register>
    <Register start="+0" size="4" name="RBR" access="ReadOnly" description="Receiver Buffer Register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="RBR" description="The SCIn Receiver Buffer Register contains the oldest received byte in the SCIn Rx FIFO." />
    </Register>
    <Register start="+0" size="4" name="THR" access="WriteOnly" description="Transmit Holding Register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="THR" description="Writing to the SCIn Transmit Holding Register causes the data to be stored in the SCIn transmit FIFO." />
    </Register>
    <Register start="+0x4" size="4" name="DLM" access="Read/Write" description="Divisor Latch MSB" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DLMSB" description="The SCIn Divisor Latch MSB Register, along with the DLL register, determines the baud rate of the SCIn." />
    </Register>
    <Register start="+0x4" size="4" name="IER" access="Read/Write" description="Interrupt Enable Register" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="RBRIE" description="RBR Interrupt Enable." />
      <BitField start="1" size="1" name="THREIE" description="THRE Interrupt Enable." />
      <BitField start="2" size="1" name="RXIE" description="RX Line Status Interrupt Enable." />
    </Register>
    <Register start="+0x8" size="4" name="FCR" access="WriteOnly" description="FIFO Control Register" reset_value="0" reset_mask="0xCF">
      <BitField start="0" size="1" name="FIFOEN" description="FIFO Enable." />
      <BitField start="1" size="1" name="RXFIFORES" description="RX FIFO Reset." />
      <BitField start="2" size="1" name="TXFIFORES" description="TX FIFO Reset." />
      <BitField start="3" size="1" name="DMAMODE" description="DMA Mode Select." />
      <BitField start="6" size="2" name="RXTRIGLVL" description="RX Trigger Level." />
    </Register>
    <Register start="+0x8" size="4" name="IIR" access="ReadOnly" description="Interrupt ID Register" reset_value="0x1" reset_mask="0xCF">
      <BitField start="0" size="1" name="INTSTATUS" description="Interrupt status." />
      <BitField start="1" size="3" name="INTID" description="Interrupt identification." />
      <BitField start="6" size="2" name="FIFOENABLE" description="Copies of SCInFCR[0]." />
    </Register>
    <Register start="+0xC" size="4" name="LCR" access="Read/Write" description="Line Control Register" reset_value="0" reset_mask="0xBF">
      <BitField start="0" size="2" name="WLS" description="Word Length Select." />
      <BitField start="2" size="1" name="SBS" description="Stop Bit Select." />
      <BitField start="3" size="1" name="PE" description="Parity Enable." />
      <BitField start="4" size="2" name="PS" description="Parity Select." />
      <BitField start="7" size="1" name="DLAB" description="Divisor Latch Access Bit." />
    </Register>
    <Register start="+0x14" size="4" name="LSR" access="ReadOnly" description="Line Status Register" reset_value="0x60" reset_mask="0xEF">
      <BitField start="0" size="1" name="RDR" description="Receiver Data Ready." />
      <BitField start="1" size="1" name="OE" description="Overrun Error." />
      <BitField start="2" size="1" name="PE" description="Parity Error." />
      <BitField start="3" size="1" name="FE" description="Framing Error." />
      <BitField start="5" size="1" name="THRE" description="Transmitter Holding Register Empty." />
      <BitField start="6" size="1" name="TEMT" description="Transmitter Empty." />
      <BitField start="7" size="1" name="RXFE" description="Error in RX FIFO." />
    </Register>
    <Register start="+0x1C" size="4" name="SCR" access="Read/Write" description="Scratch Pad Register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="PAD" description="A readable, writable byte." />
    </Register>
    <Register start="+0x2C" size="4" name="OSR" access="Read/Write" description="Oversampling register" reset_value="0xF0" reset_mask="0x7FFE">
      <BitField start="1" size="3" name="OSFRAC" description="Fractional part of the oversampling ratio, in units of 1/8th of an input clock period." />
      <BitField start="4" size="4" name="OSINT" description="Integer part of the oversampling ratio, minus 1." />
      <BitField start="8" size="7" name="FDINT" description="These bits act as a more-significant extension of the OSint field, allowing an oversampling ratio up to 2048 as required by ISO7816-3." />
    </Register>
    <Register start="+0x48" size="4" name="SCICTRL" access="Read/Write" description="Smart Card Interface control register" reset_value="0" reset_mask="0xFFE7">
      <BitField start="0" size="1" name="SCIEN" description="Smart Card Interface Enable." />
      <BitField start="1" size="1" name="NACKDIS" description="NACK response disable." />
      <BitField start="2" size="1" name="PROTSEL" description="Protocol selection as defined in the ISO7816-3 standard." />
      <BitField start="5" size="3" name="TXRETRY" description="Maximum number of retransmissions in case of a negative acknowledge (protocol T=0)." />
      <BitField start="8" size="8" name="GUARDTIME" description="Extra guard time." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="ASYNC_SYSCON" start="0x40040000" description="LPC5411x Asynchronous system configuration (ASYNC_SYSCON)">
    <Register start="+0" size="4" name="ASYNCPRESETCTRL" access="Read/Write" description="Async peripheral reset control" reset_value="0" reset_mask="0x6000">
      <BitField start="13" size="1" name="CTIMER3" description="Standard counter/timer CTIMER3 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
      <BitField start="14" size="1" name="CTIMER4" description="Standard counter/timer CTIMER4 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function." />
    </Register>
    <Register start="+0x4" size="4" name="ASYNCPRESETCTRLSET" access="WriteOnly" description="Set bits in ASYNCPRESETCTRL" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="ARST_SET" description="Writing ones to this register sets the corresponding bit or bits in the ASYNCPRESETCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x8" size="4" name="ASYNCPRESETCTRLCLR" access="WriteOnly" description="Clear bits in ASYNCPRESETCTRL" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="ARST_CLR" description="Writing ones to this register clears the corresponding bit or bits in the ASYNCPRESETCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x10" size="4" name="ASYNCAPBCLKCTRL" access="Read/Write" description="Async peripheral clock control" reset_value="0" reset_mask="0x6000">
      <BitField start="13" size="1" name="CTIMER3" description="Controls the clock for CTIMER3. 0 = Disable; 1 = Enable." />
      <BitField start="14" size="1" name="CTIMER4" description="Controls the clock for CTIMER4. 0 = Disable; 1 = Enable." />
    </Register>
    <Register start="+0x14" size="4" name="ASYNCAPBCLKCTRLSET" access="WriteOnly" description="Set bits in ASYNCAPBCLKCTRL" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="ACLK_SET" description="Writing ones to this register sets the corresponding bit or bits in the ASYNCAPBCLKCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x18" size="4" name="ASYNCAPBCLKCTRLCLR" access="WriteOnly" description="Clear bits in ASYNCAPBCLKCTRL" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="ACLK_CLR" description="Writing ones to this register clears the corresponding bit or bits in the ASYNCAPBCLKCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCAPBCLKCTRL are reserved and only zeroes should be written to them." />
    </Register>
    <Register start="+0x20" size="4" name="ASYNCAPBCLKSELA" access="Read/Write" description="Async APB clock source select A" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="SEL" description="Clock source for asynchronous clock source selector A">
        <Enum name="0" start="0b00" description="Main clock (main_clk)" />
        <Enum name="1" start="0b01" description="FRO 12 MHz (fro_12m)" />
        <Enum name="10" start="0b10" description="Audio PLL clock.(AUDPLL_BYPASS)" />
        <Enum name="11" start="0b11" description="fc6 fclk (fc6_fclk)" />
      </BitField>
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPIFI0" start="0x40080000" description="LPC5411x SPI Flash Interface (SPIFI)">
    <Register start="+0" size="4" name="CTRL" access="Read/Write" description="SPIFI control register" reset_value="0x400FFFFF" reset_mask="0xF8EFFFFF">
      <BitField start="0" size="16" name="TIMEOUT" description="This field contains the number of serial clock periods without the processor reading data in memory mode, which will cause the SPIFI hardware to terminate the command by driving the CS pin high and negating the CMD bit in the Status register. (This allows the flash memory to enter a lower-power state.) If the processor reads data from the flash region after a time-out, the command in the Memory Command Register is issued again." />
      <BitField start="16" size="4" name="CSHIGH" description="This field controls the minimum CS high time, expressed as a number of serial clock periods minus one." />
      <BitField start="21" size="1" name="D_PRFTCH_DIS" description="This bit allows conditioning of memory mode prefetches based on the AHB HPROT (instruction/data) access information. A 1 in this register means that the SPIFI will not attempt a speculative prefetch when it encounters data accesses." />
      <BitField start="22" size="1" name="INTEN" description="If this bit is 1 when a command ends, the SPIFI will assert its interrupt request output. See INTRQ in the status register for further details." />
      <BitField start="23" size="1" name="MODE3" description="SPI Mode 3 select.">
        <Enum name="0" start="0b0" description="SCK LOW. The SPIFI drives SCK low after the rising edge at which the last bit of each command is captured, and keeps it low while CS is HIGH." />
        <Enum name="1" start="0b1" description="SCK HIGH. the SPIFI keeps SCK high after the rising edge for the last bit of each command and while CS is HIGH, and drives it low after it drives CS LOW. (Known serial flash devices can handle either mode, but some devices may require a particular mode for proper operation.) MODE3, RFCLK, and FBCLK should not all be 1, because in this case there is no final falling edge on SCK on which to sample the last data bit of the frame." />
      </BitField>
      <BitField start="27" size="1" name="PRFTCH_DIS" description="Cache prefetching enable. The SPIFI includes an internal cache. A 1 in this bit disables prefetching of cache lines.">
        <Enum name="0" start="0b0" description="Enable. Cache prefetching enabled." />
        <Enum name="1" start="0b1" description="Disable. Disables prefetching of cache lines." />
      </BitField>
      <BitField start="28" size="1" name="DUAL" description="Select dual protocol.">
        <Enum name="0" start="0b0" description="Quad protocol. This protocol uses IO3:0." />
        <Enum name="1" start="0b1" description="Dual protocol. This protocol uses IO1:0." />
      </BitField>
      <BitField start="29" size="1" name="RFCLK" description="Select active clock edge for input data.">
        <Enum name="0" start="0b0" description="Rising edge. Read data is sampled on rising edges on the clock, as in classic SPI operation." />
        <Enum name="1" start="0b1" description="Falling edge. Read data is sampled on falling edges of the clock, allowing a full serial clock of of time in order to maximize the serial clock frequency. MODE3, RFCLK, and FBCLK should not all be 1, because in this case there is no final falling edge on SCK on which to sample the last data bit of the frame." />
      </BitField>
      <BitField start="30" size="1" name="FBCLK" description="Feedback clock select.">
        <Enum name="0" start="0b0" description="Internal clock. The SPIFI samples read data using an internal clock." />
        <Enum name="1" start="0b1" description="Feedback clock. Read data is sampled using a feedback clock from the SCK pin. This allows slightly more time for each received bit. MODE3, RFCLK, and FBCLK should not all be 1, because in this case there is no final falling edge on SCK on which to sample the last data bit of the frame." />
      </BitField>
      <BitField start="31" size="1" name="DMAEN" description="A 1 in this bit enables the DMA Request output from the SPIFI. Set this bit only when a DMA channel is used to transfer data in peripheral mode. Do not set this bit when a DMA channel is used for memory-to-memory transfers from the SPIFI memory area. DMAEN should only be used in Command mode." />
    </Register>
    <Register start="+0x4" size="4" name="CMD" access="Read/Write" description="SPIFI command register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="14" name="DATALEN" description="Except when the POLL bit in this register is 1, this field controls how many data bytes are in the command. 0 indicates that the command does not contain a data field." />
      <BitField start="14" size="1" name="POLL" description="This bit should be written as 1 only with an opcode that a) contains an input data field, and b) causes the serial flash device to return byte status repetitively (e.g., a Read Status command). When this bit is 1, the SPIFI hardware continues to read bytes until the test specified by the DATALEN field is met. The hardware tests the bit in each status byte selected by DATALEN bits 2:0, until a bit is found that is equal to DATALEN bit 3. When the test succeeds, the SPIFI captures the byte that meets this test so that it can be read from the Data Register, and terminates the command by raising CS. The end-of-command interrupt can be enabled to inform software when this occurs" />
      <BitField start="15" size="1" name="DOUT" description="If the DATALEN field is not zero, this bit controls the direction of the data:">
        <Enum name="0" start="0b0" description="Input from serial flash." />
        <Enum name="1" start="0b1" description="Output to serial flash." />
      </BitField>
      <BitField start="16" size="3" name="INTLEN" description="This field controls how many intermediate bytes precede the data. (Each such byte may require 8 or 2 SCK cycles, depending on whether the intermediate field is in serial, 2-bit, or 4-bit format.) Intermediate bytes are output by the SPIFI, and include post-address control information, dummy and delay bytes. See the description of the Intermediate Data register for the contents of such bytes." />
      <BitField start="19" size="2" name="FIELDFORM" description="This field controls how the fields of the command are sent.">
        <Enum name="0" start="0b00" description="All serial. All fields of the command are serial." />
        <Enum name="1" start="0b01" description="Quad/dual data. Data field is quad/dual, other fields are serial." />
        <Enum name="10" start="0b10" description="Serial opcode. Opcode field is serial. Other fields are quad/dual." />
        <Enum name="11" start="0b11" description="All quad/dual. All fields of the command are in quad/dual format." />
      </BitField>
      <BitField start="21" size="3" name="FRAMEFORM" description="This field controls the opcode and address fields.">
        <Enum name="1" start="0b001" description="Opcode. Opcode only, no address." />
        <Enum name="10" start="0b010" description="Opcode one byte. Opcode, least significant byte of address." />
        <Enum name="11" start="0b011" description="Opcode two bytes. Opcode, two least significant bytes of address." />
        <Enum name="100" start="0b100" description="Opcode three bytes. Opcode, three least significant bytes of address." />
        <Enum name="101" start="0b101" description="Opcode four bytes. Opcode, 4 bytes of address." />
        <Enum name="110" start="0b110" description="No opcode three bytes. No opcode, 3 least significant bytes of address." />
        <Enum name="111" start="0b111" description="No opcode four bytes. No opcode, 4 bytes of address." />
      </BitField>
      <BitField start="24" size="8" name="OPCODE" description="The opcode of the command (not used for some FRAMEFORM values)." />
    </Register>
    <Register start="+0x8" size="4" name="ADDR" access="Read/Write" description="SPIFI address register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ADDRESS" description="Address." />
    </Register>
    <Register start="+0xC" size="4" name="IDATA" access="Read/Write" description="SPIFI intermediate data register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="IDATA" description="Value of intermediate bytes." />
    </Register>
    <Register start="+0x10" size="4" name="CLIMIT" access="Read/Write" description="SPIFI limit register" reset_value="0x8000000" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CLIMIT" description="Zero-based upper limit of cacheable memory" />
    </Register>
    <Register start="+0x14" size="4" name="DATA" access="Read/Write" description="SPIFI data register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="Input or output data" />
    </Register>
    <Register start="+0x18" size="4" name="MCMD" access="Read/Write" description="SPIFI memory command register" reset_value="0" reset_mask="0xFFFFC000">
      <BitField start="14" size="1" name="POLL" description="This bit should be written as 0." />
      <BitField start="15" size="1" name="DOUT" description="This bit should be written as 0." />
      <BitField start="16" size="3" name="INTLEN" description="This field controls how many intermediate bytes precede the data. (Each such byte may require 8 or 2 SCK cycles, depending on whether the intermediate field is in serial, 2-bit, or 4-bit format.) Intermediate bytes are output by the SPIFI, and include post-address control information, dummy and delay bytes. See the description of the Intermediate Data register for the contents of such bytes." />
      <BitField start="19" size="2" name="FIELDFORM" description="This field controls how the fields of the command are sent.">
        <Enum name="0" start="0b00" description="All serial. All fields of the command are serial." />
        <Enum name="1" start="0b01" description="Quad/dual data. Data field is quad/dual, other fields are serial." />
        <Enum name="10" start="0b10" description="Serial opcode. Opcode field is serial. Other fields are quad/dual." />
        <Enum name="11" start="0b11" description="All quad/dual. All fields of the command are in quad/dual format." />
      </BitField>
      <BitField start="21" size="3" name="FRAMEFORM" description="This field controls the opcode and address fields.">
        <Enum name="1" start="0b001" description="Opcode. Opcode only, no address." />
        <Enum name="10" start="0b010" description="Opcode one byte. Opcode, least-significant byte of address." />
        <Enum name="11" start="0b011" description="Opcode two bytes. Opcode, 2 least-significant bytes of address." />
        <Enum name="100" start="0b100" description="Opcode three bytes. Opcode, 3 least-significant bytes of address." />
        <Enum name="101" start="0b101" description="Opcode four bytes. Opcode, 4 bytes of address." />
        <Enum name="110" start="0b110" description="No opcode three bytes. No opcode, 3 least-significant bytes of address." />
        <Enum name="111" start="0b111" description="No opcode, 4 bytes of address." />
      </BitField>
      <BitField start="24" size="8" name="OPCODE" description="The opcode of the command (not used for some FRAMEFORM values)." />
    </Register>
    <Register start="+0x1C" size="4" name="STAT" access="Read/Write" description="SPIFI status register" reset_value="0x2000000" reset_mask="0xFF000033">
      <BitField start="0" size="1" name="MCINIT" description="This bit is set when software successfully writes the Memory Command register, and is cleared by Reset or by writing a 1 to the RESET bit in this register." />
      <BitField start="1" size="1" name="CMD" description="This bit is 1 when the Command register is written. It is cleared by a hardware reset, a write to the RESET bit in this register, or the deassertion of CS which indicates that the command has completed communication with the SPI Flash." />
      <BitField start="4" size="1" name="RESET" description="Write a 1 to this bit to abort a current command or memory mode. This bit is cleared when the hardware is ready for a new command to be written to the Command register." />
      <BitField start="5" size="1" name="INTRQ" description="This bit reflects the SPIFI interrupt request. Write a 1 to this bit to clear it. This bit is set when a CMD was previously 1 and has been cleared due to the deassertion of CS." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="EMC" start="0x40081000" description="LPC54S60x/LPC5460x External Memory Controller (EMC)">
    <Register start="+0" size="4" name="CONTROL" access="Read/Write" description="Controls operation of the memory controller" reset_value="0x3" reset_mask="0x7">
      <BitField start="0" size="1" name="E" description="EMC Enable." />
      <BitField start="1" size="1" name="M" description="Address mirror." />
      <BitField start="2" size="1" name="L" description="Low-power mode." />
    </Register>
    <Register start="+0x4" size="4" name="STATUS" access="ReadOnly" description="Provides EMC status information" reset_value="0x5" reset_mask="0x7">
      <BitField start="0" size="1" name="B" description="Busy." />
      <BitField start="1" size="1" name="S" description="Write buffer status." />
      <BitField start="2" size="1" name="SA" description="Self-refresh acknowledge." />
    </Register>
    <Register start="+0x8" size="4" name="CONFIG" access="Read/Write" description="Configures operation of the memory controller" reset_value="0" reset_mask="0x101">
      <BitField start="0" size="1" name="EM" description="Endian mode." />
      <BitField start="8" size="1" name="CLKR" description="This bit must contain 0 for proper operation of the EMC." />
    </Register>
    <Register start="+0x20" size="4" name="DYNAMICCONTROL" access="Read/Write" description="Controls dynamic memory operation" reset_value="0x6" reset_mask="0x1A7">
      <BitField start="0" size="1" name="CE" description="Dynamic memory clock enable." />
      <BitField start="1" size="1" name="CS" description="Dynamic memory clock control." />
      <BitField start="2" size="1" name="SR" description="Self-refresh request, EMCSREFREQ." />
      <BitField start="5" size="1" name="MMC" description="Memory clock control." />
      <BitField start="7" size="2" name="I" description="SDRAM initialization." />
    </Register>
    <Register start="+0x24" size="4" name="DYNAMICREFRESH" access="Read/Write" description="Configures dynamic memory refresh" reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="11" name="REFRESH" description="Refresh timer." />
    </Register>
    <Register start="+0x28" size="4" name="DYNAMICREADCONFIG" access="Read/Write" description="Configures dynamic memory read strategy" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="RD" description="Read data strategy." />
    </Register>
    <Register start="+0x30" size="4" name="DYNAMICRP" access="Read/Write" description="Precharge command period" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="TRP" description="Precharge command period." />
    </Register>
    <Register start="+0x34" size="4" name="DYNAMICRAS" access="Read/Write" description="Active to precharge command period" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="TRAS" description="Active to precharge command period." />
    </Register>
    <Register start="+0x38" size="4" name="DYNAMICSREX" access="Read/Write" description="Self-refresh exit time" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="TSREX" description="Self-refresh exit time." />
    </Register>
    <Register start="+0x3C" size="4" name="DYNAMICAPR" access="Read/Write" description="Last-data-out to active command time" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="TAPR" description="Last-data-out to active command time." />
    </Register>
    <Register start="+0x40" size="4" name="DYNAMICDAL" access="Read/Write" description="Data-in to active command time" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="TDAL" description="Data-in to active command." />
    </Register>
    <Register start="+0x44" size="4" name="DYNAMICWR" access="Read/Write" description="Write recovery time" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="TWR" description="Write recovery time." />
    </Register>
    <Register start="+0x48" size="4" name="DYNAMICRC" access="Read/Write" description="Selects the active to active command period" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="TRC" description="Active to active command period." />
    </Register>
    <Register start="+0x4C" size="4" name="DYNAMICRFC" access="Read/Write" description="Selects the auto-refresh period" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="TRFC" description="Auto-refresh period and auto-refresh to active command period." />
    </Register>
    <Register start="+0x50" size="4" name="DYNAMICXSR" access="Read/Write" description="Time for exit self-refresh to active command" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="TXSR" description="Exit self-refresh to active command time." />
    </Register>
    <Register start="+0x54" size="4" name="DYNAMICRRD" access="Read/Write" description="Latency for active bank A to active bank B" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="TRRD" description="Active bank A to active bank B latency 0x0 - 0xE = n + 1 clock cycles." />
    </Register>
    <Register start="+0x58" size="4" name="DYNAMICMRD" access="Read/Write" description="Time for load mode register to active command" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="TMRD" description="Load mode register to active command time." />
    </Register>
    <Register start="+0x80" size="4" name="STATICEXTENDEDWAIT" access="Read/Write" description="Time for long static memory read and write transfers" reset_value="0" reset_mask="0x3FF">
      <BitField start="0" size="10" name="EXTENDEDWAIT" description="Extended wait time out." />
    </Register>
    <Register start="+0x100" size="4" name="DYNAMICCONFIG0" access="Read/Write" description="Configuration information for EMC_DYCSx" reset_value="0" reset_mask="0x185F98">
      <BitField start="3" size="2" name="MD" description="Memory device." />
      <BitField start="7" size="6" name="AM0" description="See Table 933." />
      <BitField start="14" size="1" name="AM1" description="See Table 933." />
      <BitField start="19" size="1" name="B" description="Buffer enable." />
      <BitField start="20" size="1" name="P" description="Write protect." />
    </Register>
    <Register start="+0x104" size="4" name="DYNAMICRASCAS0" access="Read/Write" description="RAS and CAS latencies for EMC_DYCSx" reset_value="0x303" reset_mask="0x303">
      <BitField start="0" size="2" name="RAS" description="RAS latency (active to read/write delay)." />
      <BitField start="8" size="2" name="CAS" description="CAS latency." />
    </Register>
    <Register start="+0x120" size="4" name="DYNAMICCONFIG1" access="Read/Write" description="Configuration information for EMC_DYCSx" reset_value="0" reset_mask="0x185F98">
      <BitField start="3" size="2" name="MD" description="Memory device." />
      <BitField start="7" size="6" name="AM0" description="See Table 933." />
      <BitField start="14" size="1" name="AM1" description="See Table 933." />
      <BitField start="19" size="1" name="B" description="Buffer enable." />
      <BitField start="20" size="1" name="P" description="Write protect." />
    </Register>
    <Register start="+0x124" size="4" name="DYNAMICRASCAS1" access="Read/Write" description="RAS and CAS latencies for EMC_DYCSx" reset_value="0x303" reset_mask="0x303">
      <BitField start="0" size="2" name="RAS" description="RAS latency (active to read/write delay)." />
      <BitField start="8" size="2" name="CAS" description="CAS latency." />
    </Register>
    <Register start="+0x140" size="4" name="DYNAMICCONFIG2" access="Read/Write" description="Configuration information for EMC_DYCSx" reset_value="0" reset_mask="0x185F98">
      <BitField start="3" size="2" name="MD" description="Memory device." />
      <BitField start="7" size="6" name="AM0" description="See Table 933." />
      <BitField start="14" size="1" name="AM1" description="See Table 933." />
      <BitField start="19" size="1" name="B" description="Buffer enable." />
      <BitField start="20" size="1" name="P" description="Write protect." />
    </Register>
    <Register start="+0x144" size="4" name="DYNAMICRASCAS2" access="Read/Write" description="RAS and CAS latencies for EMC_DYCSx" reset_value="0x303" reset_mask="0x303">
      <BitField start="0" size="2" name="RAS" description="RAS latency (active to read/write delay)." />
      <BitField start="8" size="2" name="CAS" description="CAS latency." />
    </Register>
    <Register start="+0x160" size="4" name="DYNAMICCONFIG3" access="Read/Write" description="Configuration information for EMC_DYCSx" reset_value="0" reset_mask="0x185F98">
      <BitField start="3" size="2" name="MD" description="Memory device." />
      <BitField start="7" size="6" name="AM0" description="See Table 933." />
      <BitField start="14" size="1" name="AM1" description="See Table 933." />
      <BitField start="19" size="1" name="B" description="Buffer enable." />
      <BitField start="20" size="1" name="P" description="Write protect." />
    </Register>
    <Register start="+0x164" size="4" name="DYNAMICRASCAS3" access="Read/Write" description="RAS and CAS latencies for EMC_DYCSx" reset_value="0x303" reset_mask="0x303">
      <BitField start="0" size="2" name="RAS" description="RAS latency (active to read/write delay)." />
      <BitField start="8" size="2" name="CAS" description="CAS latency." />
    </Register>
    <Register start="+0x200" size="4" name="STATICCONFIG0" access="Read/Write" description="Configuration for EMC_CSx" reset_value="0" reset_mask="0x1801CB">
      <BitField start="0" size="2" name="MW" description="Memory width." />
      <BitField start="3" size="1" name="PM" description="Page mode." />
      <BitField start="6" size="1" name="PC" description="Chip select polarity." />
      <BitField start="7" size="1" name="PB" description="Byte lane state." />
      <BitField start="8" size="1" name="EW" description="Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers." />
      <BitField start="19" size="1" name="B" description="Buffer enable [2]." />
      <BitField start="20" size="1" name="P" description="Write protect." />
    </Register>
    <Register start="+0x204" size="4" name="STATICWAITWEN0" access="Read/Write" description="Delay from EMC_CSx to write enable" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITWEN" description="Wait write enable." />
    </Register>
    <Register start="+0x208" size="4" name="STATICWAITOEN0" access="Read/Write" description="Delay from EMC_CSx or address change, whichever is later, to output enable" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITOEN" description="Wait output enable." />
    </Register>
    <Register start="+0x20C" size="4" name="STATICWAITRD0" access="Read/Write" description="Delay from EMC_CSx to a read access" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITRD" description="." />
    </Register>
    <Register start="+0x210" size="4" name="STATICWAITPAGE0" access="Read/Write" description="Delay for asynchronous page mode sequential accesses for EMC_CSx" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITPAGE" description="Asynchronous page mode read after the first read wait states." />
    </Register>
    <Register start="+0x214" size="4" name="STATICWAITWR0" access="Read/Write" description="Delay from EMC_CSx to a write access" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITWR" description="Write wait states." />
    </Register>
    <Register start="+0x218" size="4" name="STATICWAITTURN0" access="Read/Write" description="Number of bus turnaround cycles EMC_CSx" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITTURN" description="Bus turn-around cycles." />
    </Register>
    <Register start="+0x220" size="4" name="STATICCONFIG1" access="Read/Write" description="Configuration for EMC_CSx" reset_value="0" reset_mask="0x1801CB">
      <BitField start="0" size="2" name="MW" description="Memory width." />
      <BitField start="3" size="1" name="PM" description="Page mode." />
      <BitField start="6" size="1" name="PC" description="Chip select polarity." />
      <BitField start="7" size="1" name="PB" description="Byte lane state." />
      <BitField start="8" size="1" name="EW" description="Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers." />
      <BitField start="19" size="1" name="B" description="Buffer enable [2]." />
      <BitField start="20" size="1" name="P" description="Write protect." />
    </Register>
    <Register start="+0x224" size="4" name="STATICWAITWEN1" access="Read/Write" description="Delay from EMC_CSx to write enable" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITWEN" description="Wait write enable." />
    </Register>
    <Register start="+0x228" size="4" name="STATICWAITOEN1" access="Read/Write" description="Delay from EMC_CSx or address change, whichever is later, to output enable" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITOEN" description="Wait output enable." />
    </Register>
    <Register start="+0x22C" size="4" name="STATICWAITRD1" access="Read/Write" description="Delay from EMC_CSx to a read access" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITRD" description="." />
    </Register>
    <Register start="+0x230" size="4" name="STATICWAITPAGE1" access="Read/Write" description="Delay for asynchronous page mode sequential accesses for EMC_CSx" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITPAGE" description="Asynchronous page mode read after the first read wait states." />
    </Register>
    <Register start="+0x234" size="4" name="STATICWAITWR1" access="Read/Write" description="Delay from EMC_CSx to a write access" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITWR" description="Write wait states." />
    </Register>
    <Register start="+0x238" size="4" name="STATICWAITTURN1" access="Read/Write" description="Number of bus turnaround cycles EMC_CSx" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITTURN" description="Bus turn-around cycles." />
    </Register>
    <Register start="+0x240" size="4" name="STATICCONFIG2" access="Read/Write" description="Configuration for EMC_CSx" reset_value="0" reset_mask="0x1801CB">
      <BitField start="0" size="2" name="MW" description="Memory width." />
      <BitField start="3" size="1" name="PM" description="Page mode." />
      <BitField start="6" size="1" name="PC" description="Chip select polarity." />
      <BitField start="7" size="1" name="PB" description="Byte lane state." />
      <BitField start="8" size="1" name="EW" description="Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers." />
      <BitField start="19" size="1" name="B" description="Buffer enable [2]." />
      <BitField start="20" size="1" name="P" description="Write protect." />
    </Register>
    <Register start="+0x244" size="4" name="STATICWAITWEN2" access="Read/Write" description="Delay from EMC_CSx to write enable" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITWEN" description="Wait write enable." />
    </Register>
    <Register start="+0x248" size="4" name="STATICWAITOEN2" access="Read/Write" description="Delay from EMC_CSx or address change, whichever is later, to output enable" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITOEN" description="Wait output enable." />
    </Register>
    <Register start="+0x24C" size="4" name="STATICWAITRD2" access="Read/Write" description="Delay from EMC_CSx to a read access" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITRD" description="." />
    </Register>
    <Register start="+0x250" size="4" name="STATICWAITPAGE2" access="Read/Write" description="Delay for asynchronous page mode sequential accesses for EMC_CSx" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITPAGE" description="Asynchronous page mode read after the first read wait states." />
    </Register>
    <Register start="+0x254" size="4" name="STATICWAITWR2" access="Read/Write" description="Delay from EMC_CSx to a write access" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITWR" description="Write wait states." />
    </Register>
    <Register start="+0x258" size="4" name="STATICWAITTURN2" access="Read/Write" description="Number of bus turnaround cycles EMC_CSx" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITTURN" description="Bus turn-around cycles." />
    </Register>
    <Register start="+0x260" size="4" name="STATICCONFIG3" access="Read/Write" description="Configuration for EMC_CSx" reset_value="0" reset_mask="0x1801CB">
      <BitField start="0" size="2" name="MW" description="Memory width." />
      <BitField start="3" size="1" name="PM" description="Page mode." />
      <BitField start="6" size="1" name="PC" description="Chip select polarity." />
      <BitField start="7" size="1" name="PB" description="Byte lane state." />
      <BitField start="8" size="1" name="EW" description="Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers." />
      <BitField start="19" size="1" name="B" description="Buffer enable [2]." />
      <BitField start="20" size="1" name="P" description="Write protect." />
    </Register>
    <Register start="+0x264" size="4" name="STATICWAITWEN3" access="Read/Write" description="Delay from EMC_CSx to write enable" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITWEN" description="Wait write enable." />
    </Register>
    <Register start="+0x268" size="4" name="STATICWAITOEN3" access="Read/Write" description="Delay from EMC_CSx or address change, whichever is later, to output enable" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITOEN" description="Wait output enable." />
    </Register>
    <Register start="+0x26C" size="4" name="STATICWAITRD3" access="Read/Write" description="Delay from EMC_CSx to a read access" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITRD" description="." />
    </Register>
    <Register start="+0x270" size="4" name="STATICWAITPAGE3" access="Read/Write" description="Delay for asynchronous page mode sequential accesses for EMC_CSx" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITPAGE" description="Asynchronous page mode read after the first read wait states." />
    </Register>
    <Register start="+0x274" size="4" name="STATICWAITWR3" access="Read/Write" description="Delay from EMC_CSx to a write access" reset_value="0x1F" reset_mask="0x1F">
      <BitField start="0" size="5" name="WAITWR" description="Write wait states." />
    </Register>
    <Register start="+0x278" size="4" name="STATICWAITTURN3" access="Read/Write" description="Number of bus turnaround cycles EMC_CSx" reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="WAITTURN" description="Bus turn-around cycles." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="DMA0" start="0x40082000" description="LPC5411x DMA controller">
    <Register start="+0" size="4" name="CTRL" access="Read/Write" description="DMA control." reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="ENABLE" description="DMA controller master enable.">
        <Enum name="0" start="0b0" description="Disabled. The DMA controller is disabled. This clears any triggers that were asserted at the point when disabled, but does not prevent re-triggering when the DMA controller is re-enabled." />
        <Enum name="1" start="0b1" description="Enabled. The DMA controller is enabled." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status." reset_value="0" reset_mask="0x6">
      <BitField start="1" size="1" name="ACTIVEINT" description="Summarizes whether any enabled interrupts (other than error interrupts) are pending.">
        <Enum name="0" start="0b0" description="Not pending. No enabled interrupts are pending." />
        <Enum name="1" start="0b1" description="Pending. At least one enabled interrupt is pending." />
      </BitField>
      <BitField start="2" size="1" name="ACTIVEERRINT" description="Summarizes whether any error interrupts are pending.">
        <Enum name="0" start="0b0" description="Not pending. No error interrupts are pending." />
        <Enum name="1" start="0b1" description="Pending. At least one error interrupt is pending." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="SRAMBASE" access="Read/Write" description="SRAM address of the channel configuration table." reset_value="0" reset_mask="0xFFFFFE00">
      <BitField start="9" size="23" name="OFFSET" description="Address bits 31:9 of the beginning of the DMA descriptor table. For 18 channels, the table must begin on a 512 byte boundary." />
    </Register>
    <Register start="+0x20" size="4" name="ENABLESET0" access="Read/Write" description="Channel Enable read and Set for all DMA channels." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ENA" description="Enable for DMA channels. Bit n enables or disables DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = disabled. 1 = enabled." />
    </Register>
    <Register start="+0x28" size="4" name="ENABLECLR0" access="WriteOnly" description="Channel Enable Clear for all DMA channels." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="CLR" description="Writing ones to this register clears the corresponding bits in ENABLESET0. Bit n clears the channel enable bit n. The number of bits = number of DMA channels in this device. Other bits are reserved." />
    </Register>
    <Register start="+0x30" size="4" name="ACTIVE0" access="ReadOnly" description="Channel Active status for all DMA channels." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ACT" description="Active flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = not active. 1 = active." />
    </Register>
    <Register start="+0x38" size="4" name="BUSY0" access="ReadOnly" description="Channel Busy status for all DMA channels." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="BSY" description="Busy flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = not busy. 1 = busy." />
    </Register>
    <Register start="+0x40" size="4" name="ERRINT0" access="Read/Write" description="Error Interrupt status for all DMA channels." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ERR" description="Error Interrupt flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = error interrupt is not active. 1 = error interrupt is active." />
    </Register>
    <Register start="+0x48" size="4" name="INTENSET0" access="Read/Write" description="Interrupt Enable read and Set for all DMA channels." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="INTEN" description="Interrupt Enable read and set for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = interrupt for DMA channel is disabled. 1 = interrupt for DMA channel is enabled." />
    </Register>
    <Register start="+0x50" size="4" name="INTENCLR0" access="WriteOnly" description="Interrupt Enable Clear for all DMA channels." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="CLR" description="Writing ones to this register clears corresponding bits in the INTENSET0. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved." />
    </Register>
    <Register start="+0x58" size="4" name="INTA0" access="Read/Write" description="Interrupt A status for all DMA channels." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="IA" description="Interrupt A status for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = the DMA channel interrupt A is not active. 1 = the DMA channel interrupt A is active." />
    </Register>
    <Register start="+0x60" size="4" name="INTB0" access="Read/Write" description="Interrupt B status for all DMA channels." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="IB" description="Interrupt B status for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = the DMA channel interrupt B is not active. 1 = the DMA channel interrupt B is active." />
    </Register>
    <Register start="+0x68" size="4" name="SETVALID0" access="WriteOnly" description="Set ValidPending control bits for all DMA channels." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="SV" description="SETVALID control for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = no effect. 1 = sets the VALIDPENDING control bit for DMA channel n" />
    </Register>
    <Register start="+0x70" size="4" name="SETTRIG0" access="WriteOnly" description="Set Trigger control bits for all DMA channels." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="TRIG" description="Set Trigger control bit for DMA channel 0. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = no effect. 1 = sets the TRIG bit for DMA channel n." />
    </Register>
    <Register start="+0x78" size="4" name="ABORT0" access="WriteOnly" description="Channel Abort control for all DMA channels." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="ABORTCTRL" description="Abort control for DMA channel 0. Bit n corresponds to DMA channel n. 0 = no effect. 1 = aborts DMA operations on channel n." />
    </Register>
    <Register start="+0x400" size="4" name="CFG0" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x404" size="4" name="CTLSTAT0" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x408" size="4" name="XFERCFG0" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x410" size="4" name="CFG1" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x414" size="4" name="CTLSTAT1" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x418" size="4" name="XFERCFG1" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x420" size="4" name="CFG2" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x424" size="4" name="CTLSTAT2" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x428" size="4" name="XFERCFG2" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x430" size="4" name="CFG3" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x434" size="4" name="CTLSTAT3" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x438" size="4" name="XFERCFG3" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x440" size="4" name="CFG4" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x444" size="4" name="CTLSTAT4" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x448" size="4" name="XFERCFG4" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x450" size="4" name="CFG5" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x454" size="4" name="CTLSTAT5" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x458" size="4" name="XFERCFG5" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x460" size="4" name="CFG6" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x464" size="4" name="CTLSTAT6" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x468" size="4" name="XFERCFG6" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x470" size="4" name="CFG7" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x474" size="4" name="CTLSTAT7" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x478" size="4" name="XFERCFG7" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x480" size="4" name="CFG8" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x484" size="4" name="CTLSTAT8" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x488" size="4" name="XFERCFG8" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x490" size="4" name="CFG9" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x494" size="4" name="CTLSTAT9" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x498" size="4" name="XFERCFG9" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x4A0" size="4" name="CFG10" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x4A4" size="4" name="CTLSTAT10" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x4A8" size="4" name="XFERCFG10" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x4B0" size="4" name="CFG11" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x4B4" size="4" name="CTLSTAT11" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x4B8" size="4" name="XFERCFG11" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x4C0" size="4" name="CFG12" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x4C4" size="4" name="CTLSTAT12" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x4C8" size="4" name="XFERCFG12" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x4D0" size="4" name="CFG13" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x4D4" size="4" name="CTLSTAT13" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x4D8" size="4" name="XFERCFG13" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x4E0" size="4" name="CFG14" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x4E4" size="4" name="CTLSTAT14" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x4E8" size="4" name="XFERCFG14" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x4F0" size="4" name="CFG15" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x4F4" size="4" name="CTLSTAT15" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x4F8" size="4" name="XFERCFG15" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x500" size="4" name="CFG16" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x504" size="4" name="CTLSTAT16" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x508" size="4" name="XFERCFG16" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x510" size="4" name="CFG17" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x514" size="4" name="CTLSTAT17" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x518" size="4" name="XFERCFG17" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x520" size="4" name="CFG18" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x524" size="4" name="CTLSTAT18" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x528" size="4" name="XFERCFG18" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x530" size="4" name="CFG19" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x534" size="4" name="CTLSTAT19" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x538" size="4" name="XFERCFG19" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x540" size="4" name="CFG20" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x544" size="4" name="CTLSTAT20" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x548" size="4" name="XFERCFG20" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x550" size="4" name="CFG21" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x554" size="4" name="CTLSTAT21" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x558" size="4" name="XFERCFG21" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x560" size="4" name="CFG22" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x564" size="4" name="CTLSTAT22" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x568" size="4" name="XFERCFG22" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x570" size="4" name="CFG23" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x574" size="4" name="CTLSTAT23" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x578" size="4" name="XFERCFG23" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x580" size="4" name="CFG24" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x584" size="4" name="CTLSTAT24" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x588" size="4" name="XFERCFG24" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x590" size="4" name="CFG25" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x594" size="4" name="CTLSTAT25" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x598" size="4" name="XFERCFG25" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x5A0" size="4" name="CFG26" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x5A4" size="4" name="CTLSTAT26" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x5A8" size="4" name="XFERCFG26" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x5B0" size="4" name="CFG27" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x5B4" size="4" name="CTLSTAT27" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x5B8" size="4" name="XFERCFG27" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x5C0" size="4" name="CFG28" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x5C4" size="4" name="CTLSTAT28" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x5C8" size="4" name="XFERCFG28" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
    <Register start="+0x5D0" size="4" name="CFG29" access="Read/Write" description="Configuration register for DMA channel ." reset_value="0" reset_mask="0x7CF73">
      <BitField start="0" size="1" name="PERIPHREQEN" description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.">
        <Enum name="0" start="0b0" description="Disabled. Peripheral DMA requests are disabled." />
        <Enum name="1" start="0b1" description="Enabled. Peripheral DMA requests are enabled." />
      </BitField>
      <BitField start="1" size="1" name="HWTRIGEN" description="Hardware Triggering Enable for this channel.">
        <Enum name="0" start="0b0" description="Disabled. Hardware triggering is not used." />
        <Enum name="1" start="0b1" description="Enabled. Use hardware triggering." />
      </BitField>
      <BitField start="4" size="1" name="TRIGPOL" description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel.">
        <Enum name="0" start="0b0" description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE." />
        <Enum name="1" start="0b1" description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE." />
      </BitField>
      <BitField start="5" size="1" name="TRIGTYPE" description="Trigger Type. Selects hardware trigger as edge triggered or level triggered.">
        <Enum name="0" start="0b0" description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger." />
        <Enum name="1" start="0b1" description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed." />
      </BitField>
      <BitField start="6" size="1" name="TRIGBURST" description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.">
        <Enum name="0" start="0b0" description="Single transfer. Hardware trigger causes a single transfer." />
        <Enum name="1" start="0b1" description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete." />
      </BitField>
      <BitField start="8" size="4" name="BURSTPOWER" description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size." />
      <BitField start="14" size="1" name="SRCBURSTWRAP" description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Source burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Source burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="15" size="1" name="DSTBURSTWRAP" description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.">
        <Enum name="0" start="0b0" description="Disabled. Destination burst wrapping is not enabled for this DMA channel." />
        <Enum name="1" start="0b1" description="Enabled. Destination burst wrapping is enabled for this DMA channel." />
      </BitField>
      <BitField start="16" size="3" name="CHPRIORITY" description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority." />
    </Register>
    <Register start="+0x5D4" size="4" name="CTLSTAT29" access="ReadOnly" description="Control and status register for DMA channel ." reset_value="0" reset_mask="0x5">
      <BitField start="0" size="1" name="VALIDPENDING" description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.">
        <Enum name="0" start="0b0" description="No effect. No effect on DMA operation." />
        <Enum name="1" start="0b1" description="Valid pending." />
      </BitField>
      <BitField start="2" size="1" name="TRIG" description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.">
        <Enum name="0" start="0b0" description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out." />
        <Enum name="1" start="0b1" description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out." />
      </BitField>
    </Register>
    <Register start="+0x5D8" size="4" name="XFERCFG29" access="Read/Write" description="Transfer configuration register for DMA channel ." reset_value="0" reset_mask="0x3FFF33F">
      <BitField start="0" size="1" name="CFGVALID" description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.">
        <Enum name="0" start="0b0" description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting." />
        <Enum name="1" start="0b1" description="Valid. The current channel descriptor is considered valid." />
      </BitField>
      <BitField start="1" size="1" name="RELOAD" description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.">
        <Enum name="0" start="0b0" description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted." />
        <Enum name="1" start="0b1" description="Enabled. Reload the channels' control structure when the current descriptor is exhausted." />
      </BitField>
      <BitField start="2" size="1" name="SWTRIG" description="Software Trigger.">
        <Enum name="0" start="0b0" description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel." />
        <Enum name="1" start="0b1" description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0." />
      </BitField>
      <BitField start="3" size="1" name="CLRTRIG" description="Clear Trigger.">
        <Enum name="0" start="0b0" description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started." />
        <Enum name="1" start="0b1" description="Cleared. The trigger is cleared when this descriptor is exhausted" />
      </BitField>
      <BitField start="4" size="1" name="SETINTA" description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="5" size="1" name="SETINTB" description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted." />
      </BitField>
      <BitField start="8" size="2" name="WIDTH" description="Transfer width used for this DMA channel.">
        <Enum name="0" start="0b00" description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)." />
        <Enum name="1" start="0b01" description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)." />
        <Enum name="10" start="0b10" description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)." />
        <Enum name="11" start="0b11" description="Reserved. Reserved setting, do not use." />
      </BitField>
      <BitField start="12" size="2" name="SRCINC" description="Determines whether the source address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory." />
        <Enum name="10" start="0b10" description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="14" size="2" name="DSTINC" description="Determines whether the destination address is incremented for each DMA transfer.">
        <Enum name="0" start="0b00" description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device." />
        <Enum name="1" start="0b01" description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory." />
        <Enum name="10" start="0b10" description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer." />
        <Enum name="11" start="0b11" description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer." />
      </BitField>
      <BitField start="16" size="10" name="XFERCOUNT" description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USB0" start="0x40084000" description="LPC5411x USB 2.0 Device Controller">
    <Register start="+0" size="4" name="DEVCMDSTAT" access="Read/Write" description="USB Device Command/Status register" reset_value="0x800" reset_mask="0x171BFBFF">
      <BitField start="0" size="7" name="DEV_ADDR" description="USB device address. After bus reset, the address is reset to 0x00. If the enable bit is set, the device will respond on packets for function address DEV_ADDR. When receiving a SetAddress Control Request from the USB host, software must program the new address before completing the status phase of the SetAddress Control Request." />
      <BitField start="7" size="1" name="DEV_EN" description="USB device enable. If this bit is set, the HW will start responding on packets for function address DEV_ADDR." />
      <BitField start="8" size="1" name="SETUP" description="SETUP token received. If a SETUP token is received and acknowledged by the device, this bit is set. As long as this bit is set all received IN and OUT tokens will be NAKed by HW. SW must clear this bit by writing a one. If this bit is zero, HW will handle the tokens to the CTRL EP0 as indicated by the CTRL EP0 IN and OUT data information programmed by SW." />
      <BitField start="9" size="1" name="FORCE_NEEDCLK" description="Forces the NEEDCLK output to always be on:">
        <Enum name="0" start="0b0" description="USB_NEEDCLK has normal function." />
        <Enum name="1" start="0b1" description="USB_NEEDCLK always 1. Clock will not be stopped in case of suspend." />
      </BitField>
      <BitField start="11" size="1" name="LPM_SUP" description="LPM Supported:">
        <Enum name="0" start="0b0" description="LPM not supported." />
        <Enum name="1" start="0b1" description="LPM supported." />
      </BitField>
      <BitField start="12" size="1" name="INTONNAK_AO" description="Interrupt on NAK for interrupt and bulk OUT EP">
        <Enum name="0" start="0b0" description="Only acknowledged packets generate an interrupt" />
        <Enum name="1" start="0b1" description="Both acknowledged and NAKed packets generate interrupts." />
      </BitField>
      <BitField start="13" size="1" name="INTONNAK_AI" description="Interrupt on NAK for interrupt and bulk IN EP">
        <Enum name="0" start="0b0" description="Only acknowledged packets generate an interrupt" />
        <Enum name="1" start="0b1" description="Both acknowledged and NAKed packets generate interrupts." />
      </BitField>
      <BitField start="14" size="1" name="INTONNAK_CO" description="Interrupt on NAK for control OUT EP">
        <Enum name="0" start="0b0" description="Only acknowledged packets generate an interrupt" />
        <Enum name="1" start="0b1" description="Both acknowledged and NAKed packets generate interrupts." />
      </BitField>
      <BitField start="15" size="1" name="INTONNAK_CI" description="Interrupt on NAK for control IN EP">
        <Enum name="0" start="0b0" description="Only acknowledged packets generate an interrupt" />
        <Enum name="1" start="0b1" description="Both acknowledged and NAKed packets generate interrupts." />
      </BitField>
      <BitField start="16" size="1" name="DCON" description="Device status - connect. The connect bit must be set by SW to indicate that the device must signal a connect. The pull-up resistor on USB_DP will be enabled when this bit is set and the VBUSDEBOUNCED bit is one." />
      <BitField start="17" size="1" name="DSUS" description="Device status - suspend. The suspend bit indicates the current suspend state. It is set to 1 when the device hasn't seen any activity on its upstream port for more than 3 milliseconds. It is reset to 0 on any activity. When the device is suspended (Suspend bit DSUS = 1) and the software writes a 0 to it, the device will generate a remote wake-up. This will only happen when the device is connected (Connect bit = 1). When the device is not connected or not suspended, a writing a 0 has no effect. Writing a 1 never has an effect." />
      <BitField start="19" size="1" name="LPM_SUS" description="Device status - LPM Suspend. This bit represents the current LPM suspend state. It is set to 1 by HW when the device has acknowledged the LPM request from the USB host and the Token Retry Time of 10 ms has elapsed. When the device is in the LPM suspended state (LPM suspend bit = 1) and the software writes a zero to this bit, the device will generate a remote walk-up. Software can only write a zero to this bit when the LPM_REWP bit is set to 1. HW resets this bit when it receives a host initiated resume. HW only updates the LPM_SUS bit when the LPM_SUPP bit is equal to one." />
      <BitField start="20" size="1" name="LPM_REWP" description="LPM Remote Wake-up Enabled by USB host. HW sets this bit to one when the bRemoteWake bit in the LPM extended token is set to 1. HW will reset this bit to 0 when it receives the host initiated LPM resume, when a remote wake-up is sent by the device or when a USB bus reset is received. Software can use this bit to check if the remote wake-up feature is enabled by the host for the LPM transaction." />
      <BitField start="24" size="1" name="DCON_C" description="Device status - connect change. The Connect Change bit is set when the device's pull-up resistor is disconnected because VBus disappeared. The bit is reset by writing a one to it." />
      <BitField start="25" size="1" name="DSUS_C" description="Device status - suspend change. The suspend change bit is set to 1 when the suspend bit toggles. The suspend bit can toggle because: - The device goes in the suspended state - The device is disconnected - The device receives resume signaling on its upstream port. The bit is reset by writing a one to it." />
      <BitField start="26" size="1" name="DRES_C" description="Device status - reset change. This bit is set when the device received a bus reset. On a bus reset the device will automatically go to the default state (unconfigured and responding to address 0). The bit is reset by writing a one to it." />
      <BitField start="28" size="1" name="VBUSDEBOUNCED" description="This bit indicates if Vbus is detected or not. The bit raises immediately when Vbus becomes high. It drops to zero if Vbus is low for at least 3 ms. If this bit is high and the DCon bit is set, the HW will enable the pull-up resistor to signal a connect." />
    </Register>
    <Register start="+0x4" size="4" name="INFO" access="Read/Write" description="USB Info register" reset_value="0" reset_mask="0x7FFF">
      <BitField start="0" size="11" name="FRAME_NR" description="Frame number. This contains the frame number of the last successfully received SOF. In case no SOF was received by the device at the beginning of a frame, the frame number returned is that of the last successfully received SOF. In case the SOF frame number contained a CRC error, the frame number returned will be the corrupted frame number as received by the device." />
      <BitField start="11" size="4" name="ERR_CODE" description="The error code which last occurred:">
        <Enum name="0" start="0b0000" description="No error" />
        <Enum name="1" start="0b0001" description="PID encoding error" />
        <Enum name="10" start="0b0010" description="PID unknown" />
        <Enum name="11" start="0b0011" description="Packet unexpected" />
        <Enum name="100" start="0b0100" description="Token CRC error" />
        <Enum name="101" start="0b0101" description="Data CRC error" />
        <Enum name="110" start="0b0110" description="Time out" />
        <Enum name="111" start="0b0111" description="Babble" />
        <Enum name="1000" start="0b1000" description="Truncated EOP" />
        <Enum name="1001" start="0b1001" description="Sent/Received NAK" />
        <Enum name="1010" start="0b1010" description="Sent Stall" />
        <Enum name="1011" start="0b1011" description="Overrun" />
        <Enum name="1100" start="0b1100" description="Sent empty packet" />
        <Enum name="1101" start="0b1101" description="Bitstuff error" />
        <Enum name="1110" start="0b1110" description="Sync error" />
        <Enum name="1111" start="0b1111" description="Wrong data toggle" />
      </BitField>
      <BitField start="16" size="8" name="MINREV" description="Minor Revision." />
      <BitField start="24" size="8" name="MAJREV" description="Major Revision." />
    </Register>
    <Register start="+0x8" size="4" name="EPLISTSTART" access="Read/Write" description="USB EP Command/Status List start address" reset_value="0" reset_mask="0xFFFFFF00">
      <BitField start="8" size="24" name="EP_LIST" description="Start address of the USB EP Command/Status List." />
    </Register>
    <Register start="+0xC" size="4" name="DATABUFSTART" access="Read/Write" description="USB Data buffer start address" reset_value="0" reset_mask="0xFFC00000">
      <BitField start="22" size="10" name="DA_BUF" description="Start address of the buffer pointer page where all endpoint data buffers are located." />
    </Register>
    <Register start="+0x10" size="4" name="LPM" access="Read/Write" description="USB Link Power Management register" reset_value="0" reset_mask="0x1FF">
      <BitField start="0" size="4" name="HIRD_HW" description="Host Initiated Resume Duration - HW. This is the HIRD value from the last received LPM token" />
      <BitField start="4" size="4" name="HIRD_SW" description="Host Initiated Resume Duration - SW. This is the time duration required by the USB device system to come out of LPM initiated suspend after receiving the host initiated LPM resume." />
      <BitField start="8" size="1" name="DATA_PENDING" description="As long as this bit is set to one and LPM supported bit is set to one, HW will return a NYET handshake on every LPM token it receives. If LPM supported bit is set to one and this bit is zero, HW will return an ACK handshake on every LPM token it receives. If SW has still data pending and LPM is supported, it must set this bit to 1." />
    </Register>
    <Register start="+0x14" size="4" name="EPSKIP" access="Read/Write" description="USB Endpoint skip" reset_value="0" reset_mask="0x3FFFFFFF">
      <BitField start="0" size="10" name="SKIP" description="Endpoint skip: Writing 1 to one of these bits, will indicate to HW that it must deactivate the buffer assigned to this endpoint and return control back to software. When HW has deactivated the endpoint, it will clear this bit, but it will not modify the EPINUSE bit. An interrupt will be generated when the Active bit goes from 1 to 0. Note: In case of double-buffering, HW will only clear the Active bit of the buffer indicated by the EPINUSE bit." />
    </Register>
    <Register start="+0x18" size="4" name="EPINUSE" access="Read/Write" description="USB Endpoint Buffer in use" reset_value="0" reset_mask="0x3FC">
      <BitField start="2" size="8" name="BUF" description="Buffer in use: This register has one bit per physical endpoint. 0: HW is accessing buffer 0. 1: HW is accessing buffer 1." />
    </Register>
    <Register start="+0x1C" size="4" name="EPBUFCFG" access="Read/Write" description="USB Endpoint Buffer Configuration register" reset_value="0" reset_mask="0x3FC">
      <BitField start="2" size="8" name="BUF_SB" description="Buffer usage: This register has one bit per physical endpoint. 0: Single-buffer. 1: Double-buffer. If the bit is set to single-buffer (0), it will not toggle the corresponding EPINUSE bit when it clears the active bit. If the bit is set to double-buffer (1), HW will toggle the EPINUSE bit when it clears the Active bit for the buffer." />
    </Register>
    <Register start="+0x20" size="4" name="INTSTAT" access="Read/Write" description="USB interrupt status register" reset_value="0" reset_mask="0xC00003FF">
      <BitField start="0" size="1" name="EP0OUT" description="Interrupt status register bit for the Control EP0 OUT direction. This bit will be set if NBytes transitions to zero or the skip bit is set by software or a SETUP packet is successfully received for the control EP0. If the IntOnNAK_CO is set, this bit will also be set when a NAK is transmitted for the Control EP0 OUT direction. Software can clear this bit by writing a one to it." />
      <BitField start="1" size="1" name="EP0IN" description="Interrupt status register bit for the Control EP0 IN direction. This bit will be set if NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_CI is set, this bit will also be set when a NAK is transmitted for the Control EP0 IN direction. Software can clear this bit by writing a one to it." />
      <BitField start="2" size="1" name="EP1OUT" description="Interrupt status register bit for the EP1 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP1 OUT direction. Software can clear this bit by writing a one to it." />
      <BitField start="3" size="1" name="EP1IN" description="Interrupt status register bit for the EP1 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP1 IN direction. Software can clear this bit by writing a one to it." />
      <BitField start="4" size="1" name="EP2OUT" description="Interrupt status register bit for the EP2 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP2 OUT direction. Software can clear this bit by writing a one to it." />
      <BitField start="5" size="1" name="EP2IN" description="Interrupt status register bit for the EP2 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP2 IN direction. Software can clear this bit by writing a one to it." />
      <BitField start="6" size="1" name="EP3OUT" description="Interrupt status register bit for the EP3 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP3 OUT direction. Software can clear this bit by writing a one to it." />
      <BitField start="7" size="1" name="EP3IN" description="Interrupt status register bit for the EP3 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP3 IN direction. Software can clear this bit by writing a one to it." />
      <BitField start="8" size="1" name="EP4OUT" description="Interrupt status register bit for the EP4 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP4 OUT direction. Software can clear this bit by writing a one to it." />
      <BitField start="9" size="1" name="EP4IN" description="Interrupt status register bit for the EP4 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP4 IN direction. Software can clear this bit by writing a one to it." />
      <BitField start="30" size="1" name="FRAME_INT" description="Frame interrupt. This bit is set to one every millisecond when the VbusDebounced bit and the DCON bit are set. This bit can be used by software when handling isochronous endpoints. Software can clear this bit by writing a one to it." />
      <BitField start="31" size="1" name="DEV_INT" description="Device status interrupt. This bit is set by HW when one of the bits in the Device Status Change register are set. Software can clear this bit by writing a one to it." />
    </Register>
    <Register start="+0x24" size="4" name="INTEN" access="Read/Write" description="USB interrupt enable register" reset_value="0" reset_mask="0xC00003FF">
      <BitField start="0" size="10" name="EP_INT_EN" description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit." />
      <BitField start="30" size="1" name="FRAME_INT_EN" description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit." />
      <BitField start="31" size="1" name="DEV_INT_EN" description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit." />
    </Register>
    <Register start="+0x28" size="4" name="INTSETSTAT" access="Read/Write" description="USB set interrupt status register" reset_value="0" reset_mask="0xC00003FF">
      <BitField start="0" size="10" name="EP_SET_INT" description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned." />
      <BitField start="30" size="1" name="FRAME_SET_INT" description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned." />
      <BitField start="31" size="1" name="DEV_SET_INT" description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned." />
    </Register>
    <Register start="+0x34" size="4" name="EPTOGGLE" access="Read/Write" description="USB Endpoint toggle register" reset_value="0" reset_mask="0x3FF">
      <BitField start="0" size="10" name="TOGGLE" description="Endpoint data toggle: This field indicates the current value of the data toggle for the corresponding endpoint." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SCT0" start="0x40085000" description="LPC5411x SCTimer/PWM (SCT)">
    <Register start="+0" size="4" name="CONFIG" access="Read/Write" description="SCT configuration register" reset_value="0x1E00" reset_mask="0x61FFF">
      <BitField start="0" size="1" name="UNIFY" description="SCT operation">
        <Enum name="0" start="0b0" description="The SCT operates as two 16-bit counters named COUNTER_L and COUNTER_H." />
        <Enum name="1" start="0b1" description="The SCT operates as a unified 32-bit counter." />
      </BitField>
      <BitField start="1" size="2" name="CLKMODE" description="SCT clock mode">
        <Enum name="0" start="0b00" description="System Clock Mode. The system clock clocks the entire SCT module including the counter(s) and counter prescalers." />
        <Enum name="1" start="0b01" description="Sampled System Clock Mode. The system clock clocks the SCT module, but the counter and prescalers are only enabled to count when the designated edge is detected on the input selected by the CKSEL field. The minimum pulse width on the selected clock-gate input is 1 bus clock period. This mode is the high-performance, sampled-clock mode." />
        <Enum name="10" start="0b10" description="SCT Input Clock Mode. The input/edge selected by the CKSEL field clocks the SCT module, including the counters and prescalers, after first being synchronized to the system clock. The minimum pulse width on the clock input is 1 bus clock period. This mode is the low-power, sampled-clock mode." />
        <Enum name="11" start="0b11" description="Asynchronous Mode. The entire SCT module is clocked directly by the input/edge selected by the CKSEL field. In this mode, the SCT outputs are switched synchronously to the SCT input clock - not the system clock. The input clock rate must be at least half the system clock rate and can be the same or faster than the system clock." />
      </BitField>
      <BitField start="3" size="4" name="CKSEL" description="SCT clock select. The specific functionality of the designated input/edge is dependent on the CLKMODE bit selection in this register.">
        <Enum name="0" start="0b0000" description="Rising edges on input 0." />
        <Enum name="1" start="0b0001" description="Falling edges on input 0." />
        <Enum name="10" start="0b0010" description="Rising edges on input 1." />
        <Enum name="11" start="0b0011" description="Falling edges on input 1." />
        <Enum name="100" start="0b0100" description="Rising edges on input 2." />
        <Enum name="101" start="0b0101" description="Falling edges on input 2." />
        <Enum name="110" start="0b0110" description="Rising edges on input 3." />
        <Enum name="111" start="0b0111" description="Falling edges on input 3." />
      </BitField>
      <BitField start="7" size="1" name="NORELAOD_L" description="A 1 in this bit prevents the lower match registers from being reloaded from their respective reload registers. Setting this bit eliminates the need to write to the reload registers MATCHREL if the match values are fixed. Software can write to set or clear this bit at any time. This bit applies to both the higher and lower registers when the UNIFY bit is set." />
      <BitField start="8" size="1" name="NORELOAD_H" description="A 1 in this bit prevents the higher match registers from being reloaded from their respective reload registers. Setting this bit eliminates the need to write to the reload registers MATCHREL if the match values are fixed. Software can write to set or clear this bit at any time. This bit is not used when the UNIFY bit is set." />
      <BitField start="9" size="4" name="INSYNC" description="Synchronization for input N (bit 9 = input 0, bit 10 = input 1,, bit 12 = input 3); all other bits are reserved. A 1 in one of these bits subjects the corresponding input to synchronization to the SCT clock, before it is used to create an event. If an input is known to already be synchronous to the SCT clock, this bit may be set to 0 for faster input response. (Note: The SCT clock is the system clock for CKMODEs 0-2. It is the selected, asynchronous SCT input clock for CKMODE3). Note that the INSYNC field only affects inputs used for event generation. It does not apply to the clock input specified in the CKSEL field." />
      <BitField start="17" size="1" name="AUTOLIMIT_L" description="A one in this bit causes a match on match register 0 to be treated as a de-facto LIMIT condition without the need to define an associated event. As with any LIMIT event, this automatic limit causes the counter to be cleared to zero in unidirectional mode or to change the direction of count in bi-directional mode. Software can write to set or clear this bit at any time. This bit applies to both the higher and lower registers when the UNIFY bit is set." />
      <BitField start="18" size="1" name="AUTOLIMIT_H" description="A one in this bit will cause a match on match register 0 to be treated as a de-facto LIMIT condition without the need to define an associated event. As with any LIMIT event, this automatic limit causes the counter to be cleared to zero in unidirectional mode or to change the direction of count in bi-directional mode. Software can write to set or clear this bit at any time. This bit is not used when the UNIFY bit is set." />
    </Register>
    <Register start="+0x4" size="4" name="CTRL" access="Read/Write" description="SCT control register" reset_value="0x40004" reset_mask="0x1FFF1FFF">
      <BitField start="0" size="1" name="DOWN_L" description="This bit is 1 when the L or unified counter is counting down. Hardware sets this bit when the counter is counting up, counter limit occurs, and BIDIR = 1.Hardware clears this bit when the counter is counting down and a limit condition occurs or when the counter reaches 0." />
      <BitField start="1" size="1" name="STOP_L" description="When this bit is 1 and HALT is 0, the L or unified counter does not run, but I/O events related to the counter can occur. If a designated start event occurs, this bit is cleared and counting resumes." />
      <BitField start="2" size="1" name="HALT_L" description="When this bit is 1, the L or unified counter does not run and no events can occur. A reset sets this bit. When the HALT_L bit is one, the STOP_L bit is cleared. It is possible to remove the halt condition while keeping the SCT in the stop condition (not running) with a single write to this register to simultaneously clear the HALT bit and set the STOP bit. Once set, only software can clear this bit to restore counter operation. This bit is set on reset." />
      <BitField start="3" size="1" name="CLRCTR_L" description="Writing a 1 to this bit clears the L or unified counter. This bit always reads as 0." />
      <BitField start="4" size="1" name="BIDIR_L" description="L or unified counter direction select">
        <Enum name="0" start="0b0" description="Up. The counter counts up to a limit condition, then is cleared to zero." />
        <Enum name="1" start="0b1" description="Up-down. The counter counts up to a limit, then counts down to a limit condition or to 0." />
      </BitField>
      <BitField start="5" size="8" name="PRE_L" description="Specifies the factor by which the SCT clock is prescaled to produce the L or unified counter clock. The counter clock is clocked at the rate of the SCT clock divided by PRE_L+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever changing the PRE value." />
      <BitField start="16" size="1" name="DOWN_H" description="This bit is 1 when the H counter is counting down. Hardware sets this bit when the counter is counting, a counter limit condition occurs, and BIDIR is 1. Hardware clears this bit when the counter is counting down and a limit condition occurs or when the counter reaches 0." />
      <BitField start="17" size="1" name="STOP_H" description="When this bit is 1 and HALT is 0, the H counter does not, run but I/O events related to the counter can occur. If such an event matches the mask in the Start register, this bit is cleared and counting resumes." />
      <BitField start="18" size="1" name="HALT_H" description="When this bit is 1, the H counter does not run and no events can occur. A reset sets this bit. When the HALT_H bit is one, the STOP_H bit is cleared. It is possible to remove the halt condition while keeping the SCT in the stop condition (not running) with a single write to this register to simultaneously clear the HALT bit and set the STOP bit. Once set, this bit can only be cleared by software to restore counter operation. This bit is set on reset." />
      <BitField start="19" size="1" name="CLRCTR_H" description="Writing a 1 to this bit clears the H counter. This bit always reads as 0." />
      <BitField start="20" size="1" name="BIDIR_H" description="Direction select">
        <Enum name="0" start="0b0" description="The H counter counts up to its limit condition, then is cleared to zero." />
        <Enum name="1" start="0b1" description="The H counter counts up to its limit, then counts down to a limit condition or to 0." />
      </BitField>
      <BitField start="21" size="8" name="PRE_H" description="Specifies the factor by which the SCT clock is prescaled to produce the H counter clock. The counter clock is clocked at the rate of the SCT clock divided by PRELH+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever changing the PRE value." />
    </Register>
    <Register start="+0x8" size="4" name="LIMIT" access="Read/Write" description="SCT limit event select register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="LIMMSK_L" description="If bit n is one, event n is used as a counter limit for the L or unified counter (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT." />
      <BitField start="16" size="16" name="LIMMSK_H" description="If bit n is one, event n is used as a counter limit for the H counter (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT." />
    </Register>
    <Register start="+0xC" size="4" name="HALT" access="Read/Write" description="SCT halt event select register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="HALTMSK_L" description="If bit n is one, event n sets the HALT_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT." />
      <BitField start="16" size="16" name="HALTMSK_H" description="If bit n is one, event n sets the HALT_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT." />
    </Register>
    <Register start="+0x10" size="4" name="STOP" access="Read/Write" description="SCT stop event select register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="STOPMSK_L" description="If bit n is one, event n sets the STOP_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT." />
      <BitField start="16" size="16" name="STOPMSK_H" description="If bit n is one, event n sets the STOP_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT." />
    </Register>
    <Register start="+0x14" size="4" name="START" access="Read/Write" description="SCT start event select register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="STARTMSK_L" description="If bit n is one, event n clears the STOP_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT." />
      <BitField start="16" size="16" name="STARTMSK_H" description="If bit n is one, event n clears the STOP_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT." />
    </Register>
    <Register start="+0x40" size="4" name="COUNT" access="Read/Write" description="SCT counter register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CTR_L" description="When UNIFY = 0, read or write the 16-bit L counter value. When UNIFY = 1, read or write the lower 16 bits of the 32-bit unified counter." />
      <BitField start="16" size="16" name="CTR_H" description="When UNIFY = 0, read or write the 16-bit H counter value. When UNIFY = 1, read or write the upper 16 bits of the 32-bit unified counter." />
    </Register>
    <Register start="+0x44" size="4" name="STATE" access="Read/Write" description="SCT state register" reset_value="0" reset_mask="0x1F001F">
      <BitField start="0" size="5" name="STATE_L" description="State variable." />
      <BitField start="16" size="5" name="STATE_H" description="State variable." />
    </Register>
    <Register start="+0x48" size="4" name="INPUT" access="ReadOnly" description="SCT input register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="1" name="AIN0" description="Input 0 state. Input 0 state on the last SCT clock edge." />
      <BitField start="1" size="1" name="AIN1" description="Input 1 state. Input 1 state on the last SCT clock edge." />
      <BitField start="2" size="1" name="AIN2" description="Input 2 state. Input 2 state on the last SCT clock edge." />
      <BitField start="3" size="1" name="AIN3" description="Input 3 state. Input 3 state on the last SCT clock edge." />
      <BitField start="4" size="1" name="AIN4" description="Input 4 state. Input 4 state on the last SCT clock edge." />
      <BitField start="5" size="1" name="AIN5" description="Input 5 state. Input 5 state on the last SCT clock edge." />
      <BitField start="6" size="1" name="AIN6" description="Input 6 state. Input 6 state on the last SCT clock edge." />
      <BitField start="7" size="1" name="AIN7" description="Input 7 state. Input 7 state on the last SCT clock edge." />
      <BitField start="8" size="1" name="AIN8" description="Input 8 state. Input 8 state on the last SCT clock edge." />
      <BitField start="9" size="1" name="AIN9" description="Input 9 state. Input 9 state on the last SCT clock edge." />
      <BitField start="10" size="1" name="AIN10" description="Input 10 state. Input 10 state on the last SCT clock edge." />
      <BitField start="11" size="1" name="AIN11" description="Input 11 state. Input 11 state on the last SCT clock edge." />
      <BitField start="12" size="1" name="AIN12" description="Input 12 state. Input 12 state on the last SCT clock edge." />
      <BitField start="13" size="1" name="AIN13" description="Input 13 state. Input 13 state on the last SCT clock edge." />
      <BitField start="14" size="1" name="AIN14" description="Input 14 state. Input 14 state on the last SCT clock edge." />
      <BitField start="15" size="1" name="AIN15" description="Input 15 state. Input 15 state on the last SCT clock edge." />
      <BitField start="16" size="1" name="SIN0" description="Input 0 state. Input 0 state following the synchronization specified by INSYNC." />
      <BitField start="17" size="1" name="SIN1" description="Input 1 state. Input 1 state following the synchronization specified by INSYNC." />
      <BitField start="18" size="1" name="SIN2" description="Input 2 state. Input 2 state following the synchronization specified by INSYNC." />
      <BitField start="19" size="1" name="SIN3" description="Input 3 state. Input 3 state following the synchronization specified by INSYNC." />
      <BitField start="20" size="1" name="SIN4" description="Input 4 state. Input 4 state following the synchronization specified by INSYNC." />
      <BitField start="21" size="1" name="SIN5" description="Input 5 state. Input 5 state following the synchronization specified by INSYNC." />
      <BitField start="22" size="1" name="SIN6" description="Input 6 state. Input 6 state following the synchronization specified by INSYNC." />
      <BitField start="23" size="1" name="SIN7" description="Input 7 state. Input 7 state following the synchronization specified by INSYNC." />
      <BitField start="24" size="1" name="SIN8" description="Input 8 state. Input 8 state following the synchronization specified by INSYNC." />
      <BitField start="25" size="1" name="SIN9" description="Input 9 state. Input 9 state following the synchronization specified by INSYNC." />
      <BitField start="26" size="1" name="SIN10" description="Input 10 state. Input 10 state following the synchronization specified by INSYNC." />
      <BitField start="27" size="1" name="SIN11" description="Input 11 state. Input 11 state following the synchronization specified by INSYNC." />
      <BitField start="28" size="1" name="SIN12" description="Input 12 state. Input 12 state following the synchronization specified by INSYNC." />
      <BitField start="29" size="1" name="SIN13" description="Input 13 state. Input 13 state following the synchronization specified by INSYNC." />
      <BitField start="30" size="1" name="SIN14" description="Input 14 state. Input 14 state following the synchronization specified by INSYNC." />
      <BitField start="31" size="1" name="SIN15" description="Input 15 state. Input 15 state following the synchronization specified by INSYNC." />
    </Register>
    <Register start="+0x4C" size="4" name="REGMODE" access="Read/Write" description="SCT match/capture mode register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="REGMOD_L" description="Each bit controls one match/capture register (register 0 = bit 0, register 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT. 0 = register operates as match register. 1 = register operates as capture register." />
      <BitField start="16" size="16" name="REGMOD_H" description="Each bit controls one match/capture register (register 0 = bit 16, register 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT. 0 = register operates as match registers. 1 = register operates as capture registers." />
    </Register>
    <Register start="+0x50" size="4" name="OUTPUT" access="Read/Write" description="SCT output register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="OUT" description="Writing a 1 to bit n forces the corresponding output HIGH. Writing a 0 forces the corresponding output LOW (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT." />
    </Register>
    <Register start="+0x54" size="4" name="OUTPUTDIRCTRL" access="Read/Write" description="SCT output counter direction control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="2" name="SETCLR0" description="Set/clear operation on output 0. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="2" size="2" name="SETCLR1" description="Set/clear operation on output 1. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="4" size="2" name="SETCLR2" description="Set/clear operation on output 2. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="6" size="2" name="SETCLR3" description="Set/clear operation on output 3. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="8" size="2" name="SETCLR4" description="Set/clear operation on output 4. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="10" size="2" name="SETCLR5" description="Set/clear operation on output 5. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="12" size="2" name="SETCLR6" description="Set/clear operation on output 6. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="14" size="2" name="SETCLR7" description="Set/clear operation on output 7. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="16" size="2" name="SETCLR8" description="Set/clear operation on output 8. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="18" size="2" name="SETCLR9" description="Set/clear operation on output 9. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="20" size="2" name="SETCLR10" description="Set/clear operation on output 10. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="22" size="2" name="SETCLR11" description="Set/clear operation on output 11. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="24" size="2" name="SETCLR12" description="Set/clear operation on output 12. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="26" size="2" name="SETCLR13" description="Set/clear operation on output 13. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="28" size="2" name="SETCLR14" description="Set/clear operation on output 14. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
      <BitField start="30" size="2" name="SETCLR15" description="Set/clear operation on output 15. Value 0x3 is reserved. Do not program this value.">
        <Enum name="0" start="0b00" description="Set and clear do not depend on the direction of any counter." />
        <Enum name="1" start="0b01" description="Set and clear are reversed when counter L or the unified counter is counting down." />
        <Enum name="10" start="0b10" description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1." />
      </BitField>
    </Register>
    <Register start="+0x58" size="4" name="RES" access="Read/Write" description="SCT conflict resolution register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="2" name="O0RES" description="Effect of simultaneous set and clear on output 0.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR0 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR0 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="2" size="2" name="O1RES" description="Effect of simultaneous set and clear on output 1.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR1 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR1 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="4" size="2" name="O2RES" description="Effect of simultaneous set and clear on output 2.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR2 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output n (or set based on the SETCLR2 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="6" size="2" name="O3RES" description="Effect of simultaneous set and clear on output 3.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR3 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR3 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="8" size="2" name="O4RES" description="Effect of simultaneous set and clear on output 4.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR4 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR4 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="10" size="2" name="O5RES" description="Effect of simultaneous set and clear on output 5.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR5 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR5 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="12" size="2" name="O6RES" description="Effect of simultaneous set and clear on output 6.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR6 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR6 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="14" size="2" name="O7RES" description="Effect of simultaneous set and clear on output 7.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR7 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output n (or set based on the SETCLR7 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="16" size="2" name="O8RES" description="Effect of simultaneous set and clear on output 8.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR8 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR8 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="18" size="2" name="O9RES" description="Effect of simultaneous set and clear on output 9.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR9 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR9 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="20" size="2" name="O10RES" description="Effect of simultaneous set and clear on output 10.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR10 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR10 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="22" size="2" name="O11RES" description="Effect of simultaneous set and clear on output 11.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR11 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR11 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="24" size="2" name="O12RES" description="Effect of simultaneous set and clear on output 12.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR12 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR12 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="26" size="2" name="O13RES" description="Effect of simultaneous set and clear on output 13.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR13 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR13 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="28" size="2" name="O14RES" description="Effect of simultaneous set and clear on output 14.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR14 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR14 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
      <BitField start="30" size="2" name="O15RES" description="Effect of simultaneous set and clear on output 15.">
        <Enum name="0" start="0b00" description="No change." />
        <Enum name="1" start="0b01" description="Set output (or clear based on the SETCLR15 field in the OUTPUTDIRCTRL register)." />
        <Enum name="10" start="0b10" description="Clear output (or set based on the SETCLR15 field)." />
        <Enum name="11" start="0b11" description="Toggle output." />
      </BitField>
    </Register>
    <Register start="+0x5C" size="4" name="DMA0REQUEST" access="Read/Write" description="SCT DMA request 0 register" reset_value="0" reset_mask="0xC000FFFF">
      <BitField start="0" size="16" name="DEV_0" description="If bit n is one, event n triggers DMA request 0 (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT." />
      <BitField start="30" size="1" name="DRL0" description="A 1 in this bit triggers DMA request 0 when it loads the MATCH_L/Unified registers from the RELOAD_L/Unified registers." />
      <BitField start="31" size="1" name="DRQ0" description="This read-only bit indicates the state of DMA Request 0. Note that if the related DMA channel is enabled and properly set up, it is unlikely that software will see this flag, it will be cleared rapidly by the DMA service. The flag remaining set could point to an issue with DMA setup." />
    </Register>
    <Register start="+0x60" size="4" name="DMA1REQUEST" access="Read/Write" description="SCT DMA request 1 register" reset_value="0" reset_mask="0xC000FFFF">
      <BitField start="0" size="16" name="DEV_1" description="If bit n is one, event n triggers DMA request 1 (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT." />
      <BitField start="30" size="1" name="DRL1" description="A 1 in this bit triggers DMA request 1 when it loads the Match L/Unified registers from the Reload L/Unified registers." />
      <BitField start="31" size="1" name="DRQ1" description="This read-only bit indicates the state of DMA Request 1. Note that if the related DMA channel is enabled and properly set up, it is unlikely that software will see this flag, it will be cleared rapidly by the DMA service. The flag remaining set could point to an issue with DMA setup." />
    </Register>
    <Register start="+0xF0" size="4" name="EVEN" access="Read/Write" description="SCT event interrupt enable register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="IEN" description="The SCT requests an interrupt when bit n of this register and the event flag register are both one (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT." />
    </Register>
    <Register start="+0xF4" size="4" name="EVFLAG" access="Read/Write" description="SCT event flag register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="FLAG" description="Bit n is one if event n has occurred since reset or a 1 was last written to this bit (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT." />
    </Register>
    <Register start="+0xF8" size="4" name="CONEN" access="Read/Write" description="SCT conflict interrupt enable register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="NCEN" description="The SCT requests an interrupt when bit n of this register and the SCT conflict flag register are both one (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT." />
    </Register>
    <Register start="+0xFC" size="4" name="CONFLAG" access="Read/Write" description="SCT conflict flag register" reset_value="0" reset_mask="0xC000FFFF">
      <BitField start="0" size="16" name="NCFLAG" description="Bit n is one if a no-change conflict event occurred on output n since reset or a 1 was last written to this bit (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT." />
      <BitField start="30" size="1" name="BUSERRL" description="The most recent bus error from this SCT involved writing CTR L/Unified, STATE L/Unified, MATCH L/Unified, or the Output register when the L/U counter was not halted. A word write to certain L and H registers can be half successful and half unsuccessful." />
      <BitField start="31" size="1" name="BUSERRH" description="The most recent bus error from this SCT involved writing CTR H, STATE H, MATCH H, or the Output register when the H counter was not halted." />
    </Register>
    <Register start="+0x100" size="4" name="SCTCAP0" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x100" size="4" name="SCTMATCH0" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x104" size="4" name="SCTCAP1" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x104" size="4" name="SCTMATCH1" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x108" size="4" name="SCTCAP2" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x108" size="4" name="SCTMATCH2" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x10C" size="4" name="SCTCAP3" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x10C" size="4" name="SCTMATCH3" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x110" size="4" name="SCTCAP4" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x110" size="4" name="SCTMATCH4" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x114" size="4" name="SCTCAP5" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x114" size="4" name="SCTMATCH5" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x118" size="4" name="SCTCAP6" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x118" size="4" name="SCTMATCH6" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x11C" size="4" name="SCTCAP7" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x11C" size="4" name="SCTMATCH7" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x120" size="4" name="SCTCAP8" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x120" size="4" name="SCTMATCH8" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x124" size="4" name="SCTCAP9" access="Read/Write" description="SCT capture register of capture channel" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPn_L" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured." />
      <BitField start="16" size="16" name="CAPn_H" description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured." />
    </Register>
    <Register start="+0x124" size="4" name="SCTMATCH9" access="Read/Write" description="SCT match value register of match channels" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="MATCHn_L" description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter." />
      <BitField start="16" size="16" name="MATCHn_H" description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter." />
    </Register>
    <Register start="+0x200" size="4" name="SCTCAPCTRL0" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x200" size="4" name="SCTMATCHREL0" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x204" size="4" name="SCTCAPCTRL1" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x204" size="4" name="SCTMATCHREL1" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x208" size="4" name="SCTCAPCTRL2" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x208" size="4" name="SCTMATCHREL2" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x20C" size="4" name="SCTCAPCTRL3" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x20C" size="4" name="SCTMATCHREL3" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x210" size="4" name="SCTCAPCTRL4" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x210" size="4" name="SCTMATCHREL4" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x214" size="4" name="SCTCAPCTRL5" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x214" size="4" name="SCTMATCHREL5" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x218" size="4" name="SCTCAPCTRL6" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x218" size="4" name="SCTMATCHREL6" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x21C" size="4" name="SCTCAPCTRL7" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x21C" size="4" name="SCTMATCHREL7" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x220" size="4" name="SCTCAPCTRL8" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x220" size="4" name="SCTMATCHREL8" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x224" size="4" name="SCTCAPCTRL9" access="Read/Write" description="SCT capture control register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="CAPCONn_L" description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT." />
      <BitField start="16" size="16" name="CAPCONn_H" description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT." />
    </Register>
    <Register start="+0x224" size="4" name="SCTMATCHREL9" access="Read/Write" description="SCT match reload value register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="16" name="RELOADn_L" description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register." />
      <BitField start="16" size="16" name="RELOADn_H" description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register." />
    </Register>
    <Register start="+0x300" size="4" name="STATE0" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x304" size="4" name="CTRL0" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x308" size="4" name="STATE1" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x30C" size="4" name="CTRL1" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x310" size="4" name="STATE2" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x314" size="4" name="CTRL2" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x318" size="4" name="STATE3" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x31C" size="4" name="CTRL3" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x320" size="4" name="STATE4" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x324" size="4" name="CTRL4" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x328" size="4" name="STATE5" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x32C" size="4" name="CTRL5" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x330" size="4" name="STATE6" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x334" size="4" name="CTRL6" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x338" size="4" name="STATE7" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x33C" size="4" name="CTRL7" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x340" size="4" name="STATE8" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x344" size="4" name="CTRL8" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x348" size="4" name="STATE9" access="Read/Write" description="SCT event state register 0" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="STATEMSKn" description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT." />
    </Register>
    <Register start="+0x34C" size="4" name="CTRL9" access="Read/Write" description="SCT event control register 0" reset_value="0" reset_mask="0x7FFFFF">
      <BitField start="0" size="4" name="MATCHSEL" description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running." />
      <BitField start="4" size="1" name="HEVENT" description="Select L/H counter. Do not set this bit if UNIFY = 1.">
        <Enum name="0" start="0b0" description="Selects the L state and the L match register selected by MATCHSEL." />
        <Enum name="1" start="0b1" description="Selects the H state and the H match register selected by MATCHSEL." />
      </BitField>
      <BitField start="5" size="1" name="OUTSEL" description="Input/output select">
        <Enum name="0" start="0b0" description="Selects the inputs selected by IOSEL." />
        <Enum name="1" start="0b1" description="Selects the outputs selected by IOSEL." />
      </BitField>
      <BitField start="6" size="4" name="IOSEL" description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event." />
      <BitField start="10" size="2" name="IOCOND" description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .">
        <Enum name="0" start="0b00" description="LOW" />
        <Enum name="1" start="0b01" description="Rise" />
        <Enum name="10" start="0b10" description="Fall" />
        <Enum name="11" start="0b11" description="HIGH" />
      </BitField>
      <BitField start="12" size="2" name="COMBMODE" description="Selects how the specified match and I/O condition are used and combined.">
        <Enum name="0" start="0b00" description="OR. The event occurs when either the specified match or I/O condition occurs." />
        <Enum name="1" start="0b01" description="MATCH. Uses the specified match only." />
        <Enum name="10" start="0b10" description="IO. Uses the specified I/O condition only." />
        <Enum name="11" start="0b11" description="AND. The event occurs when the specified match and I/O condition occur simultaneously." />
      </BitField>
      <BitField start="14" size="1" name="STATELD" description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.">
        <Enum name="0" start="0b0" description="STATEV value is added into STATE (the carry-out is ignored)." />
        <Enum name="1" start="0b1" description="STATEV value is loaded into STATE." />
      </BitField>
      <BitField start="15" size="5" name="STATEV" description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value." />
      <BitField start="20" size="1" name="MATCHMEM" description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value." />
      <BitField start="21" size="2" name="DIRECTION" description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.">
        <Enum name="0" start="0b00" description="Direction independent. This event is triggered regardless of the count direction." />
        <Enum name="1" start="0b01" description="Counting up. This event is triggered only during up-counting when BIDIR = 1." />
        <Enum name="10" start="0b10" description="Counting down. This event is triggered only during down-counting when BIDIR = 1." />
      </BitField>
    </Register>
    <Register start="+0x500" size="4" name="SET0" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x504" size="4" name="CLR0" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x508" size="4" name="SET1" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x50C" size="4" name="CLR1" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x510" size="4" name="SET2" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x514" size="4" name="CLR2" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x518" size="4" name="SET3" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x51C" size="4" name="CLR3" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x520" size="4" name="SET4" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x524" size="4" name="CLR4" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x528" size="4" name="SET5" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x52C" size="4" name="CLR5" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x530" size="4" name="SET6" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x534" size="4" name="CLR6" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x538" size="4" name="SET7" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x53C" size="4" name="CLR7" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x540" size="4" name="SET8" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x544" size="4" name="CLR8" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x548" size="4" name="SET9" access="Read/Write" description="SCT output 0 set register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="SET" description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
    <Register start="+0x54C" size="4" name="CLR9" access="Read/Write" description="SCT output 0 clear register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="CLR" description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM0" start="0x40086000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM1" start="0x40087000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM2" start="0x40088000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM3" start="0x40089000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM4" start="0x4008A000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM5" start="0x40096000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM6" start="0x40097000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM7" start="0x40098000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM8" start="0x40099000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FLEXCOMM9" start="0x4009A000" description="LPC5411x Flexcomm serial communication">
    <Register start="+0xFF8" size="4" name="PSELID" access="Read/Write" description="Peripheral Select and Flexcomm ID register." reset_value="0x101000" reset_mask="0xFFFFF0FF">
      <BitField start="0" size="3" name="PERSEL" description="Peripheral Select. This field is writable by software.">
        <Enum name="0" start="0b000" description="No peripheral selected." />
        <Enum name="1" start="0b001" description="USART function selected." />
        <Enum name="10" start="0b010" description="SPI function selected." />
        <Enum name="11" start="0b011" description="I2C function selected." />
        <Enum name="100" start="0b100" description="I2S transmit function selected." />
        <Enum name="101" start="0b101" description="I2S receive function selected." />
      </BitField>
      <BitField start="3" size="1" name="LOCK" description="Lock the peripheral select. This field is writable by software.">
        <Enum name="0" start="0b0" description="Peripheral select can be changed by software." />
        <Enum name="1" start="0b1" description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset." />
      </BitField>
      <BitField start="4" size="1" name="USARTPRESENT" description="USART present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the USART function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the USART function." />
      </BitField>
      <BitField start="5" size="1" name="SPIPRESENT" description="SPI present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the SPI function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the SPI function." />
      </BitField>
      <BitField start="6" size="1" name="I2CPRESENT" description="I2C present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2C function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2C function." />
      </BitField>
      <BitField start="7" size="1" name="I2SPRESENT" description="I 2S present indicator. This field is Read-only.">
        <Enum name="0" start="0b0" description="This Flexcomm does not include the I2S function." />
        <Enum name="1" start="0b1" description="This Flexcomm includes the I2S function." />
      </BitField>
      <BitField start="12" size="20" name="ID" description="Flexcomm ID." />
    </Register>
    <Register start="+0xFFC" size="4" name="PID" access="Read/Write" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI0" start="0x40086000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI1" start="0x40087000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI2" start="0x40088000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI3" start="0x40089000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI4" start="0x4008A000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI5" start="0x40096000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI6" start="0x40097000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI7" start="0x40098000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI8" start="0x40099000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SPI9" start="0x4009A000" description="LPC5411x Serial Peripheral Interfaces (SPI)">
    <Register start="+0x400" size="4" name="CFG" access="Read/Write" description="SPI Configuration register" reset_value="0" reset_mask="0xFBD">
      <BitField start="0" size="1" name="ENABLE" description="SPI enable.">
        <Enum name="0" start="0b0" description="Disabled. The SPI is disabled and the internal state machine and counters are reset." />
        <Enum name="1" start="0b1" description="Enabled. The SPI is enabled for operation." />
      </BitField>
      <BitField start="2" size="1" name="MASTER" description="Master mode select.">
        <Enum name="0" start="0b0" description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output." />
        <Enum name="1" start="0b1" description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input." />
      </BitField>
      <BitField start="3" size="1" name="LSBF" description="LSB First mode enable.">
        <Enum name="0" start="0b0" description="Standard. Data is transmitted and received in standard MSB first order." />
        <Enum name="1" start="0b1" description="Reverse. Data is transmitted and received in reverse order (LSB first)." />
      </BitField>
      <BitField start="4" size="1" name="CPHA" description="Clock Phase select.">
        <Enum name="0" start="0b0" description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge." />
        <Enum name="1" start="0b1" description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge." />
      </BitField>
      <BitField start="5" size="1" name="CPOL" description="Clock Polarity select.">
        <Enum name="0" start="0b0" description="Low. The rest state of the clock (between transfers) is low." />
        <Enum name="1" start="0b1" description="High. The rest state of the clock (between transfers) is high." />
      </BitField>
      <BitField start="7" size="1" name="LOOP" description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.">
        <Enum name="0" start="0b0" description="Disabled." />
        <Enum name="1" start="0b1" description="Enabled." />
      </BitField>
      <BitField start="8" size="1" name="SPOL0" description="SSEL0 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL0 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL0 pin is active high." />
      </BitField>
      <BitField start="9" size="1" name="SPOL1" description="SSEL1 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL1 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL1 pin is active high." />
      </BitField>
      <BitField start="10" size="1" name="SPOL2" description="SSEL2 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL2 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL2 pin is active high." />
      </BitField>
      <BitField start="11" size="1" name="SPOL3" description="SSEL3 Polarity select.">
        <Enum name="0" start="0b0" description="Low. The SSEL3 pin is active low." />
        <Enum name="1" start="0b1" description="High. The SSEL3 pin is active high." />
      </BitField>
    </Register>
    <Register start="+0x404" size="4" name="DLY" access="Read/Write" description="SPI Delay register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="PRE_DELAY" description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="4" size="4" name="POST_DELAY" description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="8" size="4" name="FRAME_DELAY" description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted." />
      <BitField start="12" size="4" name="TRANSFER_DELAY" description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times." />
    </Register>
    <Register start="+0x408" size="4" name="STAT" access="Read/Write" description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position." reset_value="0x100" reset_mask="0x1C0">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software." />
      <BitField start="6" size="1" name="STALLED" description="Stalled status flag. This indicates whether the SPI is currently in a stall condition." />
      <BitField start="7" size="1" name="ENDTRANSFER" description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data." />
    </Register>
    <Register start="+0x40C" size="4" name="INTENSET" access="Read/Write" description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSAEN" description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted." />
      </BitField>
      <BitField start="5" size="1" name="SSDEN" description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.">
        <Enum name="0" start="0b0" description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted." />
        <Enum name="1" start="0b1" description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted." />
      </BitField>
      <BitField start="8" size="1" name="MSTIDLEEN" description="Master idle interrupt enable.">
        <Enum name="0" start="0b0" description="No interrupt will be generated when the SPI master function is idle." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when the SPI master function is fully idle." />
      </BitField>
    </Register>
    <Register start="+0x410" size="4" name="INTENCLR" access="WriteOnly" description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared." reset_value="0" reset_mask="0">
      <BitField start="4" size="1" name="SSAEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="SSDEN" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="8" size="1" name="MSTIDLE" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x424" size="4" name="DIV" access="Read/Write" description="SPI clock Divider" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536." />
    </Register>
    <Register start="+0x428" size="4" name="INTSTAT" access="ReadOnly" description="SPI Interrupt Status" reset_value="0" reset_mask="0x130">
      <BitField start="4" size="1" name="SSA" description="Slave Select Assert." />
      <BitField start="5" size="1" name="SSD" description="Slave Select Deassert." />
      <BitField start="8" size="1" name="MSTIDLE" description="Master Idle status flag." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="16" name="TXDATA" description="Transmit data to the FIFO." />
      <BitField start="16" size="1" name="TXSSEL0_N" description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL0 asserted." />
        <Enum name="1" start="0b1" description="SSEL0 not asserted." />
      </BitField>
      <BitField start="17" size="1" name="TXSSEL1_N" description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL1 asserted." />
        <Enum name="1" start="0b1" description="SSEL1 not asserted." />
      </BitField>
      <BitField start="18" size="1" name="TXSSEL2_N" description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL2 asserted." />
        <Enum name="1" start="0b1" description="SSEL2 not asserted." />
      </BitField>
      <BitField start="19" size="1" name="TXSSEL3_N" description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.">
        <Enum name="0" start="0b0" description="SSEL3 asserted." />
        <Enum name="1" start="0b1" description="SSEL3 not asserted." />
      </BitField>
      <BitField start="20" size="1" name="EOT" description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.">
        <Enum name="0" start="0b0" description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data." />
        <Enum name="1" start="0b1" description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data." />
      </BitField>
      <BitField start="21" size="1" name="EOF" description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.">
        <Enum name="0" start="0b0" description="Data not EOF. This piece of data transmitted is not treated as the end of a frame." />
        <Enum name="1" start="0b1" description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted." />
      </BitField>
      <BitField start="22" size="1" name="RXIGNORE" description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.">
        <Enum name="0" start="0b0" description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received." />
        <Enum name="1" start="0b1" description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated." />
      </BitField>
      <BitField start="24" size="4" name="LEN" description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG." />
      <BitField start="20" size="1" name="SOT" description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="16" name="RXDATA" description="Received data from the FIFO." />
      <BitField start="16" size="1" name="RXSSEL0_N" description="Slave Select for receive." />
      <BitField start="17" size="1" name="RXSSEL1_N" description="Slave Select for receive." />
      <BitField start="18" size="1" name="RXSSEL2_N" description="Slave Select for receive." />
      <BitField start="19" size="1" name="RXSSEL3_N" description="Slave Select for receive." />
      <BitField start="20" size="1" name="SOT" description="Start of transfer flag." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART0" start="0x40086000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART1" start="0x40087000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART2" start="0x40088000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART3" start="0x40089000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART4" start="0x4008A000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART5" start="0x40096000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART6" start="0x40097000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART7" start="0x40098000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART8" start="0x40099000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USART9" start="0x4009A000" description="LPC5411x USARTs">
    <Register start="+0" size="4" name="CFG" access="Read/Write" description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation." reset_value="0" reset_mask="0xFDDBFD">
      <BitField start="0" size="1" name="ENABLE" description="USART Enable.">
        <Enum name="0" start="0b0" description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available." />
        <Enum name="1" start="0b1" description="Enabled. The USART is enabled for operation." />
      </BitField>
      <BitField start="2" size="2" name="DATALEN" description="Selects the data size for the USART.">
        <Enum name="0" start="0b00" description="7 bit Data length." />
        <Enum name="1" start="0b01" description="8 bit Data length." />
        <Enum name="10" start="0b10" description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register." />
      </BitField>
      <BitField start="4" size="2" name="PARITYSEL" description="Selects what type of parity is used by the USART.">
        <Enum name="0" start="0b00" description="No parity." />
        <Enum name="10" start="0b10" description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even." />
        <Enum name="11" start="0b11" description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd." />
      </BitField>
      <BitField start="6" size="1" name="STOPLEN" description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.">
        <Enum name="0" start="0b0" description="1 stop bit." />
        <Enum name="1" start="0b1" description="2 stop bits. This setting should only be used for asynchronous communication." />
      </BitField>
      <BitField start="7" size="1" name="MODE32K" description="Selects standard or 32 kHz clocking mode.">
        <Enum name="0" start="0b0" description="Disabled. USART uses standard clocking." />
        <Enum name="1" start="0b1" description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme." />
      </BitField>
      <BitField start="8" size="1" name="LINMODE" description="LIN break mode enable.">
        <Enum name="0" start="0b0" description="Disabled. Break detect and generate is configured for normal operation." />
        <Enum name="1" start="0b1" description="Enabled. Break detect and generate is configured for LIN bus operation." />
      </BitField>
      <BitField start="9" size="1" name="CTSEN" description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.">
        <Enum name="0" start="0b0" description="No flow control. The transmitter does not receive any automatic flow control signal." />
        <Enum name="1" start="0b1" description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes." />
      </BitField>
      <BitField start="11" size="1" name="SYNCEN" description="Selects synchronous or asynchronous operation.">
        <Enum name="0" start="0b0" description="Asynchronous mode." />
        <Enum name="1" start="0b1" description="Synchronous mode." />
      </BitField>
      <BitField start="12" size="1" name="CLKPOL" description="Selects the clock polarity and sampling edge of received data in synchronous mode.">
        <Enum name="0" start="0b0" description="Falling edge. Un_RXD is sampled on the falling edge of SCLK." />
        <Enum name="1" start="0b1" description="Rising edge. Un_RXD is sampled on the rising edge of SCLK." />
      </BitField>
      <BitField start="14" size="1" name="SYNCMST" description="Synchronous mode Master select.">
        <Enum name="0" start="0b0" description="Slave. When synchronous mode is enabled, the USART is a slave." />
        <Enum name="1" start="0b1" description="Master. When synchronous mode is enabled, the USART is a master." />
      </BitField>
      <BitField start="15" size="1" name="LOOP" description="Selects data loopback mode.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN." />
      </BitField>
      <BitField start="18" size="1" name="OETA" description="Output Enable Turnaround time enable for RS-485 operation.">
        <Enum name="0" start="0b0" description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission." />
        <Enum name="1" start="0b1" description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted." />
      </BitField>
      <BitField start="19" size="1" name="AUTOADDR" description="Automatic Address matching enable.">
        <Enum name="0" start="0b0" description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)." />
        <Enum name="1" start="0b1" description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match." />
      </BitField>
      <BitField start="20" size="1" name="OESEL" description="Output Enable Select.">
        <Enum name="0" start="0b0" description="Standard. The RTS signal is used as the standard flow control function." />
        <Enum name="1" start="0b1" description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver." />
      </BitField>
      <BitField start="21" size="1" name="OEPOL" description="Output Enable Polarity.">
        <Enum name="0" start="0b0" description="Low. If selected by OESEL, the output enable is active low." />
        <Enum name="1" start="0b1" description="High. If selected by OESEL, the output enable is active high." />
      </BitField>
      <BitField start="22" size="1" name="RXPOL" description="Receive data polarity.">
        <Enum name="0" start="0b0" description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
      <BitField start="23" size="1" name="TXPOL" description="Transmit data polarity.">
        <Enum name="0" start="0b0" description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1." />
        <Enum name="1" start="0b1" description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0." />
      </BitField>
    </Register>
    <Register start="+0x4" size="4" name="CTL" access="Read/Write" description="USART Control register. USART control settings that are more likely to change during operation." reset_value="0" reset_mask="0x10346">
      <BitField start="1" size="1" name="TXBRKEN" description="Break Enable.">
        <Enum name="0" start="0b0" description="Normal operation." />
        <Enum name="1" start="0b1" description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN." />
      </BitField>
      <BitField start="2" size="1" name="ADDRDET" description="Enable address detect mode.">
        <Enum name="0" start="0b0" description="Disabled. The USART presents all incoming data." />
        <Enum name="1" start="0b1" description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally." />
      </BitField>
      <BitField start="6" size="1" name="TXDIS" description="Transmit Disable.">
        <Enum name="0" start="0b0" description="Not disabled. USART transmitter is not disabled." />
        <Enum name="1" start="0b1" description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control." />
      </BitField>
      <BitField start="8" size="1" name="CC" description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.">
        <Enum name="0" start="0b0" description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received." />
        <Enum name="1" start="0b1" description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)." />
      </BitField>
      <BitField start="9" size="1" name="CLRCCONRX" description="Clear Continuous Clock.">
        <Enum name="0" start="0b0" description="No effect. No effect on the CC bit." />
        <Enum name="1" start="0b1" description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time." />
      </BitField>
      <BitField start="16" size="1" name="AUTOBAUD" description="Autobaud enable.">
        <Enum name="0" start="0b0" description="Disabled. USART is in normal operating mode." />
        <Enum name="1" start="0b1" description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="STAT" access="Read/Write" description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them." reset_value="0xA" reset_mask="0x45A">
      <BitField start="1" size="1" name="RXIDLE" description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data." />
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data." />
      <BitField start="4" size="1" name="CTS" description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software." />
      <BitField start="6" size="1" name="TXDISSTAT" description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)." />
      <BitField start="10" size="1" name="RXBRK" description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception." />
      <BitField start="16" size="1" name="ABERR" description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out." />
    </Register>
    <Register start="+0xC" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set." reset_value="0" reset_mask="0x1F868">
      <BitField start="3" size="1" name="TXIDLEEN" description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)." />
      <BitField start="5" size="1" name="DELTACTSEN" description="When 1, enables an interrupt when there is a change in the state of the CTS input." />
      <BitField start="6" size="1" name="TXDISEN" description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details." />
      <BitField start="11" size="1" name="DELTARXBRKEN" description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)." />
      <BitField start="12" size="1" name="STARTEN" description="When 1, enables an interrupt when a received start bit has been detected." />
      <BitField start="13" size="1" name="FRAMERREN" description="When 1, enables an interrupt when a framing error has been detected." />
      <BitField start="14" size="1" name="PARITYERREN" description="When 1, enables an interrupt when a parity error has been detected." />
      <BitField start="15" size="1" name="RXNOISEEN" description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354." />
      <BitField start="16" size="1" name="ABERREN" description="When 1, enables an interrupt when an auto baud error occurs." />
    </Register>
    <Register start="+0x10" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared." reset_value="0" reset_mask="0">
      <BitField start="3" size="1" name="TXIDLECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="5" size="1" name="DELTACTSCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="6" size="1" name="TXDISCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="11" size="1" name="DELTARXBRKCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="12" size="1" name="STARTCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="13" size="1" name="FRAMERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="14" size="1" name="PARITYERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="15" size="1" name="RXNOISECLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
      <BitField start="16" size="1" name="ABERRCLR" description="Writing 1 clears the corresponding bit in the INTENSET register." />
    </Register>
    <Register start="+0x20" size="4" name="BRG" access="Read/Write" description="Baud Rate Generator register. 16-bit integer baud rate divisor value." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BRGVAL" description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function." />
    </Register>
    <Register start="+0x24" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt status register. Reflects interrupts that are currently enabled." reset_value="0" reset_mask="0x1F968">
      <BitField start="3" size="1" name="TXIDLE" description="Transmitter Idle status." />
      <BitField start="5" size="1" name="DELTACTS" description="This bit is set when a change in the state of the CTS input is detected." />
      <BitField start="6" size="1" name="TXDISINT" description="Transmitter Disabled Interrupt flag." />
      <BitField start="11" size="1" name="DELTARXBRK" description="This bit is set when a change in the state of receiver break detection occurs." />
      <BitField start="12" size="1" name="START" description="This bit is set when a start is detected on the receiver input." />
      <BitField start="13" size="1" name="FRAMERRINT" description="Framing Error interrupt flag." />
      <BitField start="14" size="1" name="PARITYERRINT" description="Parity Error interrupt flag." />
      <BitField start="15" size="1" name="RXNOISEINT" description="Received Noise interrupt flag." />
      <BitField start="16" size="1" name="ABERRINT" description="Auto baud Error Interrupt flag." />
    </Register>
    <Register start="+0x28" size="4" name="OSR" access="Read/Write" description="Oversample selection register for asynchronous communication." reset_value="0xF" reset_mask="0xF">
      <BitField start="0" size="4" name="OSRVAL" description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit." />
    </Register>
    <Register start="+0x2C" size="4" name="ADDR" access="Read/Write" description="Address register for automatic address matching." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="ADDRESS" description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="Read/Write" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="9" name="TXDATA" description="Transmit data to the FIFO." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0xE1FF">
      <BitField start="0" size="9" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings." />
      <BitField start="13" size="1" name="FRAMERR" description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source." />
      <BitField start="14" size="1" name="PARITYERR" description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character." />
      <BitField start="15" size="1" name="RXNOISE" description="Received Noise flag. See description of the RxNoiseInt bit in Table 354." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C0" start="0x40086000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C1" start="0x40087000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C2" start="0x40088000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C3" start="0x40089000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C4" start="0x4008A000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C5" start="0x40096000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C6" start="0x40097000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C7" start="0x40098000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C8" start="0x40099000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2C9" start="0x4009A000" description="LPC5411x I2C-bus interfaces">
    <Register start="+0x800" size="4" name="CFG" access="Read/Write" description="Configuration for shared functions." reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="1" name="MSTEN" description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Master function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Master function is enabled." />
      </BitField>
      <BitField start="1" size="1" name="SLVEN" description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C slave function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C slave function is enabled." />
      </BitField>
      <BitField start="2" size="1" name="MONEN" description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. The I2C Monitor function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The I2C Monitor function is enabled." />
      </BitField>
      <BitField start="3" size="1" name="TIMEOUTEN" description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset.">
        <Enum name="0" start="0b0" description="Disabled. Time-out function is disabled." />
        <Enum name="1" start="0b1" description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system." />
      </BitField>
      <BitField start="4" size="1" name="MONCLKSTR" description="Monitor function Clock Stretching.">
        <Enum name="0" start="0b0" description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical." />
        <Enum name="1" start="0b1" description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function." />
      </BitField>
      <BitField start="5" size="1" name="HSCAPABLE" description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.">
        <Enum name="0" start="0b0" description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin," />
        <Enum name="1" start="0b1" description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information." />
      </BitField>
    </Register>
    <Register start="+0x804" size="4" name="STAT" access="Read/Write" description="Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30FFF5F">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.">
        <Enum name="0" start="0b0" description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command." />
        <Enum name="1" start="0b1" description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit." />
      </BitField>
      <BitField start="1" size="3" name="MSTSTATE" description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.">
        <Enum name="0" start="0b000" description="Idle. The Master function is available to be used for a new transaction." />
        <Enum name="1" start="0b001" description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave." />
        <Enum name="10" start="0b010" description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave." />
        <Enum name="11" start="0b011" description="NACK Address. Slave NACKed address." />
        <Enum name="100" start="0b100" description="NACK Data. Slave NACKed transmitted data." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Arbitration Loss has occurred." />
        <Enum name="1" start="0b1" description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.">
        <Enum name="0" start="0b0" description="No Start/Stop Error has occurred." />
        <Enum name="1" start="0b1" description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.">
        <Enum name="0" start="0b0" description="In progress. The Slave function does not currently need service." />
        <Enum name="1" start="0b1" description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field." />
      </BitField>
      <BitField start="9" size="2" name="SLVSTATE" description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.">
        <Enum name="0" start="0b00" description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware." />
        <Enum name="1" start="0b01" description="Slave receive. Received data is available (Slave Receiver mode)." />
        <Enum name="10" start="0b10" description="Slave transmit. Data can be transmitted (Slave Transmitter mode)." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.">
        <Enum name="0" start="0b0" description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time." />
        <Enum name="1" start="0b1" description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time." />
      </BitField>
      <BitField start="12" size="2" name="SLVIDX" description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.">
        <Enum name="0" start="0b00" description="Address 0. Slave address 0 was matched." />
        <Enum name="1" start="0b01" description="Address 1. Slave address 1 was matched." />
        <Enum name="10" start="0b10" description="Address 2. Slave address 2 was matched." />
        <Enum name="11" start="0b11" description="Address 3. Slave address 3 was matched." />
      </BitField>
      <BitField start="14" size="1" name="SLVSEL" description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.">
        <Enum name="0" start="0b0" description="Not selected. The Slave function is not currently selected." />
        <Enum name="1" start="0b1" description="Selected. The Slave function is currently selected." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag." />
        <Enum name="1" start="0b1" description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs." />
      </BitField>
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready. This flag is cleared when the MONRXDAT register is read.">
        <Enum name="0" start="0b0" description="No data. The Monitor function does not currently have data available." />
        <Enum name="1" start="0b1" description="Data waiting. The Monitor function has data waiting to be read." />
      </BitField>
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag.">
        <Enum name="0" start="0b0" description="No overrun. Monitor data has not overrun." />
        <Enum name="1" start="0b1" description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag." />
      </BitField>
      <BitField start="18" size="1" name="MONACTIVE" description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.">
        <Enum name="0" start="0b0" description="Inactive. The Monitor function considers the I2C bus to be inactive." />
        <Enum name="1" start="0b1" description="Active. The Monitor function considers the I2C bus to be active." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="Not idle. The I2C bus is not idle, or this flag has been cleared by software." />
        <Enum name="1" start="0b1" description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.">
        <Enum name="0" start="0b0" description="No time-out. I2C bus events have not caused a time-out." />
        <Enum name="1" start="0b1" description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.">
        <Enum name="0" start="0b0" description="No time-out. SCL low time has not caused a time-out." />
        <Enum name="1" start="0b1" description="Time-out. SCL low time has caused a time-out." />
      </BitField>
    </Register>
    <Register start="+0x808" size="4" name="INTENSET" access="Read/Write" description="Interrupt Enable Set and read register." reset_value="0" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDINGEN" description="Master Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstPending interrupt is enabled." />
      </BitField>
      <BitField start="4" size="1" name="MSTARBLOSSEN" description="Master Arbitration Loss interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstArbLoss interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstArbLoss interrupt is enabled." />
      </BitField>
      <BitField start="6" size="1" name="MSTSTSTPERREN" description="Master Start/Stop Error interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MstStStpErr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MstStStpErr interrupt is enabled." />
      </BitField>
      <BitField start="8" size="1" name="SLVPENDINGEN" description="Slave Pending interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvPending interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvPending interrupt is enabled." />
      </BitField>
      <BitField start="11" size="1" name="SLVNOTSTREN" description="Slave Not Stretching interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvNotStr interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvNotStr interrupt is enabled." />
      </BitField>
      <BitField start="15" size="1" name="SLVDESELEN" description="Slave Deselect interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SlvDeSel interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SlvDeSel interrupt is enabled." />
      </BitField>
      <BitField start="16" size="1" name="MONRDYEN" description="Monitor data Ready interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonRdy interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonRdy interrupt is enabled." />
      </BitField>
      <BitField start="17" size="1" name="MONOVEN" description="Monitor Overrun interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonOv interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonOv interrupt is enabled." />
      </BitField>
      <BitField start="19" size="1" name="MONIDLEEN" description="Monitor Idle interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The MonIdle interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The MonIdle interrupt is enabled." />
      </BitField>
      <BitField start="24" size="1" name="EVENTTIMEOUTEN" description="Event time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The Event time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The Event time-out interrupt is enabled." />
      </BitField>
      <BitField start="25" size="1" name="SCLTIMEOUTEN" description="SCL time-out interrupt Enable.">
        <Enum name="0" start="0b0" description="Disabled. The SCL time-out interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The SCL time-out interrupt is enabled." />
      </BitField>
    </Register>
    <Register start="+0x80C" size="4" name="INTENCLR" access="WriteOnly" description="Interrupt Enable Clear register." reset_value="0" reset_mask="0">
      <BitField start="0" size="1" name="MSTPENDINGCLR" description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented." />
      <BitField start="4" size="1" name="MSTARBLOSSCLR" description="Master Arbitration Loss interrupt clear." />
      <BitField start="6" size="1" name="MSTSTSTPERRCLR" description="Master Start/Stop Error interrupt clear." />
      <BitField start="8" size="1" name="SLVPENDINGCLR" description="Slave Pending interrupt clear." />
      <BitField start="11" size="1" name="SLVNOTSTRCLR" description="Slave Not Stretching interrupt clear." />
      <BitField start="15" size="1" name="SLVDESELCLR" description="Slave Deselect interrupt clear." />
      <BitField start="16" size="1" name="MONRDYCLR" description="Monitor data Ready interrupt clear." />
      <BitField start="17" size="1" name="MONOVCLR" description="Monitor Overrun interrupt clear." />
      <BitField start="19" size="1" name="MONIDLECLR" description="Monitor Idle interrupt clear." />
      <BitField start="24" size="1" name="EVENTTIMEOUTCLR" description="Event time-out interrupt clear." />
      <BitField start="25" size="1" name="SCLTIMEOUTCLR" description="SCL time-out interrupt clear." />
    </Register>
    <Register start="+0x810" size="4" name="TIMEOUT" access="Read/Write" description="Time-out value register." reset_value="0xFFFF" reset_mask="0xFFFF">
      <BitField start="0" size="4" name="TOMIN" description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks." />
      <BitField start="4" size="12" name="TO" description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock." />
    </Register>
    <Register start="+0x814" size="4" name="CLKDIV" access="Read/Write" description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function." reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="DIVVAL" description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use." />
    </Register>
    <Register start="+0x818" size="4" name="INTSTAT" access="ReadOnly" description="Interrupt Status register for Master, Slave, and Monitor functions." reset_value="0x801" reset_mask="0x30B8951">
      <BitField start="0" size="1" name="MSTPENDING" description="Master Pending." />
      <BitField start="4" size="1" name="MSTARBLOSS" description="Master Arbitration Loss flag." />
      <BitField start="6" size="1" name="MSTSTSTPERR" description="Master Start/Stop Error flag." />
      <BitField start="8" size="1" name="SLVPENDING" description="Slave Pending." />
      <BitField start="11" size="1" name="SLVNOTSTR" description="Slave Not Stretching status." />
      <BitField start="15" size="1" name="SLVDESEL" description="Slave Deselected flag." />
      <BitField start="16" size="1" name="MONRDY" description="Monitor Ready." />
      <BitField start="17" size="1" name="MONOV" description="Monitor Overflow flag." />
      <BitField start="19" size="1" name="MONIDLE" description="Monitor Idle flag." />
      <BitField start="24" size="1" name="EVENTTIMEOUT" description="Event time-out Interrupt flag." />
      <BitField start="25" size="1" name="SCLTIMEOUT" description="SCL time-out Interrupt flag." />
    </Register>
    <Register start="+0x820" size="4" name="MSTCTL" access="Read/Write" description="Master control register." reset_value="0" reset_mask="0xE">
      <BitField start="0" size="1" name="MSTCONTINUE" description="Master Continue. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation." />
      </BitField>
      <BitField start="1" size="1" name="MSTSTART" description="Master Start control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Start. A Start will be generated on the I2C bus at the next allowed time." />
      </BitField>
      <BitField start="2" size="1" name="MSTSTOP" description="Master Stop control. This bit is write-only.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="MSTDMA" description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.">
        <Enum name="0" start="0b0" description="Disable. No DMA requests are generated for master operation." />
        <Enum name="1" start="0b1" description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically." />
      </BitField>
    </Register>
    <Register start="+0x824" size="4" name="MSTTIME" access="Read/Write" description="Master timing configuration." reset_value="0x77" reset_mask="0x77">
      <BitField start="0" size="3" name="MSTSCLLOW" description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
      <BitField start="4" size="3" name="MSTSCLHIGH" description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.">
        <Enum name="0" start="0b000" description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider." />
        <Enum name="1" start="0b001" description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ." />
        <Enum name="10" start="0b010" description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider." />
        <Enum name="11" start="0b011" description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider." />
        <Enum name="100" start="0b100" description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider." />
        <Enum name="101" start="0b101" description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider." />
        <Enum name="110" start="0b110" description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider." />
        <Enum name="111" start="0b111" description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider." />
      </BitField>
    </Register>
    <Register start="+0x828" size="4" name="MSTDAT" access="Read/Write" description="Combined Master receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function." />
    </Register>
    <Register start="+0x840" size="4" name="SLVCTL" access="Read/Write" description="Slave control register." reset_value="0" reset_mask="0x30B">
      <BitField start="0" size="1" name="SLVCONTINUE" description="Slave Continue.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1." />
      </BitField>
      <BitField start="1" size="1" name="SLVNACK" description="Slave NACK.">
        <Enum name="0" start="0b0" description="No effect." />
        <Enum name="1" start="0b1" description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)." />
      </BitField>
      <BitField start="3" size="1" name="SLVDMA" description="Slave DMA enable.">
        <Enum name="0" start="0b0" description="Disabled. No DMA requests are issued for Slave mode operation." />
        <Enum name="1" start="0b1" description="Enabled. DMA requests are issued for I2C slave data transmission and reception." />
      </BitField>
      <BitField start="8" size="1" name="AUTOACK" description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.">
        <Enum name="0" start="0b0" description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)." />
        <Enum name="1" start="0b1" description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated." />
      </BitField>
      <BitField start="9" size="1" name="AUTOMATCHREAD" description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.">
        <Enum name="0" start="0b0" description="The expected next operation in Automatic Mode is an I2C write." />
        <Enum name="1" start="0b1" description="The expected next operation in Automatic Mode is an I2C read." />
      </BitField>
    </Register>
    <Register start="+0x844" size="4" name="SLVDAT" access="Read/Write" description="Combined Slave receiver and transmitter data register." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="DATA" description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function." />
    </Register>
    <Register start="+0x848" size="4" name="SLVADR0" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x84C" size="4" name="SLVADR1" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x850" size="4" name="SLVADR2" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x854" size="4" name="SLVADR3" access="Read/Write" description="Slave address register." reset_value="0x1" reset_mask="0xFF">
      <BitField start="0" size="1" name="SADISABLE" description="Slave Address n Disable.">
        <Enum name="0" start="0b0" description="Enabled. Slave Address n is enabled." />
        <Enum name="1" start="0b1" description="Ignored Slave Address n is ignored." />
      </BitField>
      <BitField start="1" size="7" name="SLVADR" description="Slave Address. Seven bit slave address that is compared to received addresses if enabled." />
      <BitField start="15" size="1" name="AUTONACK" description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.">
        <Enum name="0" start="0b0" description="Normal operation, matching I2C addresses are not ignored." />
        <Enum name="1" start="0b1" description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction." />
      </BitField>
    </Register>
    <Register start="+0x858" size="4" name="SLVQUAL0" access="Read/Write" description="Slave Qualification for address 0." reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="1" name="QUALMODE0" description="Qualify mode for slave address 0.">
        <Enum name="0" start="0b0" description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0." />
        <Enum name="1" start="0b1" description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses." />
      </BitField>
      <BitField start="1" size="7" name="SLVQUAL0" description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])." />
    </Register>
    <Register start="+0x880" size="4" name="MONRXDAT" access="ReadOnly" description="Monitor receiver data register." reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="8" name="MONRXDAT" description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins." />
      <BitField start="8" size="1" name="MONSTART" description="Monitor Received Start.">
        <Enum name="0" start="0b0" description="No start detected. The Monitor function has not detected a Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Start detected. The Monitor function has detected a Start event on the I2C bus." />
      </BitField>
      <BitField start="9" size="1" name="MONRESTART" description="Monitor Received Repeated Start.">
        <Enum name="0" start="0b0" description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus." />
        <Enum name="1" start="0b1" description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus." />
      </BitField>
      <BitField start="10" size="1" name="MONNACK" description="Monitor Received NACK.">
        <Enum name="0" start="0b0" description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver." />
        <Enum name="1" start="0b1" description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver." />
      </BitField>
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Peripheral identification register." reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="APERTURE" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="MINOR_REV" description="Minor revision of module implementation." />
      <BitField start="12" size="4" name="MAJOR_REV" description="Major revision of module implementation." />
      <BitField start="16" size="16" name="ID" description="Module identifier for the selected function." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="GPIO" start="0x4008C000" description="LPC5411x General Purpose I/O (GPIO)">
    <Register start="+0" size="1" name="B0_0" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1" size="1" name="B0_1" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x2" size="1" name="B0_2" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x3" size="1" name="B0_3" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x4" size="1" name="B0_4" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x5" size="1" name="B0_5" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x6" size="1" name="B0_6" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x7" size="1" name="B0_7" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x8" size="1" name="B0_8" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x9" size="1" name="B0_9" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA" size="1" name="B0_10" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB" size="1" name="B0_11" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xC" size="1" name="B0_12" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xD" size="1" name="B0_13" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xE" size="1" name="B0_14" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xF" size="1" name="B0_15" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10" size="1" name="B0_16" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11" size="1" name="B0_17" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12" size="1" name="B0_18" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x13" size="1" name="B0_19" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x14" size="1" name="B0_20" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x15" size="1" name="B0_21" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x16" size="1" name="B0_22" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x17" size="1" name="B0_23" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x18" size="1" name="B0_24" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x19" size="1" name="B0_25" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1A" size="1" name="B0_26" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1B" size="1" name="B0_27" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1C" size="1" name="B0_28" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1D" size="1" name="B0_29" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1E" size="1" name="B0_30" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1F" size="1" name="B0_31" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x20" size="1" name="B1_0" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x21" size="1" name="B1_1" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x22" size="1" name="B1_2" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x23" size="1" name="B1_3" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x24" size="1" name="B1_4" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x25" size="1" name="B1_5" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x26" size="1" name="B1_6" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x27" size="1" name="B1_7" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x28" size="1" name="B1_8" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x29" size="1" name="B1_9" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x2A" size="1" name="B1_10" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x2B" size="1" name="B1_11" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x2C" size="1" name="B1_12" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x2D" size="1" name="B1_13" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x2E" size="1" name="B1_14" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x2F" size="1" name="B1_15" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x30" size="1" name="B1_16" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x31" size="1" name="B1_17" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x32" size="1" name="B1_18" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x33" size="1" name="B1_19" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x34" size="1" name="B1_20" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x35" size="1" name="B1_21" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x36" size="1" name="B1_22" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x37" size="1" name="B1_23" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x38" size="1" name="B1_24" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x39" size="1" name="B1_25" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x3A" size="1" name="B1_26" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x3B" size="1" name="B1_27" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x3C" size="1" name="B1_28" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x3D" size="1" name="B1_29" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x3E" size="1" name="B1_30" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x3F" size="1" name="B1_31" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x40" size="1" name="B2_0" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x41" size="1" name="B2_1" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x42" size="1" name="B2_2" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x43" size="1" name="B2_3" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x44" size="1" name="B2_4" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x45" size="1" name="B2_5" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x46" size="1" name="B2_6" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x47" size="1" name="B2_7" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x48" size="1" name="B2_8" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x49" size="1" name="B2_9" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x4A" size="1" name="B2_10" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x4B" size="1" name="B2_11" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x4C" size="1" name="B2_12" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x4D" size="1" name="B2_13" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x4E" size="1" name="B2_14" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x4F" size="1" name="B2_15" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x50" size="1" name="B2_16" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x51" size="1" name="B2_17" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x52" size="1" name="B2_18" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x53" size="1" name="B2_19" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x54" size="1" name="B2_20" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x55" size="1" name="B2_21" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x56" size="1" name="B2_22" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x57" size="1" name="B2_23" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x58" size="1" name="B2_24" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x59" size="1" name="B2_25" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x5A" size="1" name="B2_26" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x5B" size="1" name="B2_27" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x5C" size="1" name="B2_28" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x5D" size="1" name="B2_29" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x5E" size="1" name="B2_30" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x5F" size="1" name="B2_31" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x60" size="1" name="B3_0" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x61" size="1" name="B3_1" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x62" size="1" name="B3_2" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x63" size="1" name="B3_3" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x64" size="1" name="B3_4" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x65" size="1" name="B3_5" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x66" size="1" name="B3_6" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x67" size="1" name="B3_7" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x68" size="1" name="B3_8" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x69" size="1" name="B3_9" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x6A" size="1" name="B3_10" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x6B" size="1" name="B3_11" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x6C" size="1" name="B3_12" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x6D" size="1" name="B3_13" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x6E" size="1" name="B3_14" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x6F" size="1" name="B3_15" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x70" size="1" name="B3_16" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x71" size="1" name="B3_17" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x72" size="1" name="B3_18" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x73" size="1" name="B3_19" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x74" size="1" name="B3_20" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x75" size="1" name="B3_21" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x76" size="1" name="B3_22" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x77" size="1" name="B3_23" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x78" size="1" name="B3_24" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x79" size="1" name="B3_25" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x7A" size="1" name="B3_26" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x7B" size="1" name="B3_27" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x7C" size="1" name="B3_28" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x7D" size="1" name="B3_29" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x7E" size="1" name="B3_30" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x7F" size="1" name="B3_31" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x80" size="1" name="B4_0" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x81" size="1" name="B4_1" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x82" size="1" name="B4_2" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x83" size="1" name="B4_3" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x84" size="1" name="B4_4" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x85" size="1" name="B4_5" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x86" size="1" name="B4_6" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x87" size="1" name="B4_7" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x88" size="1" name="B4_8" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x89" size="1" name="B4_9" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x8A" size="1" name="B4_10" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x8B" size="1" name="B4_11" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x8C" size="1" name="B4_12" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x8D" size="1" name="B4_13" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x8E" size="1" name="B4_14" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x8F" size="1" name="B4_15" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x90" size="1" name="B4_16" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x91" size="1" name="B4_17" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x92" size="1" name="B4_18" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x93" size="1" name="B4_19" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x94" size="1" name="B4_20" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x95" size="1" name="B4_21" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x96" size="1" name="B4_22" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x97" size="1" name="B4_23" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x98" size="1" name="B4_24" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x99" size="1" name="B4_25" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x9A" size="1" name="B4_26" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x9B" size="1" name="B4_27" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x9C" size="1" name="B4_28" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x9D" size="1" name="B4_29" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x9E" size="1" name="B4_30" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x9F" size="1" name="B4_31" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA0" size="1" name="B5_0" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA1" size="1" name="B5_1" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA2" size="1" name="B5_2" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA3" size="1" name="B5_3" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA4" size="1" name="B5_4" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA5" size="1" name="B5_5" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA6" size="1" name="B5_6" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA7" size="1" name="B5_7" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA8" size="1" name="B5_8" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xA9" size="1" name="B5_9" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xAA" size="1" name="B5_10" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xAB" size="1" name="B5_11" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xAC" size="1" name="B5_12" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xAD" size="1" name="B5_13" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xAE" size="1" name="B5_14" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xAF" size="1" name="B5_15" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB0" size="1" name="B5_16" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB1" size="1" name="B5_17" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB2" size="1" name="B5_18" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB3" size="1" name="B5_19" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB4" size="1" name="B5_20" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB5" size="1" name="B5_21" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB6" size="1" name="B5_22" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB7" size="1" name="B5_23" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB8" size="1" name="B5_24" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xB9" size="1" name="B5_25" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xBA" size="1" name="B5_26" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xBB" size="1" name="B5_27" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xBC" size="1" name="B5_28" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xBD" size="1" name="B5_29" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xBE" size="1" name="B5_30" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0xBF" size="1" name="B5_31" access="Read/Write" description="Byte pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="PBYTE" description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1000" size="4" name="W0_0" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1004" size="4" name="W0_1" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1008" size="4" name="W0_2" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x100C" size="4" name="W0_3" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1010" size="4" name="W0_4" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1014" size="4" name="W0_5" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1018" size="4" name="W0_6" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x101C" size="4" name="W0_7" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1020" size="4" name="W0_8" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1024" size="4" name="W0_9" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1028" size="4" name="W0_10" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x102C" size="4" name="W0_11" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1030" size="4" name="W0_12" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1034" size="4" name="W0_13" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1038" size="4" name="W0_14" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x103C" size="4" name="W0_15" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1040" size="4" name="W0_16" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1044" size="4" name="W0_17" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1048" size="4" name="W0_18" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x104C" size="4" name="W0_19" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1050" size="4" name="W0_20" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1054" size="4" name="W0_21" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1058" size="4" name="W0_22" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x105C" size="4" name="W0_23" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1060" size="4" name="W0_24" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1064" size="4" name="W0_25" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1068" size="4" name="W0_26" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x106C" size="4" name="W0_27" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1070" size="4" name="W0_28" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1074" size="4" name="W0_29" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1078" size="4" name="W0_30" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x107C" size="4" name="W0_31" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1080" size="4" name="W1_0" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1084" size="4" name="W1_1" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1088" size="4" name="W1_2" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x108C" size="4" name="W1_3" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1090" size="4" name="W1_4" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1094" size="4" name="W1_5" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1098" size="4" name="W1_6" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x109C" size="4" name="W1_7" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10A0" size="4" name="W1_8" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10A4" size="4" name="W1_9" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10A8" size="4" name="W1_10" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10AC" size="4" name="W1_11" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10B0" size="4" name="W1_12" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10B4" size="4" name="W1_13" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10B8" size="4" name="W1_14" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10BC" size="4" name="W1_15" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10C0" size="4" name="W1_16" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10C4" size="4" name="W1_17" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10C8" size="4" name="W1_18" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10CC" size="4" name="W1_19" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10D0" size="4" name="W1_20" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10D4" size="4" name="W1_21" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10D8" size="4" name="W1_22" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10DC" size="4" name="W1_23" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10E0" size="4" name="W1_24" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10E4" size="4" name="W1_25" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10E8" size="4" name="W1_26" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10EC" size="4" name="W1_27" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10F0" size="4" name="W1_28" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10F4" size="4" name="W1_29" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10F8" size="4" name="W1_30" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x10FC" size="4" name="W1_31" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1100" size="4" name="W2_0" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1104" size="4" name="W2_1" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1108" size="4" name="W2_2" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x110C" size="4" name="W2_3" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1110" size="4" name="W2_4" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1114" size="4" name="W2_5" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1118" size="4" name="W2_6" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x111C" size="4" name="W2_7" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1120" size="4" name="W2_8" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1124" size="4" name="W2_9" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1128" size="4" name="W2_10" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x112C" size="4" name="W2_11" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1130" size="4" name="W2_12" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1134" size="4" name="W2_13" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1138" size="4" name="W2_14" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x113C" size="4" name="W2_15" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1140" size="4" name="W2_16" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1144" size="4" name="W2_17" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1148" size="4" name="W2_18" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x114C" size="4" name="W2_19" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1150" size="4" name="W2_20" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1154" size="4" name="W2_21" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1158" size="4" name="W2_22" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x115C" size="4" name="W2_23" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1160" size="4" name="W2_24" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1164" size="4" name="W2_25" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1168" size="4" name="W2_26" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x116C" size="4" name="W2_27" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1170" size="4" name="W2_28" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1174" size="4" name="W2_29" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1178" size="4" name="W2_30" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x117C" size="4" name="W2_31" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1180" size="4" name="W3_0" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1184" size="4" name="W3_1" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1188" size="4" name="W3_2" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x118C" size="4" name="W3_3" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1190" size="4" name="W3_4" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1194" size="4" name="W3_5" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1198" size="4" name="W3_6" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x119C" size="4" name="W3_7" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11A0" size="4" name="W3_8" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11A4" size="4" name="W3_9" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11A8" size="4" name="W3_10" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11AC" size="4" name="W3_11" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11B0" size="4" name="W3_12" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11B4" size="4" name="W3_13" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11B8" size="4" name="W3_14" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11BC" size="4" name="W3_15" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11C0" size="4" name="W3_16" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11C4" size="4" name="W3_17" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11C8" size="4" name="W3_18" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11CC" size="4" name="W3_19" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11D0" size="4" name="W3_20" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11D4" size="4" name="W3_21" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11D8" size="4" name="W3_22" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11DC" size="4" name="W3_23" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11E0" size="4" name="W3_24" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11E4" size="4" name="W3_25" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11E8" size="4" name="W3_26" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11EC" size="4" name="W3_27" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11F0" size="4" name="W3_28" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11F4" size="4" name="W3_29" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11F8" size="4" name="W3_30" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x11FC" size="4" name="W3_31" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1200" size="4" name="W4_0" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1204" size="4" name="W4_1" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1208" size="4" name="W4_2" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x120C" size="4" name="W4_3" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1210" size="4" name="W4_4" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1214" size="4" name="W4_5" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1218" size="4" name="W4_6" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x121C" size="4" name="W4_7" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1220" size="4" name="W4_8" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1224" size="4" name="W4_9" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1228" size="4" name="W4_10" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x122C" size="4" name="W4_11" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1230" size="4" name="W4_12" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1234" size="4" name="W4_13" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1238" size="4" name="W4_14" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x123C" size="4" name="W4_15" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1240" size="4" name="W4_16" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1244" size="4" name="W4_17" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1248" size="4" name="W4_18" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x124C" size="4" name="W4_19" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1250" size="4" name="W4_20" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1254" size="4" name="W4_21" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1258" size="4" name="W4_22" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x125C" size="4" name="W4_23" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1260" size="4" name="W4_24" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1264" size="4" name="W4_25" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1268" size="4" name="W4_26" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x126C" size="4" name="W4_27" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1270" size="4" name="W4_28" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1274" size="4" name="W4_29" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1278" size="4" name="W4_30" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x127C" size="4" name="W4_31" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1280" size="4" name="W5_0" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1284" size="4" name="W5_1" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1288" size="4" name="W5_2" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x128C" size="4" name="W5_3" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1290" size="4" name="W5_4" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1294" size="4" name="W5_5" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x1298" size="4" name="W5_6" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x129C" size="4" name="W5_7" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12A0" size="4" name="W5_8" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12A4" size="4" name="W5_9" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12A8" size="4" name="W5_10" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12AC" size="4" name="W5_11" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12B0" size="4" name="W5_12" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12B4" size="4" name="W5_13" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12B8" size="4" name="W5_14" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12BC" size="4" name="W5_15" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12C0" size="4" name="W5_16" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12C4" size="4" name="W5_17" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12C8" size="4" name="W5_18" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12CC" size="4" name="W5_19" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12D0" size="4" name="W5_20" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12D4" size="4" name="W5_21" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12D8" size="4" name="W5_22" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12DC" size="4" name="W5_23" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12E0" size="4" name="W5_24" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12E4" size="4" name="W5_25" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12E8" size="4" name="W5_26" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12EC" size="4" name="W5_27" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12F0" size="4" name="W5_28" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12F4" size="4" name="W5_29" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12F8" size="4" name="W5_30" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x12FC" size="4" name="W5_31" access="Read/Write" description="Word pin registers for all port 0 and 1 GPIO pins" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PWORD" description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package." />
    </Register>
    <Register start="+0x2000" size="4" name="DIR0" access="Read/Write" description="Direction registers" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DIRP" description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output." />
    </Register>
    <Register start="+0x2004" size="4" name="DIR1" access="Read/Write" description="Direction registers" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DIRP" description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output." />
    </Register>
    <Register start="+0x2008" size="4" name="DIR2" access="Read/Write" description="Direction registers" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DIRP" description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output." />
    </Register>
    <Register start="+0x200C" size="4" name="DIR3" access="Read/Write" description="Direction registers" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DIRP" description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output." />
    </Register>
    <Register start="+0x2010" size="4" name="DIR4" access="Read/Write" description="Direction registers" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DIRP" description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output." />
    </Register>
    <Register start="+0x2014" size="4" name="DIR5" access="Read/Write" description="Direction registers" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DIRP" description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output." />
    </Register>
    <Register start="+0x2080" size="4" name="MASK0" access="Read/Write" description="Mask register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MASKP" description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected." />
    </Register>
    <Register start="+0x2084" size="4" name="MASK1" access="Read/Write" description="Mask register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MASKP" description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected." />
    </Register>
    <Register start="+0x2088" size="4" name="MASK2" access="Read/Write" description="Mask register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MASKP" description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected." />
    </Register>
    <Register start="+0x208C" size="4" name="MASK3" access="Read/Write" description="Mask register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MASKP" description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected." />
    </Register>
    <Register start="+0x2090" size="4" name="MASK4" access="Read/Write" description="Mask register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MASKP" description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected." />
    </Register>
    <Register start="+0x2094" size="4" name="MASK5" access="Read/Write" description="Mask register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MASKP" description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected." />
    </Register>
    <Register start="+0x2100" size="4" name="PIN0" access="Read/Write" description="Port pin register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PORT" description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit." />
    </Register>
    <Register start="+0x2104" size="4" name="PIN1" access="Read/Write" description="Port pin register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PORT" description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit." />
    </Register>
    <Register start="+0x2108" size="4" name="PIN2" access="Read/Write" description="Port pin register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PORT" description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit." />
    </Register>
    <Register start="+0x210C" size="4" name="PIN3" access="Read/Write" description="Port pin register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PORT" description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit." />
    </Register>
    <Register start="+0x2110" size="4" name="PIN4" access="Read/Write" description="Port pin register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PORT" description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit." />
    </Register>
    <Register start="+0x2114" size="4" name="PIN5" access="Read/Write" description="Port pin register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PORT" description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit." />
    </Register>
    <Register start="+0x2180" size="4" name="MPIN0" access="Read/Write" description="Masked port register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MPORTP" description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0." />
    </Register>
    <Register start="+0x2184" size="4" name="MPIN1" access="Read/Write" description="Masked port register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MPORTP" description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0." />
    </Register>
    <Register start="+0x2188" size="4" name="MPIN2" access="Read/Write" description="Masked port register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MPORTP" description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0." />
    </Register>
    <Register start="+0x218C" size="4" name="MPIN3" access="Read/Write" description="Masked port register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MPORTP" description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0." />
    </Register>
    <Register start="+0x2190" size="4" name="MPIN4" access="Read/Write" description="Masked port register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MPORTP" description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0." />
    </Register>
    <Register start="+0x2194" size="4" name="MPIN5" access="Read/Write" description="Masked port register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="MPORTP" description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0." />
    </Register>
    <Register start="+0x2200" size="4" name="SET0" access="Read/Write" description="Write: Set register for port Read: output bits for port" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SETP" description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit." />
    </Register>
    <Register start="+0x2204" size="4" name="SET1" access="Read/Write" description="Write: Set register for port Read: output bits for port" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SETP" description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit." />
    </Register>
    <Register start="+0x2208" size="4" name="SET2" access="Read/Write" description="Write: Set register for port Read: output bits for port" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SETP" description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit." />
    </Register>
    <Register start="+0x220C" size="4" name="SET3" access="Read/Write" description="Write: Set register for port Read: output bits for port" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SETP" description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit." />
    </Register>
    <Register start="+0x2210" size="4" name="SET4" access="Read/Write" description="Write: Set register for port Read: output bits for port" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SETP" description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit." />
    </Register>
    <Register start="+0x2214" size="4" name="SET5" access="Read/Write" description="Write: Set register for port Read: output bits for port" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SETP" description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit." />
    </Register>
    <Register start="+0x2280" size="4" name="CLR0" access="WriteOnly" description="Clear port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="CLRP" description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit." />
    </Register>
    <Register start="+0x2284" size="4" name="CLR1" access="WriteOnly" description="Clear port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="CLRP" description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit." />
    </Register>
    <Register start="+0x2288" size="4" name="CLR2" access="WriteOnly" description="Clear port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="CLRP" description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit." />
    </Register>
    <Register start="+0x228C" size="4" name="CLR3" access="WriteOnly" description="Clear port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="CLRP" description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit." />
    </Register>
    <Register start="+0x2290" size="4" name="CLR4" access="WriteOnly" description="Clear port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="CLRP" description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit." />
    </Register>
    <Register start="+0x2294" size="4" name="CLR5" access="WriteOnly" description="Clear port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="CLRP" description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit." />
    </Register>
    <Register start="+0x2300" size="4" name="NOT0" access="WriteOnly" description="Toggle port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="NOTP" description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit." />
    </Register>
    <Register start="+0x2304" size="4" name="NOT1" access="WriteOnly" description="Toggle port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="NOTP" description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit." />
    </Register>
    <Register start="+0x2308" size="4" name="NOT2" access="WriteOnly" description="Toggle port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="NOTP" description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit." />
    </Register>
    <Register start="+0x230C" size="4" name="NOT3" access="WriteOnly" description="Toggle port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="NOTP" description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit." />
    </Register>
    <Register start="+0x2310" size="4" name="NOT4" access="WriteOnly" description="Toggle port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="NOTP" description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit." />
    </Register>
    <Register start="+0x2314" size="4" name="NOT5" access="WriteOnly" description="Toggle port" reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="NOTP" description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit." />
    </Register>
    <Register start="+0x2380" size="4" name="DIRSET0" access="WriteOnly" description="Set pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRSETP" description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit." />
    </Register>
    <Register start="+0x2384" size="4" name="DIRSET1" access="WriteOnly" description="Set pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRSETP" description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit." />
    </Register>
    <Register start="+0x2388" size="4" name="DIRSET2" access="WriteOnly" description="Set pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRSETP" description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit." />
    </Register>
    <Register start="+0x238C" size="4" name="DIRSET3" access="WriteOnly" description="Set pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRSETP" description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit." />
    </Register>
    <Register start="+0x2390" size="4" name="DIRSET4" access="WriteOnly" description="Set pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRSETP" description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit." />
    </Register>
    <Register start="+0x2394" size="4" name="DIRSET5" access="WriteOnly" description="Set pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRSETP" description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit." />
    </Register>
    <Register start="+0x2400" size="4" name="DIRCLR0" access="WriteOnly" description="Clear pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRCLRP" description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit." />
    </Register>
    <Register start="+0x2404" size="4" name="DIRCLR1" access="WriteOnly" description="Clear pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRCLRP" description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit." />
    </Register>
    <Register start="+0x2408" size="4" name="DIRCLR2" access="WriteOnly" description="Clear pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRCLRP" description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit." />
    </Register>
    <Register start="+0x240C" size="4" name="DIRCLR3" access="WriteOnly" description="Clear pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRCLRP" description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit." />
    </Register>
    <Register start="+0x2410" size="4" name="DIRCLR4" access="WriteOnly" description="Clear pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRCLRP" description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit." />
    </Register>
    <Register start="+0x2414" size="4" name="DIRCLR5" access="WriteOnly" description="Clear pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRCLRP" description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit." />
    </Register>
    <Register start="+0x2480" size="4" name="DIRNOT0" access="WriteOnly" description="Toggle pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRNOTP" description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit." />
    </Register>
    <Register start="+0x2484" size="4" name="DIRNOT1" access="WriteOnly" description="Toggle pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRNOTP" description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit." />
    </Register>
    <Register start="+0x2488" size="4" name="DIRNOT2" access="WriteOnly" description="Toggle pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRNOTP" description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit." />
    </Register>
    <Register start="+0x248C" size="4" name="DIRNOT3" access="WriteOnly" description="Toggle pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRNOTP" description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit." />
    </Register>
    <Register start="+0x2490" size="4" name="DIRNOT4" access="WriteOnly" description="Toggle pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRNOTP" description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit." />
    </Register>
    <Register start="+0x2494" size="4" name="DIRNOT5" access="WriteOnly" description="Toggle pin direction bits for port" reset_value="0" reset_mask="0">
      <BitField start="0" size="29" name="DIRNOTP" description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="DMIC0" start="0x40090000" description="LPC5411x DMIC Subsystem (DMIC))">
    <Register start="+0" size="4" name="OSR0" access="Read/Write" description="Oversample Rate register 0" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="OSR" description="Selects the oversample rate for the related input channel." />
    </Register>
    <Register start="+0x4" size="4" name="DIVHFCLK0" access="Read/Write" description="DMIC Clock Register 0" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="PDMDIV" description="PDM clock divider value. 0 = divide by 1 1 = divide by 2 2 = divide by 3 3 = divide by 4 4 = divide by 6 5 = divide by 8 6 = divide by 12 7 = divide by 16 8 = divide by 24 9 = divide by 32 10 = divide by 48 11 = divide by 64 12 = divide by 96 13 = divide by 128 others = reserved." />
    </Register>
    <Register start="+0x8" size="4" name="PREAC2FSCOEF0" access="Read/Write" description="Pre-Emphasis Filter Coefficient for 2 FS register" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="COMP" description="Pre-emphasis filer coefficient for 2 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13" />
    </Register>
    <Register start="+0xC" size="4" name="PREAC4FSCOEF0" access="Read/Write" description="Pre-Emphasis Filter Coefficient for 4 FS register" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="COMP" description="Pre-emphasis filer coefficient for 4 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13" />
    </Register>
    <Register start="+0x10" size="4" name="GAINSHIFT0" access="Read/Write" description="Decimator Gain Shift register" reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="6" name="GAIN" description="Gain control, as a positive or negative (two's complement) number of bits to shift." />
    </Register>
    <Register start="+0x80" size="4" name="FIFO_CTRL0" access="Read/Write" description="FIFO Control register 0" reset_value="0" reset_mask="0x1F000F">
      <BitField start="0" size="1" name="ENABLE" description="FIFO enable.">
        <Enum name="0" start="0b0" description="FIFO is not enabled. Enabling a DMIC channel with the FIFO disabled could be useful while data is being streamed to the I2S, or in order to avoid a filter settling delay when a channel is re-enabled after a period when the data was not needed." />
        <Enum name="1" start="0b1" description="FIFO is enabled. The FIFO must be enabled in order for the CPU or DMA to read data from the DMIC via the FIFODATA register." />
      </BitField>
      <BitField start="1" size="1" name="RESETN" description="FIFO reset.">
        <Enum name="0" start="0b0" description="Reset the FIFO." />
        <Enum name="1" start="0b1" description="Normal operation" />
      </BitField>
      <BitField start="2" size="1" name="INTEN" description="Interrupt enable.">
        <Enum name="0" start="0b0" description="FIFO level interrupts are not enabled." />
        <Enum name="1" start="0b1" description="FIFO level interrupts are enabled." />
      </BitField>
      <BitField start="3" size="1" name="DMAEN" description="DMA enable">
        <Enum name="0" start="0b0" description="DMA requests are not enabled." />
        <Enum name="1" start="0b1" description="DMA requests based on FIFO level are enabled." />
      </BitField>
      <BitField start="16" size="5" name="TRIGLVL" description="FIFO trigger level. Selects the data trigger level for interrupt or DMA operation. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode See Section 4.5.66 'Hardware Wake-up control register'. 0 = trigger when the FIFO has received one entry (is no longer empty). 1 = trigger when the FIFO has received two entries. 15 = trigger when the FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0x84" size="4" name="FIFO_STATUS0" access="Read/Write" description="FIFO Status register 0" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INT" description="Interrupt flag. Asserted when FIFO data reaches the level specified in the FIFOCTRL register. Writing a one to this bit clears the flag. Remark: note that the bus clock to the DMIC subsystem must be running in order for an interrupt to occur." />
      <BitField start="1" size="1" name="OVERRUN" description="Overrun flag. Indicates that a FIFO overflow has occurred at some point. Writing a one to this bit clears the flag. This flag does not cause an interrupt." />
      <BitField start="2" size="1" name="UNDERRUN" description="Underrun flag. Indicates that a FIFO underflow has occurred at some point. Writing a one to this bit clears the flag." />
    </Register>
    <Register start="+0x88" size="4" name="FIFO_DATA0" access="Read/Write" description="FIFO Data Register 0" reset_value="0" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="DATA" description="Data from the top of the input filter FIFO." />
    </Register>
    <Register start="+0x8C" size="4" name="PHY_CTRL0" access="Read/Write" description="PDM Source Configuration register 0" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="PHY_FALL" description="Capture PDM_DATA">
        <Enum name="0" start="0b0" description="Capture PDM_DATA on the rising edge of PDM_CLK." />
        <Enum name="1" start="0b1" description="Capture PDM_DATA on the falling edge of PDM_CLK." />
      </BitField>
      <BitField start="1" size="1" name="PHY_HALF" description="Half rate sampling">
        <Enum name="0" start="0b0" description="Standard half rate sampling. The clock to the DMIC is sent at the same rate as the decimator is providing." />
        <Enum name="1" start="0b1" description="Use half rate sampling. The clock to the DMIC is sent at half the rate as the decimator is providing." />
      </BitField>
    </Register>
    <Register start="+0x90" size="4" name="DC_CTRL0" access="Read/Write" description="DC Control register 0" reset_value="0" reset_mask="0x1F3">
      <BitField start="0" size="2" name="DCPOLE" description="DC block filter">
        <Enum name="0" start="0b00" description="Flat response, no filter." />
        <Enum name="1" start="0b01" description="155 Hz." />
        <Enum name="10" start="0b10" description="78 Hz." />
        <Enum name="11" start="0b11" description="39 Hz" />
      </BitField>
      <BitField start="4" size="4" name="DCGAIN" description="Fine gain adjustment in the form of a number of bits to downshift." />
      <BitField start="8" size="1" name="SATURATEAT16BIT" description="Selects 16-bit saturation.">
        <Enum name="0" start="0b0" description="Results roll over if out range and do not saturate." />
        <Enum name="1" start="0b1" description="If the result overflows, it saturates at 0xFFFF for positive overflow and 0x8000 for negative overflow." />
      </BitField>
    </Register>
    <Register start="+0x100" size="4" name="OSR1" access="Read/Write" description="Oversample Rate register 0" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="OSR" description="Selects the oversample rate for the related input channel." />
    </Register>
    <Register start="+0x104" size="4" name="DIVHFCLK1" access="Read/Write" description="DMIC Clock Register 0" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="PDMDIV" description="PDM clock divider value. 0 = divide by 1 1 = divide by 2 2 = divide by 3 3 = divide by 4 4 = divide by 6 5 = divide by 8 6 = divide by 12 7 = divide by 16 8 = divide by 24 9 = divide by 32 10 = divide by 48 11 = divide by 64 12 = divide by 96 13 = divide by 128 others = reserved." />
    </Register>
    <Register start="+0x108" size="4" name="PREAC2FSCOEF1" access="Read/Write" description="Pre-Emphasis Filter Coefficient for 2 FS register" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="COMP" description="Pre-emphasis filer coefficient for 2 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13" />
    </Register>
    <Register start="+0x10C" size="4" name="PREAC4FSCOEF1" access="Read/Write" description="Pre-Emphasis Filter Coefficient for 4 FS register" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="COMP" description="Pre-emphasis filer coefficient for 4 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13" />
    </Register>
    <Register start="+0x110" size="4" name="GAINSHIFT1" access="Read/Write" description="Decimator Gain Shift register" reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="6" name="GAIN" description="Gain control, as a positive or negative (two's complement) number of bits to shift." />
    </Register>
    <Register start="+0x180" size="4" name="FIFO_CTRL1" access="Read/Write" description="FIFO Control register 0" reset_value="0" reset_mask="0x1F000F">
      <BitField start="0" size="1" name="ENABLE" description="FIFO enable.">
        <Enum name="0" start="0b0" description="FIFO is not enabled. Enabling a DMIC channel with the FIFO disabled could be useful while data is being streamed to the I2S, or in order to avoid a filter settling delay when a channel is re-enabled after a period when the data was not needed." />
        <Enum name="1" start="0b1" description="FIFO is enabled. The FIFO must be enabled in order for the CPU or DMA to read data from the DMIC via the FIFODATA register." />
      </BitField>
      <BitField start="1" size="1" name="RESETN" description="FIFO reset.">
        <Enum name="0" start="0b0" description="Reset the FIFO." />
        <Enum name="1" start="0b1" description="Normal operation" />
      </BitField>
      <BitField start="2" size="1" name="INTEN" description="Interrupt enable.">
        <Enum name="0" start="0b0" description="FIFO level interrupts are not enabled." />
        <Enum name="1" start="0b1" description="FIFO level interrupts are enabled." />
      </BitField>
      <BitField start="3" size="1" name="DMAEN" description="DMA enable">
        <Enum name="0" start="0b0" description="DMA requests are not enabled." />
        <Enum name="1" start="0b1" description="DMA requests based on FIFO level are enabled." />
      </BitField>
      <BitField start="16" size="5" name="TRIGLVL" description="FIFO trigger level. Selects the data trigger level for interrupt or DMA operation. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode See Section 4.5.66 'Hardware Wake-up control register'. 0 = trigger when the FIFO has received one entry (is no longer empty). 1 = trigger when the FIFO has received two entries. 15 = trigger when the FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0x184" size="4" name="FIFO_STATUS1" access="Read/Write" description="FIFO Status register 0" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="INT" description="Interrupt flag. Asserted when FIFO data reaches the level specified in the FIFOCTRL register. Writing a one to this bit clears the flag. Remark: note that the bus clock to the DMIC subsystem must be running in order for an interrupt to occur." />
      <BitField start="1" size="1" name="OVERRUN" description="Overrun flag. Indicates that a FIFO overflow has occurred at some point. Writing a one to this bit clears the flag. This flag does not cause an interrupt." />
      <BitField start="2" size="1" name="UNDERRUN" description="Underrun flag. Indicates that a FIFO underflow has occurred at some point. Writing a one to this bit clears the flag." />
    </Register>
    <Register start="+0x188" size="4" name="FIFO_DATA1" access="Read/Write" description="FIFO Data Register 0" reset_value="0" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="DATA" description="Data from the top of the input filter FIFO." />
    </Register>
    <Register start="+0x18C" size="4" name="PHY_CTRL1" access="Read/Write" description="PDM Source Configuration register 0" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="PHY_FALL" description="Capture PDM_DATA">
        <Enum name="0" start="0b0" description="Capture PDM_DATA on the rising edge of PDM_CLK." />
        <Enum name="1" start="0b1" description="Capture PDM_DATA on the falling edge of PDM_CLK." />
      </BitField>
      <BitField start="1" size="1" name="PHY_HALF" description="Half rate sampling">
        <Enum name="0" start="0b0" description="Standard half rate sampling. The clock to the DMIC is sent at the same rate as the decimator is providing." />
        <Enum name="1" start="0b1" description="Use half rate sampling. The clock to the DMIC is sent at half the rate as the decimator is providing." />
      </BitField>
    </Register>
    <Register start="+0x190" size="4" name="DC_CTRL1" access="Read/Write" description="DC Control register 0" reset_value="0" reset_mask="0x1F3">
      <BitField start="0" size="2" name="DCPOLE" description="DC block filter">
        <Enum name="0" start="0b00" description="Flat response, no filter." />
        <Enum name="1" start="0b01" description="155 Hz." />
        <Enum name="10" start="0b10" description="78 Hz." />
        <Enum name="11" start="0b11" description="39 Hz" />
      </BitField>
      <BitField start="4" size="4" name="DCGAIN" description="Fine gain adjustment in the form of a number of bits to downshift." />
      <BitField start="8" size="1" name="SATURATEAT16BIT" description="Selects 16-bit saturation.">
        <Enum name="0" start="0b0" description="Results roll over if out range and do not saturate." />
        <Enum name="1" start="0b1" description="If the result overflows, it saturates at 0xFFFF for positive overflow and 0x8000 for negative overflow." />
      </BitField>
    </Register>
    <Register start="+0xF00" size="4" name="CHANEN" access="Read/Write" description="Channel Enable register" reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="EN_CH0" description="Enable channel 0. When 1, PDM channel 0 is enabled." />
      <BitField start="1" size="1" name="EN_CH1" description="Enable channel 1. When 1, PDM channel 1 is enabled." />
    </Register>
    <Register start="+0xF0C" size="4" name="IOCFG" access="Read/Write" description="I/O Configuration register" reset_value="0" reset_mask="0x7">
      <BitField start="0" size="1" name="CLK_BYPASS0" description="Bypass CLK0. When 1, PDM_DATA1 becomes the clock for PDM channel 0. This provides for the possibility of an external codec taking over the PDM bus." />
      <BitField start="1" size="1" name="CLK_BYPASS1" description="Bypass CLK1. When 1, PDM_DATA1 becomes the clock for PDM channel 1. This provides for the possibility of an external codec taking over the PDM bus." />
      <BitField start="2" size="1" name="STEREO_DATA0" description="Stereo PDM select. When 1, PDM_DATA0 is routed to both PDM channels in a configuration that supports a single stereo digital microphone." />
    </Register>
    <Register start="+0xF10" size="4" name="USE2FS" access="Read/Write" description="Use 2FS register" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="USE2FS" description="Use 2FS register">
        <Enum name="0" start="0b0" description="Use 1FS output for PCM data." />
        <Enum name="1" start="0b1" description="Use 2FS output for PCM data." />
      </BitField>
    </Register>
    <Register start="+0xF80" size="4" name="HWVADGAIN" access="Read/Write" description="HWVAD input gain register" reset_value="0x5" reset_mask="0xF">
      <BitField start="0" size="4" name="INPUTGAIN" description="Shift value for input bits 0x00 -10 bits 0x01 -8 bits 0x02 -6 bits 0x03 -4 bits 0x04 -2 bits 0x05 0 bits (default) 0x06 +2 bits 0x07 +4 bits 0x08 +6 bits 0x09 +8 bits 0x0A +10 bits 0x0B +12 bits 0x0C +14 bits 0x0D to 0x0F Reserved." />
    </Register>
    <Register start="+0xF84" size="4" name="HWVADHPFS" access="Read/Write" description="HWVAD filter control register" reset_value="0x1" reset_mask="0x3">
      <BitField start="0" size="2" name="HPFS" description="High pass filter">
        <Enum name="0" start="0b00" description="First filter by-pass." />
        <Enum name="1" start="0b01" description="High pass filter with -3dB cut-off at 1750Hz." />
        <Enum name="10" start="0b10" description="High pass filter with -3dB cut-off at 215Hz." />
      </BitField>
    </Register>
    <Register start="+0xF88" size="4" name="HWVADST10" access="Read/Write" description="HWVAD control register" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="ST10" description="Stage 0">
        <Enum name="0" start="0b0" description="Normal operation, waiting for HWVAD trigger event (stage 0)." />
        <Enum name="1" start="0b1" description="Reset internal interrupt flag by writing a '1' pulse." />
      </BitField>
    </Register>
    <Register start="+0xF8C" size="4" name="HWVADRSTT" access="Read/Write" description="HWVAD filter reset register" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="RSTT" description="Writing a 1 resets all filter values" />
    </Register>
    <Register start="+0xF90" size="4" name="HWVADTHGN" access="Read/Write" description="HWVAD noise estimator gain register" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="4" name="THGN" description="Gain value for the noise estimator. Values 0 to 14. 0 corresponds to a gain of 1." />
    </Register>
    <Register start="+0xF94" size="4" name="HWVADTHGS" access="Read/Write" description="HWVAD signal estimator gain register" reset_value="0x4" reset_mask="0xF">
      <BitField start="0" size="4" name="THGS" description="Gain value for the signal estimator. Values 0 to 14. 0 corresponds to a gain of 1." />
    </Register>
    <Register start="+0xF98" size="4" name="HWVADLOWZ" access="ReadOnly" description="HWVAD noise envelope estimator register" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="LOWZ" description="Noise envelope estimator value." />
    </Register>
    <Register start="+0xFFC" size="4" name="ID" access="ReadOnly" description="Module Identification register" reset_value="0x2" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ID" description="Indicates module ID and the number of channels in this DMIC interface." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USBHSD" start="0x40094000" description="LPC54S60x/LPC5460x USB1 High-speed Device Controller">
    <Register start="+0" size="4" name="DEVCMDSTAT" access="Read/Write" description="USB Device Command/Status register" reset_value="0x800" reset_mask="0xF7DBFFFF">
      <BitField start="0" size="7" name="DEV_ADDR" description="USB device address." />
      <BitField start="7" size="1" name="DEV_EN" description="USB device enable." />
      <BitField start="8" size="1" name="SETUP" description="SETUP token received." />
      <BitField start="9" size="1" name="FORCE_NEEDCLK" description="Forces the NEEDCLK output to always be on:." />
      <BitField start="10" size="1" name="FORCE_VBUS" description="If this bit is set to 1, the VBUS voltage indicators from the PHY are overruled." />
      <BitField start="11" size="1" name="LPM_SUP" description="LPM Supported:." />
      <BitField start="12" size="1" name="INTONNAK_AO" description="Interrupt on NAK for interrupt and bulk OUT EP:." />
      <BitField start="13" size="1" name="INTONNAK_AI" description="Interrupt on NAK for interrupt and bulk IN EP:." />
      <BitField start="14" size="1" name="INTONNAK_CO" description="Interrupt on NAK for control OUT EP:." />
      <BitField start="15" size="1" name="INTONNAK_CI" description="Interrupt on NAK for control IN EP:." />
      <BitField start="16" size="1" name="DCON" description="Device status - connect." />
      <BitField start="17" size="1" name="DSUS" description="Device status - suspend." />
      <BitField start="19" size="1" name="LPM_SUS" description="Device status - LPM Suspend." />
      <BitField start="20" size="1" name="LPM_REWP" description="LPM Remote Wake-up Enabled by USB host." />
      <BitField start="22" size="2" name="Speed" description="This field indicates the speed at which the device operates: 00b: reserved 01b: full-speed 10b: high-speed 11b: super-speed (reserved for future use)." />
      <BitField start="24" size="1" name="DCON_C" description="Device status - connect change." />
      <BitField start="25" size="1" name="DSUS_C" description="Device status - suspend change." />
      <BitField start="26" size="1" name="DRES_C" description="Device status - reset change." />
      <BitField start="28" size="1" name="VBUS_DEBOUNCED" description="This bit indicates if VBUS is detected or not." />
      <BitField start="29" size="3" name="PHY_TEST_MODE" description="This field is written by firmware to put the PHY into a test mode as defined by the USB2." />
    </Register>
    <Register start="+0x4" size="4" name="INFO" access="ReadOnly" description="USB Info register" reset_value="0x2000000" reset_mask="0xFFFF7FFF">
      <BitField start="0" size="11" name="FRAME_NR" description="Frame number." />
      <BitField start="11" size="4" name="ERR_CODE" description="The error code which last occurred:." />
      <BitField start="16" size="8" name="Minrev" description="Minor revision." />
      <BitField start="24" size="8" name="Majrev" description="Major revision." />
    </Register>
    <Register start="+0x8" size="4" name="EPLISTSTART" access="Read/Write" description="USB EP Command/Status List start address" reset_value="0" reset_mask="0xFFFFFF00">
      <BitField start="8" size="12" name="EP_LIST_PRG" description="Programmable portion of the USB EP Command/Status List address." />
      <BitField start="20" size="12" name="EP_LIST_FIXED" description="Fixed portion of USB EP Command/Status List address." />
    </Register>
    <Register start="+0xC" size="4" name="DATABUFSTART" access="ReadOnly" description="USB Data buffer start address" reset_value="0x41000000" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DA_BUF" description="Start address of the memory page where all endpoint data buffers are located." />
    </Register>
    <Register start="+0x10" size="4" name="LPM" access="Read/Write" description="USB Link Power Management register" reset_value="0" reset_mask="0x1FF">
      <BitField start="0" size="4" name="HIRD_HW" description="Host Initiated Resume Duration - HW." />
      <BitField start="4" size="4" name="HIRD_SW" description="Host Initiated Resume Duration - SW." />
      <BitField start="8" size="1" name="DATA_PENDING" description="As long as this bit is set to one and LPM supported bit is set to one, HW will return a NYET handshake on every LPM token it receives." />
    </Register>
    <Register start="+0x14" size="4" name="EPSKIP" access="Read/Write" description="USB Endpoint skip" reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="12" name="SKIP" description="Endpoint skip: Writing 1 to one of these bits, will indicate to HW that it must deactivate the buffer assigned to this endpoint and return control back to software." />
    </Register>
    <Register start="+0x18" size="4" name="EPINUSE" access="Read/Write" description="USB Endpoint Buffer in use" reset_value="0" reset_mask="0xFFC">
      <BitField start="2" size="10" name="BUF" description="Buffer in use: This register has one bit per physical endpoint." />
    </Register>
    <Register start="+0x1C" size="4" name="EPBUFCFG" access="Read/Write" description="USB Endpoint Buffer Configuration register" reset_value="0" reset_mask="0xFFC">
      <BitField start="2" size="10" name="BUF_SB" description="Buffer usage: This register has one bit per physical endpoint." />
    </Register>
    <Register start="+0x20" size="4" name="INTSTAT" access="Read/Write" description="USB interrupt status register" reset_value="0" reset_mask="0xC0000FFF">
      <BitField start="0" size="1" name="EP0OUT" description="Interrupt status register bit for the Control EP0 OUT direction." />
      <BitField start="1" size="1" name="EP0IN" description="Interrupt status register bit for the Control EP0 IN direction." />
      <BitField start="2" size="1" name="EP1OUT" description="Interrupt status register bit for the EP1 OUT direction." />
      <BitField start="3" size="1" name="EP1IN" description="Interrupt status register bit for the EP1 IN direction." />
      <BitField start="4" size="1" name="EP2OUT" description="Interrupt status register bit for the EP2 OUT direction." />
      <BitField start="5" size="1" name="EP2IN" description="Interrupt status register bit for the EP2 IN direction." />
      <BitField start="6" size="1" name="EP3OUT" description="Interrupt status register bit for the EP3 OUT direction." />
      <BitField start="7" size="1" name="EP3IN" description="Interrupt status register bit for the EP3 IN direction." />
      <BitField start="8" size="1" name="EP4OUT" description="Interrupt status register bit for the EP4 OUT direction." />
      <BitField start="9" size="1" name="EP4IN" description="Interrupt status register bit for the EP4 IN direction." />
      <BitField start="10" size="1" name="EP5OUT" description="Interrupt status register bit for the EP5 OUT direction." />
      <BitField start="11" size="1" name="EP5IN" description="Interrupt status register bit for the EP5 IN direction." />
      <BitField start="30" size="1" name="FRAME_INT" description="Frame interrupt." />
      <BitField start="31" size="1" name="DEV_INT" description="Device status interrupt." />
    </Register>
    <Register start="+0x24" size="4" name="INTEN" access="Read/Write" description="USB interrupt enable register" reset_value="0" reset_mask="0xC0000FFF">
      <BitField start="0" size="12" name="EP_INT_EN" description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line." />
      <BitField start="30" size="1" name="FRAME_INT_EN" description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line." />
      <BitField start="31" size="1" name="DEV_INT_EN" description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line." />
    </Register>
    <Register start="+0x28" size="4" name="INTSETSTAT" access="Read/Write" description="USB set interrupt status register" reset_value="0" reset_mask="0xC0000FFF">
      <BitField start="0" size="12" name="EP_SET_INT" description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set." />
      <BitField start="30" size="1" name="FRAME_SET_INT" description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set." />
      <BitField start="31" size="1" name="DEV_SET_INT" description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set." />
    </Register>
    <Register start="+0x34" size="4" name="EPTOGGLE" access="ReadOnly" description="USB Endpoint toggle register" reset_value="0" reset_mask="0x3FFFFFFF">
      <BitField start="0" size="30" name="TOGGLE" description="Endpoint data toggle: This field indicates the current value of the data toggle for the corresponding endpoint." />
    </Register>
    <Register start="+0x3C" size="4" name="ULPIDEBUG" access="Read/Write" description="UTMI/ULPI debug register" reset_value="0" reset_mask="0x83FFFFFF">
      <BitField start="0" size="8" name="PHY_ADDR" description="ULPI mode: Bits 7:0 are used as the address when doing a register access over the ULPI interface." />
      <BitField start="8" size="8" name="PHY_WDATA" description="UTMI+ mode: Reserved." />
      <BitField start="16" size="8" name="PHY_RDATA" description="UTMI+ mode: Bits 7:0 contains the value returned by the VStatus signal on Vendor Interface of UTMI+." />
      <BitField start="24" size="1" name="PHY_RW" description="UTMI+ mode: Reserved." />
      <BitField start="25" size="1" name="PHY_ACCESS" description="Software writes this bit to one to start a read or write operation." />
      <BitField start="31" size="1" name="PHY_MODE" description="This bit indicates if the interface between the controller is UTMI+ or ULPI." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="CRC_ENGINE" start="0x40095000" description="LPC5411x CRC engine">
    <Register start="+0" size="4" name="MODE" access="Read/Write" description="CRC mode register" reset_value="0" reset_mask="0x3F">
      <BitField start="0" size="2" name="CRC_POLY" description="CRC polynomial: 1X = CRC-32 polynomial 01 = CRC-16 polynomial 00 = CRC-CCITT polynomial" />
      <BitField start="2" size="1" name="BIT_RVS_WR" description="Data bit order: 1 = Bit order reverse for CRC_WR_DATA (per byte) 0 = No bit order reverse for CRC_WR_DATA (per byte)" />
      <BitField start="3" size="1" name="CMPL_WR" description="Data complement: 1 = 1's complement for CRC_WR_DATA 0 = No 1's complement for CRC_WR_DATA" />
      <BitField start="4" size="1" name="BIT_RVS_SUM" description="CRC sum bit order: 1 = Bit order reverse for CRC_SUM 0 = No bit order reverse for CRC_SUM" />
      <BitField start="5" size="1" name="CMPL_SUM" description="CRC sum complement: 1 = 1's complement for CRC_SUM 0 = No 1's complement for CRC_SUM" />
    </Register>
    <Register start="+0x4" size="4" name="SEED" access="Read/Write" description="CRC seed register" reset_value="0xFFFF" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CRC_SEED" description="A write access to this register will load CRC seed value to CRC_SUM register with selected bit order and 1's complement pre-processes. A write access to this register will overrule the CRC calculation in progresses." />
    </Register>
    <Register start="+0x8" size="4" name="SUM" access="ReadOnly" description="CRC checksum register" reset_value="0xFFFF" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CRC_SUM" description="The most recent CRC sum can be read through this register with selected bit order and 1's complement post-processes." />
    </Register>
    <Register start="+0x8" size="4" name="WR_DATA" access="WriteOnly" description="CRC data register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CRC_WR_DATA" description="Data written to this register will be taken to perform CRC calculation with selected bit order and 1's complement pre-process. Any write size 8, 16 or 32-bit are allowed and accept back-to-back transactions." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2S0" start="0x40097000" description="LPC5411x I2S interface">
    <Register start="+0x20" size="4" name="PCFG11" access="Read/Write" description="Configuration register 1 for channel pair" reset_value="0" reset_mask="0x401">
      <BitField start="0" size="1" name="PAIRENABLE" description="Enable for this channel pair.." />
      <BitField start="10" size="1" name="ONECHANNEL" description="Single channel mode." />
    </Register>
    <Register start="+0x24" size="4" name="PCFG21" access="Read/Write" description="Configuration register 2 for channel pair" reset_value="0" reset_mask="0x1FF0000">
      <BitField start="16" size="9" name="POSITION" description="Data Position." />
    </Register>
    <Register start="+0x28" size="4" name="PSTAT1" access="Read/Write" description="Status register for channel pair" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="BUSY" description="Busy status for this channel pair." />
      <BitField start="1" size="1" name="SLVFRMERR" description="Save Frame Error flag." />
      <BitField start="2" size="1" name="LR" description="Left/Right indication." />
      <BitField start="3" size="1" name="DATAPAUSED" description="Data Paused status flag." />
    </Register>
    <Register start="+0x40" size="4" name="PCFG12" access="Read/Write" description="Configuration register 1 for channel pair" reset_value="0" reset_mask="0x401">
      <BitField start="0" size="1" name="PAIRENABLE" description="Enable for this channel pair.." />
      <BitField start="10" size="1" name="ONECHANNEL" description="Single channel mode." />
    </Register>
    <Register start="+0x44" size="4" name="PCFG22" access="Read/Write" description="Configuration register 2 for channel pair" reset_value="0" reset_mask="0x1FF0000">
      <BitField start="16" size="9" name="POSITION" description="Data Position." />
    </Register>
    <Register start="+0x48" size="4" name="PSTAT2" access="Read/Write" description="Status register for channel pair" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="BUSY" description="Busy status for this channel pair." />
      <BitField start="1" size="1" name="SLVFRMERR" description="Save Frame Error flag." />
      <BitField start="2" size="1" name="LR" description="Left/Right indication." />
      <BitField start="3" size="1" name="DATAPAUSED" description="Data Paused status flag." />
    </Register>
    <Register start="+0x60" size="4" name="PCFG13" access="Read/Write" description="Configuration register 1 for channel pair" reset_value="0" reset_mask="0x401">
      <BitField start="0" size="1" name="PAIRENABLE" description="Enable for this channel pair.." />
      <BitField start="10" size="1" name="ONECHANNEL" description="Single channel mode." />
    </Register>
    <Register start="+0x64" size="4" name="PCFG23" access="Read/Write" description="Configuration register 2 for channel pair" reset_value="0" reset_mask="0x1FF0000">
      <BitField start="16" size="9" name="POSITION" description="Data Position." />
    </Register>
    <Register start="+0x68" size="4" name="PSTAT3" access="Read/Write" description="Status register for channel pair" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="BUSY" description="Busy status for this channel pair." />
      <BitField start="1" size="1" name="SLVFRMERR" description="Save Frame Error flag." />
      <BitField start="2" size="1" name="LR" description="Left/Right indication." />
      <BitField start="3" size="1" name="DATAPAUSED" description="Data Paused status flag." />
    </Register>
    <Register start="+0xC00" size="4" name="CFG1" access="Read/Write" description="Configuration register 1 for the primary channel pair." reset_value="0" reset_mask="0x1F3FFF">
      <BitField start="0" size="1" name="MAINENABLE" description="Main enable for I 2S function in this Flexcomm">
        <Enum name="0" start="0b0" description="All I 2S channel pairs in this Flexcomm are disabled and the internal state machines, counters, and flags are reset. No other channel pairs can be enabled." />
        <Enum name="1" start="0b1" description="This I 2S channel pair is enabled. Other channel pairs in this Flexcomm may be enabled in their individual PAIRENABLE bits." />
      </BitField>
      <BitField start="1" size="1" name="DATAPAUSE" description="Data flow Pause. Allows pausing data flow between the I2S serializer/deserializer and the FIFO. This could be done in order to change streams, or while restarting after a data underflow or overflow. When paused, FIFO operations can be done without corrupting data that is in the process of being sent or received. Once a data pause has been requested, the interface may need to complete sending data that was in progress before interrupting the flow of data. Software must check that the pause is actually in effect before taking action. This is done by monitoring the DATAPAUSED flag in the STAT register. When DATAPAUSE is cleared, data transfer will resume at the beginning of the next frame.">
        <Enum name="0" start="0b0" description="Normal operation, or resuming normal operation at the next frame if the I2S has already been paused." />
        <Enum name="1" start="0b1" description="A pause in the data flow is being requested. It is in effect when DATAPAUSED in STAT = 1." />
      </BitField>
      <BitField start="2" size="2" name="PAIRCOUNT" description="Provides the number of I2S channel pairs in this Flexcomm This is a read-only field whose value may be different in other Flexcomms. 00 = there is 1 I2S channel pair in this Flexcomm. 01 = there are 2 I2S channel pairs in this Flexcomm. 10 = there are 3 I2S channel pairs in this Flexcomm. 11 = there are 4 I2S channel pairs in this Flexcomm.">
        <Enum name="0" start="0b00" description="1 I2S channel pairs in this flexcomm" />
        <Enum name="1" start="0b01" description="2 I2S channel pairs in this flexcomm" />
        <Enum name="10" start="0b10" description="3 I2S channel pairs in this flexcomm" />
        <Enum name="11" start="0b11" description="4 I2S channel pairs in this flexcomm" />
      </BitField>
      <BitField start="4" size="2" name="MSTSLVCFG" description="Master / slave configuration selection, determining how SCK and WS are used by all channel pairs in this Flexcomm.">
        <Enum name="0" start="0b00" description="Normal slave mode, the default mode. SCK and WS are received from a master and used to transmit or receive data." />
        <Enum name="1" start="0b01" description="WS synchronized master. WS is received from another master and used to synchronize the generation of SCK, when divided from the Flexcomm function clock." />
        <Enum name="10" start="0b10" description="Master using an existing SCK. SCK is received and used directly to generate WS, as well as transmitting or receiving data." />
        <Enum name="11" start="0b11" description="Normal master mode. SCK and WS are generated so they can be sent to one or more slave devices." />
      </BitField>
      <BitField start="6" size="2" name="MODE" description="Selects the basic I2S operating mode. Other configurations modify this to obtain all supported cases. See Formats and modes for examples.">
        <Enum name="0" start="0b00" description="I2S mode a.k.a. 'classic' mode. WS has a 50% duty cycle, with (for each enabled channel pair) one piece of left channel data occurring during the first phase, and one pieces of right channel data occurring during the second phase. In this mode, the data region begins one clock after the leading WS edge for the frame. For a 50% WS duty cycle, FRAMELEN must define an even number of I2S clocks for the frame. If FRAMELEN defines an odd number of clocks per frame, the extra clock will occur on the right." />
        <Enum name="1" start="0b01" description="DSP mode where WS has a 50% duty cycle. See remark for mode 0." />
        <Enum name="10" start="0b10" description="DSP mode where WS has a one clock long pulse at the beginning of each data frame." />
        <Enum name="11" start="0b11" description="DSP mode where WS has a one data slot long pulse at the beginning of each data frame." />
      </BitField>
      <BitField start="8" size="1" name="RIGHTLOW" description="Right channel data is in the Low portion of FIFO data. Essentially, this swaps left and right channel data as it is transferred to or from the FIFO. This bit is not used if the data width is greater than 24 bits or if PDMDATA = 1. Note that if the ONECHANNEL field (bit 10 of this register) = 1, the one channel to be used is the nominally the left channel. POSITION can still place that data in the frame where right channel data is normally located. if all enabled channel pairs have ONECHANNEL = 1, then RIGHTLOW = 1 is not allowed.">
        <Enum name="0" start="0b0" description="The right channel is taken from the high part of the FIFO data. For example, when data is 16 bits, FIFO bits 31:16 are used for the right channel." />
        <Enum name="1" start="0b1" description="The right channel is taken from the low part of the FIFO data. For example, when data is 16 bits, FIFO bits 15:0 are used for the right channel." />
      </BitField>
      <BitField start="9" size="1" name="LEFTJUST" description="Left Justify data.">
        <Enum name="0" start="0b0" description="Data is transferred between the FIFO and the I2S serializer/deserializer right justified, i.e. starting from bit 0 and continuing to the position defined by DATALEN. This would correspond to right justified data in the stream on the data bus." />
        <Enum name="1" start="0b1" description="Data is transferred between the FIFO and the I2S serializer/deserializer left justified, i.e. starting from the MSB of the FIFO entry and continuing for the number of bits defined by DATALEN. This would correspond to left justified data in the stream on the data bus." />
      </BitField>
      <BitField start="10" size="1" name="ONECHANNEL" description="Single channel mode. Applies to both transmit and receive. This configuration bit applies only to the first I2S channel pair. Other channel pairs may select this mode independently in their separate CFG1 registers.">
        <Enum name="0" start="0b0" description="I2S data for this channel pair is treated as left and right channels." />
        <Enum name="1" start="0b1" description="I2S data for this channel pair is treated as a single channel, functionally the left channel for this pair. In mode 0 only, the right side of the frame begins at POSITION = 0x100. This is because mode 0 makes a clear distinction between the left and right sides of the frame. When ONECHANNEL = 1, the single channel of data may be placed on the right by setting POSITION to 0x100 + the data position within the right side (e.g. 0x108 would place data starting at the 8th clock after the middle of the frame). In other modes, data for the single channel of data is placed at the clock defined by POSITION." />
      </BitField>
      <BitField start="11" size="1" name="PDMDATA" description="PDM Data selection. This bit controls the data source for I2S transmit, and cannot be set in Rx mode. This bit only has an effect if the device the Flexcomm resides in includes a D-Mic subsystem. For the LPC5411x, this bit applies only to Flexcomm 7.">
        <Enum name="0" start="0b0" description="Normal operation, data is transferred to or from the Flexcomm FIFO." />
        <Enum name="1" start="0b1" description="The data source is the D-Mic subsystem. When PDMDATA = 1, only the primary channel pair can be used in this Flexcomm. If ONECHANNEL = 1, only the PDM left data is used. the WS rate must match the Fs (sample rate) of the D-Mic decimator. A rate mismatch will at some point cause the I2S to overrun or underrun." />
      </BitField>
      <BitField start="12" size="1" name="SCK_POL" description="SCK polarity.">
        <Enum name="0" start="0b0" description="Data is launched on SCK falling edges and sampled on SCK rising edges (standard for I2S)." />
        <Enum name="1" start="0b1" description="Data is launched on SCK rising edges and sampled on SCK falling edges." />
      </BitField>
      <BitField start="13" size="1" name="WS_POL" description="WS polarity.">
        <Enum name="0" start="0b0" description="Data frames begin at a falling edge of WS (standard for classic I2S)." />
        <Enum name="1" start="0b1" description="WS is inverted, resulting in a data frame beginning at a rising edge of WS (standard for most 'non-classic' variations of I2S)." />
      </BitField>
      <BitField start="16" size="5" name="DATALEN" description="Data Length, minus 1 encoded, defines the number of data bits to be transmitted or received for all I2S channel pairs in this Flexcomm. Note that data is only driven to or received from SDA for the number of bits defined by DATALEN. DATALEN is also used in these ways by the I2S: Determines the size of data transfers between the FIFO and the I2S serializer/deserializer. See FIFO buffer configurations and usage In mode 1, 2, and 3, determines the location of right data following left data in the frame. In mode 3 (where WS has a one data slot long pulse at the beginning of each data frame) determines the duration of the WS pulse. Values: 0x00 to 0x02 = not supported 0x03 = data is 4 bits in length 0x04 = data is 5 bits in length 0x1F = data is 32 bits in length" />
    </Register>
    <Register start="+0xC04" size="4" name="CFG2" access="Read/Write" description="Configuration register 2 for the primary channel pair." reset_value="0" reset_mask="0x1FF01FF">
      <BitField start="0" size="9" name="FRAMELEN" description="Frame Length, minus 1 encoded, defines the number of clocks and data bits in the frames that this channel pair participates in. See Frame format. 0x000 to 0x002 = not supported 0x003 = frame is 4 bits in total length 0x004 = frame is 5 bits in total length 0x1FF = frame is 512 bits in total length if FRAMELEN is an defines an odd length frame (e.g. 33 clocks) in mode 0 or 1, the extra clock appears in the right half. When MODE = 3, FRAMELEN must be larger than DATALEN in order for the WS pulse to be generated correctly." />
      <BitField start="16" size="9" name="POSITION" description="Data Position. Defines the location within the frame of the data for this channel pair. POSITION + DATALEN must be less than FRAMELEN. See Frame format. When MODE = 0, POSITION defines the location of data in both the left phase and right phase, starting one clock after the WS edge. In other modes, POSITION defines the location of data within the entire frame. ONECHANNEL = 1 while MODE = 0 is a special case, see the description of ONECHANNEL. The combination of DATALEN and the POSITION fields of all channel pairs must be made such that the channels do not overlap within the frame. 0x000 = data begins at bit position 0 (the first bit position) within the frame or WS phase. 0x001 = data begins at bit position 1 within the frame or WS phase. 0x002 = data begins at bit position 2 within the frame or WS phase." />
    </Register>
    <Register start="+0xC08" size="4" name="STAT" access="Read/Write" description="Status register for the primary channel pair." reset_value="0" reset_mask="0xD">
      <BitField start="0" size="1" name="BUSY" description="Busy status for the primary channel pair. Other BUSY flags may be found in the STAT register for each channel pair.">
        <Enum name="0" start="0b0" description="The transmitter/receiver for channel pair is currently idle." />
        <Enum name="1" start="0b1" description="The transmitter/receiver for channel pair is currently processing data." />
      </BitField>
      <BitField start="1" size="1" name="SLVFRMERR" description="Slave Frame Error flag. This applies when at least one channel pair is operating as a slave. An error indicates that the incoming WS signal did not transition as expected due to a mismatch between FRAMELEN and the actual incoming I2S stream.">
        <Enum name="0" start="0b0" description="No error has been recorded." />
        <Enum name="1" start="0b1" description="An error has been recorded for some channel pair that is operating in slave mode. ERROR is cleared by writing a 1 to this bit position." />
      </BitField>
      <BitField start="2" size="1" name="LR" description="Left/Right indication. This flag is considered to be a debugging aid and is not expected to be used by an I2S driver. Valid when one channel pair is busy. Indicates left or right data being processed for the currently busy channel pair.">
        <Enum name="0" start="0b0" description="Left channel." />
        <Enum name="1" start="0b1" description="Right channel." />
      </BitField>
      <BitField start="3" size="1" name="DATAPAUSED" description="Data Paused status flag. Applies to all I2S channels">
        <Enum name="0" start="0b0" description="Data is not currently paused. A data pause may have been requested but is not yet in force, waiting for an allowed pause point. Refer to the description of the DATAPAUSE control bit in the CFG1 register." />
        <Enum name="1" start="0b1" description="A data pause has been requested and is now in force." />
      </BitField>
    </Register>
    <Register start="+0xC1C" size="4" name="DIV" access="Read/Write" description="Clock divider, used by all channel pairs." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="12" name="DIV" description="This field controls how this I2S block uses the Flexcomm function clock. 0x000 = The Flexcomm function clock is used directly. 0x001 = The Flexcomm function clock is divided by 2. 0x002 = The Flexcomm function clock is divided by 3. 0xFFF = The Flexcomm function clock is divided by 4,096." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="2" size="1" name="TXI2SE0" description="Transmit I2S empty 0. Determines the value sent by the I2S in transmit mode if the TX FIFO becomes empty. This value is sent repeatedly until the I2S is paused, the error is cleared, new data is provided, and the I2S is un-paused.">
        <Enum name="0" start="0b0" description="If the TX FIFO becomes empty, the last value is sent. This setting may be used when the data length is 24 bits or less, or when MONO = 1 for this channel pair." />
        <Enum name="1" start="0b1" description="If the TX FIFO becomes empty, 0 is sent. Use if the data length is greater than 24 bits or if zero fill is preferred." />
      </BitField>
      <BitField start="3" size="1" name="PACK48" description="Packing format for 48-bit data. This relates to how data is entered into or taken from the FIFO by software or DMA.">
        <Enum name="0" start="0b0" description="48-bit I2S FIFO entries are handled as all 24-bit values." />
        <Enum name="1" start="0b1" description="48-bit I2S FIFO entries are handled as alternating 32-bit and 16-bit values." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="WriteOnly" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="TXDATA" description="Transmit data to the FIFO. The number of bits used depends on configuration details." />
    </Register>
    <Register start="+0xE24" size="4" name="FIFOWR48H" access="WriteOnly" description="FIFO write data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA." reset_value="0" reset_mask="0">
      <BitField start="0" size="24" name="TXDATA" description="Transmit data to the FIFO. Whether this register is used and the number of bits used depends on configuration details." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on configuration details." />
    </Register>
    <Register start="+0xE34" size="4" name="FIFORD48H" access="ReadOnly" description="FIFO read data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA." reset_value="0" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="RXDATA" description="Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="RXDATA" description="Received data from the FIFO." />
    </Register>
    <Register start="+0xE44" size="4" name="FIFORD48HNOPOP" access="ReadOnly" description="FIFO data read for upper data bits with no FIFO pop. May only be used if the I2S is configured for 2x 24-bit data and not using DMA." reset_value="0" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="RXDATA" description="Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details." />
    </Register>
    <Register start="+0x1DFC" size="4" name="ID" access="ReadOnly" description="I2S Module identification" reset_value="0xE0900000" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="Aperture" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation, starting at 0." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation, starting at 0." />
      <BitField start="16" size="16" name="ID" description="Unique module identifier for this IP block." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="I2S1" start="0x40098000" description="LPC5411x I2S interface">
    <Register start="+0x20" size="4" name="PCFG11" access="Read/Write" description="Configuration register 1 for channel pair" reset_value="0" reset_mask="0x401">
      <BitField start="0" size="1" name="PAIRENABLE" description="Enable for this channel pair.." />
      <BitField start="10" size="1" name="ONECHANNEL" description="Single channel mode." />
    </Register>
    <Register start="+0x24" size="4" name="PCFG21" access="Read/Write" description="Configuration register 2 for channel pair" reset_value="0" reset_mask="0x1FF0000">
      <BitField start="16" size="9" name="POSITION" description="Data Position." />
    </Register>
    <Register start="+0x28" size="4" name="PSTAT1" access="Read/Write" description="Status register for channel pair" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="BUSY" description="Busy status for this channel pair." />
      <BitField start="1" size="1" name="SLVFRMERR" description="Save Frame Error flag." />
      <BitField start="2" size="1" name="LR" description="Left/Right indication." />
      <BitField start="3" size="1" name="DATAPAUSED" description="Data Paused status flag." />
    </Register>
    <Register start="+0x40" size="4" name="PCFG12" access="Read/Write" description="Configuration register 1 for channel pair" reset_value="0" reset_mask="0x401">
      <BitField start="0" size="1" name="PAIRENABLE" description="Enable for this channel pair.." />
      <BitField start="10" size="1" name="ONECHANNEL" description="Single channel mode." />
    </Register>
    <Register start="+0x44" size="4" name="PCFG22" access="Read/Write" description="Configuration register 2 for channel pair" reset_value="0" reset_mask="0x1FF0000">
      <BitField start="16" size="9" name="POSITION" description="Data Position." />
    </Register>
    <Register start="+0x48" size="4" name="PSTAT2" access="Read/Write" description="Status register for channel pair" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="BUSY" description="Busy status for this channel pair." />
      <BitField start="1" size="1" name="SLVFRMERR" description="Save Frame Error flag." />
      <BitField start="2" size="1" name="LR" description="Left/Right indication." />
      <BitField start="3" size="1" name="DATAPAUSED" description="Data Paused status flag." />
    </Register>
    <Register start="+0x60" size="4" name="PCFG13" access="Read/Write" description="Configuration register 1 for channel pair" reset_value="0" reset_mask="0x401">
      <BitField start="0" size="1" name="PAIRENABLE" description="Enable for this channel pair.." />
      <BitField start="10" size="1" name="ONECHANNEL" description="Single channel mode." />
    </Register>
    <Register start="+0x64" size="4" name="PCFG23" access="Read/Write" description="Configuration register 2 for channel pair" reset_value="0" reset_mask="0x1FF0000">
      <BitField start="16" size="9" name="POSITION" description="Data Position." />
    </Register>
    <Register start="+0x68" size="4" name="PSTAT3" access="Read/Write" description="Status register for channel pair" reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="BUSY" description="Busy status for this channel pair." />
      <BitField start="1" size="1" name="SLVFRMERR" description="Save Frame Error flag." />
      <BitField start="2" size="1" name="LR" description="Left/Right indication." />
      <BitField start="3" size="1" name="DATAPAUSED" description="Data Paused status flag." />
    </Register>
    <Register start="+0xC00" size="4" name="CFG1" access="Read/Write" description="Configuration register 1 for the primary channel pair." reset_value="0" reset_mask="0x1F3FFF">
      <BitField start="0" size="1" name="MAINENABLE" description="Main enable for I 2S function in this Flexcomm">
        <Enum name="0" start="0b0" description="All I 2S channel pairs in this Flexcomm are disabled and the internal state machines, counters, and flags are reset. No other channel pairs can be enabled." />
        <Enum name="1" start="0b1" description="This I 2S channel pair is enabled. Other channel pairs in this Flexcomm may be enabled in their individual PAIRENABLE bits." />
      </BitField>
      <BitField start="1" size="1" name="DATAPAUSE" description="Data flow Pause. Allows pausing data flow between the I2S serializer/deserializer and the FIFO. This could be done in order to change streams, or while restarting after a data underflow or overflow. When paused, FIFO operations can be done without corrupting data that is in the process of being sent or received. Once a data pause has been requested, the interface may need to complete sending data that was in progress before interrupting the flow of data. Software must check that the pause is actually in effect before taking action. This is done by monitoring the DATAPAUSED flag in the STAT register. When DATAPAUSE is cleared, data transfer will resume at the beginning of the next frame.">
        <Enum name="0" start="0b0" description="Normal operation, or resuming normal operation at the next frame if the I2S has already been paused." />
        <Enum name="1" start="0b1" description="A pause in the data flow is being requested. It is in effect when DATAPAUSED in STAT = 1." />
      </BitField>
      <BitField start="2" size="2" name="PAIRCOUNT" description="Provides the number of I2S channel pairs in this Flexcomm This is a read-only field whose value may be different in other Flexcomms. 00 = there is 1 I2S channel pair in this Flexcomm. 01 = there are 2 I2S channel pairs in this Flexcomm. 10 = there are 3 I2S channel pairs in this Flexcomm. 11 = there are 4 I2S channel pairs in this Flexcomm.">
        <Enum name="0" start="0b00" description="1 I2S channel pairs in this flexcomm" />
        <Enum name="1" start="0b01" description="2 I2S channel pairs in this flexcomm" />
        <Enum name="10" start="0b10" description="3 I2S channel pairs in this flexcomm" />
        <Enum name="11" start="0b11" description="4 I2S channel pairs in this flexcomm" />
      </BitField>
      <BitField start="4" size="2" name="MSTSLVCFG" description="Master / slave configuration selection, determining how SCK and WS are used by all channel pairs in this Flexcomm.">
        <Enum name="0" start="0b00" description="Normal slave mode, the default mode. SCK and WS are received from a master and used to transmit or receive data." />
        <Enum name="1" start="0b01" description="WS synchronized master. WS is received from another master and used to synchronize the generation of SCK, when divided from the Flexcomm function clock." />
        <Enum name="10" start="0b10" description="Master using an existing SCK. SCK is received and used directly to generate WS, as well as transmitting or receiving data." />
        <Enum name="11" start="0b11" description="Normal master mode. SCK and WS are generated so they can be sent to one or more slave devices." />
      </BitField>
      <BitField start="6" size="2" name="MODE" description="Selects the basic I2S operating mode. Other configurations modify this to obtain all supported cases. See Formats and modes for examples.">
        <Enum name="0" start="0b00" description="I2S mode a.k.a. 'classic' mode. WS has a 50% duty cycle, with (for each enabled channel pair) one piece of left channel data occurring during the first phase, and one pieces of right channel data occurring during the second phase. In this mode, the data region begins one clock after the leading WS edge for the frame. For a 50% WS duty cycle, FRAMELEN must define an even number of I2S clocks for the frame. If FRAMELEN defines an odd number of clocks per frame, the extra clock will occur on the right." />
        <Enum name="1" start="0b01" description="DSP mode where WS has a 50% duty cycle. See remark for mode 0." />
        <Enum name="10" start="0b10" description="DSP mode where WS has a one clock long pulse at the beginning of each data frame." />
        <Enum name="11" start="0b11" description="DSP mode where WS has a one data slot long pulse at the beginning of each data frame." />
      </BitField>
      <BitField start="8" size="1" name="RIGHTLOW" description="Right channel data is in the Low portion of FIFO data. Essentially, this swaps left and right channel data as it is transferred to or from the FIFO. This bit is not used if the data width is greater than 24 bits or if PDMDATA = 1. Note that if the ONECHANNEL field (bit 10 of this register) = 1, the one channel to be used is the nominally the left channel. POSITION can still place that data in the frame where right channel data is normally located. if all enabled channel pairs have ONECHANNEL = 1, then RIGHTLOW = 1 is not allowed.">
        <Enum name="0" start="0b0" description="The right channel is taken from the high part of the FIFO data. For example, when data is 16 bits, FIFO bits 31:16 are used for the right channel." />
        <Enum name="1" start="0b1" description="The right channel is taken from the low part of the FIFO data. For example, when data is 16 bits, FIFO bits 15:0 are used for the right channel." />
      </BitField>
      <BitField start="9" size="1" name="LEFTJUST" description="Left Justify data.">
        <Enum name="0" start="0b0" description="Data is transferred between the FIFO and the I2S serializer/deserializer right justified, i.e. starting from bit 0 and continuing to the position defined by DATALEN. This would correspond to right justified data in the stream on the data bus." />
        <Enum name="1" start="0b1" description="Data is transferred between the FIFO and the I2S serializer/deserializer left justified, i.e. starting from the MSB of the FIFO entry and continuing for the number of bits defined by DATALEN. This would correspond to left justified data in the stream on the data bus." />
      </BitField>
      <BitField start="10" size="1" name="ONECHANNEL" description="Single channel mode. Applies to both transmit and receive. This configuration bit applies only to the first I2S channel pair. Other channel pairs may select this mode independently in their separate CFG1 registers.">
        <Enum name="0" start="0b0" description="I2S data for this channel pair is treated as left and right channels." />
        <Enum name="1" start="0b1" description="I2S data for this channel pair is treated as a single channel, functionally the left channel for this pair. In mode 0 only, the right side of the frame begins at POSITION = 0x100. This is because mode 0 makes a clear distinction between the left and right sides of the frame. When ONECHANNEL = 1, the single channel of data may be placed on the right by setting POSITION to 0x100 + the data position within the right side (e.g. 0x108 would place data starting at the 8th clock after the middle of the frame). In other modes, data for the single channel of data is placed at the clock defined by POSITION." />
      </BitField>
      <BitField start="11" size="1" name="PDMDATA" description="PDM Data selection. This bit controls the data source for I2S transmit, and cannot be set in Rx mode. This bit only has an effect if the device the Flexcomm resides in includes a D-Mic subsystem. For the LPC5411x, this bit applies only to Flexcomm 7.">
        <Enum name="0" start="0b0" description="Normal operation, data is transferred to or from the Flexcomm FIFO." />
        <Enum name="1" start="0b1" description="The data source is the D-Mic subsystem. When PDMDATA = 1, only the primary channel pair can be used in this Flexcomm. If ONECHANNEL = 1, only the PDM left data is used. the WS rate must match the Fs (sample rate) of the D-Mic decimator. A rate mismatch will at some point cause the I2S to overrun or underrun." />
      </BitField>
      <BitField start="12" size="1" name="SCK_POL" description="SCK polarity.">
        <Enum name="0" start="0b0" description="Data is launched on SCK falling edges and sampled on SCK rising edges (standard for I2S)." />
        <Enum name="1" start="0b1" description="Data is launched on SCK rising edges and sampled on SCK falling edges." />
      </BitField>
      <BitField start="13" size="1" name="WS_POL" description="WS polarity.">
        <Enum name="0" start="0b0" description="Data frames begin at a falling edge of WS (standard for classic I2S)." />
        <Enum name="1" start="0b1" description="WS is inverted, resulting in a data frame beginning at a rising edge of WS (standard for most 'non-classic' variations of I2S)." />
      </BitField>
      <BitField start="16" size="5" name="DATALEN" description="Data Length, minus 1 encoded, defines the number of data bits to be transmitted or received for all I2S channel pairs in this Flexcomm. Note that data is only driven to or received from SDA for the number of bits defined by DATALEN. DATALEN is also used in these ways by the I2S: Determines the size of data transfers between the FIFO and the I2S serializer/deserializer. See FIFO buffer configurations and usage In mode 1, 2, and 3, determines the location of right data following left data in the frame. In mode 3 (where WS has a one data slot long pulse at the beginning of each data frame) determines the duration of the WS pulse. Values: 0x00 to 0x02 = not supported 0x03 = data is 4 bits in length 0x04 = data is 5 bits in length 0x1F = data is 32 bits in length" />
    </Register>
    <Register start="+0xC04" size="4" name="CFG2" access="Read/Write" description="Configuration register 2 for the primary channel pair." reset_value="0" reset_mask="0x1FF01FF">
      <BitField start="0" size="9" name="FRAMELEN" description="Frame Length, minus 1 encoded, defines the number of clocks and data bits in the frames that this channel pair participates in. See Frame format. 0x000 to 0x002 = not supported 0x003 = frame is 4 bits in total length 0x004 = frame is 5 bits in total length 0x1FF = frame is 512 bits in total length if FRAMELEN is an defines an odd length frame (e.g. 33 clocks) in mode 0 or 1, the extra clock appears in the right half. When MODE = 3, FRAMELEN must be larger than DATALEN in order for the WS pulse to be generated correctly." />
      <BitField start="16" size="9" name="POSITION" description="Data Position. Defines the location within the frame of the data for this channel pair. POSITION + DATALEN must be less than FRAMELEN. See Frame format. When MODE = 0, POSITION defines the location of data in both the left phase and right phase, starting one clock after the WS edge. In other modes, POSITION defines the location of data within the entire frame. ONECHANNEL = 1 while MODE = 0 is a special case, see the description of ONECHANNEL. The combination of DATALEN and the POSITION fields of all channel pairs must be made such that the channels do not overlap within the frame. 0x000 = data begins at bit position 0 (the first bit position) within the frame or WS phase. 0x001 = data begins at bit position 1 within the frame or WS phase. 0x002 = data begins at bit position 2 within the frame or WS phase." />
    </Register>
    <Register start="+0xC08" size="4" name="STAT" access="Read/Write" description="Status register for the primary channel pair." reset_value="0" reset_mask="0xD">
      <BitField start="0" size="1" name="BUSY" description="Busy status for the primary channel pair. Other BUSY flags may be found in the STAT register for each channel pair.">
        <Enum name="0" start="0b0" description="The transmitter/receiver for channel pair is currently idle." />
        <Enum name="1" start="0b1" description="The transmitter/receiver for channel pair is currently processing data." />
      </BitField>
      <BitField start="1" size="1" name="SLVFRMERR" description="Slave Frame Error flag. This applies when at least one channel pair is operating as a slave. An error indicates that the incoming WS signal did not transition as expected due to a mismatch between FRAMELEN and the actual incoming I2S stream.">
        <Enum name="0" start="0b0" description="No error has been recorded." />
        <Enum name="1" start="0b1" description="An error has been recorded for some channel pair that is operating in slave mode. ERROR is cleared by writing a 1 to this bit position." />
      </BitField>
      <BitField start="2" size="1" name="LR" description="Left/Right indication. This flag is considered to be a debugging aid and is not expected to be used by an I2S driver. Valid when one channel pair is busy. Indicates left or right data being processed for the currently busy channel pair.">
        <Enum name="0" start="0b0" description="Left channel." />
        <Enum name="1" start="0b1" description="Right channel." />
      </BitField>
      <BitField start="3" size="1" name="DATAPAUSED" description="Data Paused status flag. Applies to all I2S channels">
        <Enum name="0" start="0b0" description="Data is not currently paused. A data pause may have been requested but is not yet in force, waiting for an allowed pause point. Refer to the description of the DATAPAUSE control bit in the CFG1 register." />
        <Enum name="1" start="0b1" description="A data pause has been requested and is now in force." />
      </BitField>
    </Register>
    <Register start="+0xC1C" size="4" name="DIV" access="Read/Write" description="Clock divider, used by all channel pairs." reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="12" name="DIV" description="This field controls how this I2S block uses the Flexcomm function clock. 0x000 = The Flexcomm function clock is used directly. 0x001 = The Flexcomm function clock is divided by 2. 0x002 = The Flexcomm function clock is divided by 3. 0xFFF = The Flexcomm function clock is divided by 4,096." />
    </Register>
    <Register start="+0xE00" size="4" name="FIFOCFG" access="Read/Write" description="FIFO configuration and enable register." reset_value="0" reset_mask="0x7F033">
      <BitField start="0" size="1" name="ENABLETX" description="Enable the transmit FIFO.">
        <Enum name="0" start="0b0" description="The transmit FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The transmit FIFO is enabled." />
      </BitField>
      <BitField start="1" size="1" name="ENABLERX" description="Enable the receive FIFO.">
        <Enum name="0" start="0b0" description="The receive FIFO is not enabled." />
        <Enum name="1" start="0b1" description="The receive FIFO is enabled." />
      </BitField>
      <BitField start="2" size="1" name="TXI2SE0" description="Transmit I2S empty 0. Determines the value sent by the I2S in transmit mode if the TX FIFO becomes empty. This value is sent repeatedly until the I2S is paused, the error is cleared, new data is provided, and the I2S is un-paused.">
        <Enum name="0" start="0b0" description="If the TX FIFO becomes empty, the last value is sent. This setting may be used when the data length is 24 bits or less, or when MONO = 1 for this channel pair." />
        <Enum name="1" start="0b1" description="If the TX FIFO becomes empty, 0 is sent. Use if the data length is greater than 24 bits or if zero fill is preferred." />
      </BitField>
      <BitField start="3" size="1" name="PACK48" description="Packing format for 48-bit data. This relates to how data is entered into or taken from the FIFO by software or DMA.">
        <Enum name="0" start="0b0" description="48-bit I2S FIFO entries are handled as all 24-bit values." />
        <Enum name="1" start="0b1" description="48-bit I2S FIFO entries are handled as alternating 32-bit and 16-bit values." />
      </BitField>
      <BitField start="4" size="2" name="SIZE" description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART." />
      <BitField start="12" size="1" name="DMATX" description="DMA configuration for transmit.">
        <Enum name="0" start="0b0" description="DMA is not used for the transmit function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="13" size="1" name="DMARX" description="DMA configuration for receive.">
        <Enum name="0" start="0b0" description="DMA is not used for the receive function." />
        <Enum name="1" start="0b1" description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled." />
      </BitField>
      <BitField start="14" size="1" name="WAKETX" description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="15" size="1" name="WAKERX" description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.">
        <Enum name="0" start="0b0" description="Only enabled interrupts will wake up the device form reduced power modes." />
        <Enum name="1" start="0b1" description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled." />
      </BitField>
      <BitField start="16" size="1" name="EMPTYTX" description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied." />
      <BitField start="17" size="1" name="EMPTYRX" description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied." />
      <BitField start="18" size="1" name="POPDBG" description="Pop FIFO for debug reads.">
        <Enum name="0" start="0b0" description="Debug reads of the FIFO do not pop the FIFO." />
        <Enum name="1" start="0b1" description="A debug read will cause the FIFO to pop." />
      </BitField>
    </Register>
    <Register start="+0xE04" size="4" name="FIFOSTAT" access="Read/Write" description="FIFO status register." reset_value="0x30" reset_mask="0x1F1FFB">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit." />
      <BitField start="3" size="1" name="PERINT" description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register." />
      <BitField start="4" size="1" name="TXEMPTY" description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data." />
      <BitField start="5" size="1" name="TXNOTFULL" description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow." />
      <BitField start="6" size="1" name="RXNOTEMPTY" description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty." />
      <BitField start="7" size="1" name="RXFULL" description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow." />
      <BitField start="8" size="5" name="TXLVL" description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0." />
      <BitField start="16" size="5" name="RXLVL" description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1." />
    </Register>
    <Register start="+0xE08" size="4" name="FIFOTRIG" access="Read/Write" description="FIFO trigger settings for interrupt and DMA request." reset_value="0" reset_mask="0xF0F03">
      <BitField start="0" size="1" name="TXLVLENA" description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Transmit FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register." />
      </BitField>
      <BitField start="1" size="1" name="RXLVLENA" description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.">
        <Enum name="0" start="0b0" description="Receive FIFO level does not generate a FIFO level trigger." />
        <Enum name="1" start="0b1" description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register." />
      </BitField>
      <BitField start="8" size="4" name="TXLVL" description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)." />
      <BitField start="16" size="4" name="RXLVL" description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)." />
    </Register>
    <Register start="+0xE10" size="4" name="FIFOINTENSET" access="Read/Write" description="FIFO interrupt enable set (enable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a transmit error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a transmit error occurs." />
      </BitField>
      <BitField start="1" size="1" name="RXERR" description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated for a receive error." />
        <Enum name="1" start="0b1" description="An interrupt will be generated when a receive error occurs." />
      </BitField>
      <BitField start="2" size="1" name="TXLVL" description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the TX FIFO level." />
        <Enum name="1" start="0b1" description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register." />
      </BitField>
      <BitField start="3" size="1" name="RXLVL" description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.">
        <Enum name="0" start="0b0" description="No interrupt will be generated based on the RX FIFO level." />
        <Enum name="1" start="0b1" description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register." />
      </BitField>
    </Register>
    <Register start="+0xE14" size="4" name="FIFOINTENCLR" access="Read/Write" description="FIFO interrupt enable clear (disable) and read register." reset_value="0" reset_mask="0xF">
      <BitField start="0" size="1" name="TXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="1" size="1" name="RXERR" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="2" size="1" name="TXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
      <BitField start="3" size="1" name="RXLVL" description="Writing one clears the corresponding bits in the FIFOINTENSET register." />
    </Register>
    <Register start="+0xE18" size="4" name="FIFOINTSTAT" access="ReadOnly" description="FIFO interrupt status register." reset_value="0" reset_mask="0x1F">
      <BitField start="0" size="1" name="TXERR" description="TX FIFO error." />
      <BitField start="1" size="1" name="RXERR" description="RX FIFO error." />
      <BitField start="2" size="1" name="TXLVL" description="Transmit FIFO level interrupt." />
      <BitField start="3" size="1" name="RXLVL" description="Receive FIFO level interrupt." />
      <BitField start="4" size="1" name="PERINT" description="Peripheral interrupt." />
    </Register>
    <Register start="+0xE20" size="4" name="FIFOWR" access="WriteOnly" description="FIFO write data." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="TXDATA" description="Transmit data to the FIFO. The number of bits used depends on configuration details." />
    </Register>
    <Register start="+0xE24" size="4" name="FIFOWR48H" access="WriteOnly" description="FIFO write data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA." reset_value="0" reset_mask="0">
      <BitField start="0" size="24" name="TXDATA" description="Transmit data to the FIFO. Whether this register is used and the number of bits used depends on configuration details." />
    </Register>
    <Register start="+0xE30" size="4" name="FIFORD" access="ReadOnly" description="FIFO read data." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="RXDATA" description="Received data from the FIFO. The number of bits used depends on configuration details." />
    </Register>
    <Register start="+0xE34" size="4" name="FIFORD48H" access="ReadOnly" description="FIFO read data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA." reset_value="0" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="RXDATA" description="Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details." />
    </Register>
    <Register start="+0xE40" size="4" name="FIFORDNOPOP" access="ReadOnly" description="FIFO data read with no FIFO pop." reset_value="0" reset_mask="0">
      <BitField start="0" size="32" name="RXDATA" description="Received data from the FIFO." />
    </Register>
    <Register start="+0xE44" size="4" name="FIFORD48HNOPOP" access="ReadOnly" description="FIFO data read for upper data bits with no FIFO pop. May only be used if the I2S is configured for 2x 24-bit data and not using DMA." reset_value="0" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="RXDATA" description="Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details." />
    </Register>
    <Register start="+0x1DFC" size="4" name="ID" access="ReadOnly" description="I2S Module identification" reset_value="0xE0900000" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="Aperture" description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture." />
      <BitField start="8" size="4" name="Minor_Rev" description="Minor revision of module implementation, starting at 0." />
      <BitField start="12" size="4" name="Major_Rev" description="Major revision of module implementation, starting at 0." />
      <BitField start="16" size="16" name="ID" description="Unique module identifier for this IP block." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SDIF" start="0x4009B000" description="SDMMC">
    <Register start="+0" size="4" name="CTRL" access="Read/Write" description="Control register" reset_value="0" reset_mask="0x2070FD7">
      <BitField start="0" size="1" name="CONTROLLER_RESET" description="Controller reset." />
      <BitField start="1" size="1" name="FIFO_RESET" description="Fifo reset." />
      <BitField start="2" size="1" name="DMA_RESET" description="DMA reset." />
      <BitField start="4" size="1" name="INT_ENABLE" description="Global interrupt enable/disable bit." />
      <BitField start="6" size="1" name="READ_WAIT" description="Read/wait." />
      <BitField start="7" size="1" name="SEND_IRQ_RESPONSE" description="Send irq response." />
      <BitField start="8" size="1" name="ABORT_READ_DATA" description="Abort read data." />
      <BitField start="9" size="1" name="SEND_CCSD" description="Send ccsd." />
      <BitField start="10" size="1" name="SEND_AUTO_STOP_CCSD" description="Send auto stop ccsd." />
      <BitField start="11" size="1" name="CEATA_DEVICE_INTERRUPT_STATUS" description="CEATA device interrupt status." />
      <BitField start="16" size="1" name="CARD_VOLTAGE_A0" description="Controls the state of the SD_VOLT0 pin." />
      <BitField start="17" size="1" name="CARD_VOLTAGE_A1" description="Controls the state of the SD_VOLT1 pin." />
      <BitField start="18" size="1" name="CARD_VOLTAGE_A2" description="Controls the state of the SD_VOLT2 pin." />
      <BitField start="25" size="1" name="USE_INTERNAL_DMAC" description="SD/MMC DMA use." />
    </Register>
    <Register start="+0x4" size="4" name="PWREN" access="Read/Write" description="Power Enable register" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="POWER_ENABLE" description="Power on/off switch for card; once power is turned on, software should wait for regulator/switch ramp-up time before trying to initialize card." />
    </Register>
    <Register start="+0x8" size="4" name="CLKDIV" access="Read/Write" description="Clock Divider register" reset_value="0" reset_mask="0xFF">
      <BitField start="0" size="8" name="CLK_DIVIDER0" description="Clock divider-0 value." />
    </Register>
    <Register start="+0x10" size="4" name="CLKENA" access="Read/Write" description="Clock Enable register" reset_value="0" reset_mask="0x10001">
      <BitField start="0" size="1" name="CCLK_ENABLE" description="Clock-enable control for SD card clock." />
      <BitField start="16" size="1" name="CCLK_LOW_POWER" description="Low-power control for SD card clock." />
    </Register>
    <Register start="+0x14" size="4" name="TMOUT" access="Read/Write" description="Time-out register" reset_value="0xFFFFFF40" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="8" name="RESPONSE_TIMEOUT" description="Response time-out value." />
      <BitField start="8" size="24" name="DATA_TIMEOUT" description="Value for card Data Read time-out; same value also used for Data Starvation by Host time-out." />
    </Register>
    <Register start="+0x18" size="4" name="CTYPE" access="Read/Write" description="Card Type register" reset_value="0" reset_mask="0x10001">
      <BitField start="0" size="1" name="CARD_WIDTH0" description="Indicates if card is 1-bit or 4-bit: 0 - 1-bit mode 1 - 4-bit mode 1 and 4-bit modes only work when 8-bit mode in CARD_WIDTH1 is not enabled (bit 16 in this register is set to 0)." />
      <BitField start="16" size="1" name="CARD_WIDTH1" description="Indicates if card is 8-bit: 0 - Non 8-bit mode 1 - 8-bit mode." />
    </Register>
    <Register start="+0x1C" size="4" name="BLKSIZ" access="Read/Write" description="Block Size register" reset_value="0x200" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="BLOCK_SIZE" description="Block size." />
    </Register>
    <Register start="+0x20" size="4" name="BYTCNT" access="Read/Write" description="Byte Count register" reset_value="0x200" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="BYTE_COUNT" description="Number of bytes to be transferred; should be integer multiple of Block Size for block transfers." />
    </Register>
    <Register start="+0x24" size="4" name="INTMASK" access="Read/Write" description="Interrupt Mask register" reset_value="0" reset_mask="0x1FFFF">
      <BitField start="0" size="1" name="CDET" description="Card detect." />
      <BitField start="1" size="1" name="RE" description="Response error." />
      <BitField start="2" size="1" name="CDONE" description="Command done." />
      <BitField start="3" size="1" name="DTO" description="Data transfer over." />
      <BitField start="4" size="1" name="TXDR" description="Transmit FIFO data request." />
      <BitField start="5" size="1" name="RXDR" description="Receive FIFO data request." />
      <BitField start="6" size="1" name="RCRC" description="Response CRC error." />
      <BitField start="7" size="1" name="DCRC" description="Data CRC error." />
      <BitField start="8" size="1" name="RTO" description="Response time-out." />
      <BitField start="9" size="1" name="DRTO" description="Data read time-out." />
      <BitField start="10" size="1" name="HTO" description="Data starvation-by-host time-out (HTO)." />
      <BitField start="11" size="1" name="FRUN" description="FIFO underrun/overrun error." />
      <BitField start="12" size="1" name="HLE" description="Hardware locked write error." />
      <BitField start="13" size="1" name="SBE" description="Start-bit error." />
      <BitField start="14" size="1" name="ACD" description="Auto command done." />
      <BitField start="15" size="1" name="EBE" description="End-bit error (read)/Write no CRC." />
      <BitField start="16" size="1" name="SDIO_INT_MASK" description="Mask SDIO interrupt." />
    </Register>
    <Register start="+0x28" size="4" name="CMDARG" access="Read/Write" description="Command Argument register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="CMD_ARG" description="Value indicates command argument to be passed to card." />
    </Register>
    <Register start="+0x2C" size="4" name="CMD" access="Read/Write" description="Command register" reset_value="0" reset_mask="0xBFE0FFFF">
      <BitField start="0" size="6" name="CMD_INDEX" description="Command index." />
      <BitField start="6" size="1" name="RESPONSE_EXPECT" description="Response expect." />
      <BitField start="7" size="1" name="RESPONSE_LENGTH" description="Response length." />
      <BitField start="8" size="1" name="CHECK_RESPONSE_CRC" description="Check response CRC." />
      <BitField start="9" size="1" name="DATA_EXPECTED" description="Data expected." />
      <BitField start="10" size="1" name="READ_WRITE" description="read/write." />
      <BitField start="11" size="1" name="TRANSFER_MODE" description="Transfer mode." />
      <BitField start="12" size="1" name="SEND_AUTO_STOP" description="Send auto stop." />
      <BitField start="13" size="1" name="WAIT_PRVDATA_COMPLETE" description="Wait prvdata complete." />
      <BitField start="14" size="1" name="STOP_ABORT_CMD" description="Stop abort command." />
      <BitField start="15" size="1" name="SEND_INITIALIZATION" description="Send initialization." />
      <BitField start="21" size="1" name="UPDATE_CLOCK_REGISTERS_ONLY" description="Update clock registers only." />
      <BitField start="22" size="1" name="READ_CEATA_DEVICE" description="Read ceata device." />
      <BitField start="23" size="1" name="CCS_EXPECTED" description="CCS expected." />
      <BitField start="24" size="1" name="ENABLE_BOOT" description="Enable Boot - this bit should be set only for mandatory boot mode." />
      <BitField start="25" size="1" name="EXPECT_BOOT_ACK" description="Expect Boot Acknowledge." />
      <BitField start="26" size="1" name="DISABLE_BOOT" description="Disable Boot." />
      <BitField start="27" size="1" name="BOOT_MODE" description="Boot Mode." />
      <BitField start="28" size="1" name="VOLT_SWITCH" description="Voltage switch bit." />
      <BitField start="29" size="1" name="USE_HOLD_REG" description="Use Hold Register." />
      <BitField start="31" size="1" name="START_CMD" description="Start command." />
    </Register>
    <Register start="+0x30" size="4" name="RESP0" access="Read/Write" description="Response register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RESPONSE" description="Bits of response." />
    </Register>
    <Register start="+0x34" size="4" name="RESP1" access="Read/Write" description="Response register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RESPONSE" description="Bits of response." />
    </Register>
    <Register start="+0x38" size="4" name="RESP2" access="Read/Write" description="Response register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RESPONSE" description="Bits of response." />
    </Register>
    <Register start="+0x3C" size="4" name="RESP3" access="Read/Write" description="Response register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="RESPONSE" description="Bits of response." />
    </Register>
    <Register start="+0x40" size="4" name="MINTSTS" access="Read/Write" description="Masked Interrupt Status register" reset_value="0" reset_mask="0x1FFFF">
      <BitField start="0" size="1" name="CDET" description="Card detect." />
      <BitField start="1" size="1" name="RE" description="Response error." />
      <BitField start="2" size="1" name="CDONE" description="Command done." />
      <BitField start="3" size="1" name="DTO" description="Data transfer over." />
      <BitField start="4" size="1" name="TXDR" description="Transmit FIFO data request." />
      <BitField start="5" size="1" name="RXDR" description="Receive FIFO data request." />
      <BitField start="6" size="1" name="RCRC" description="Response CRC error." />
      <BitField start="7" size="1" name="DCRC" description="Data CRC error." />
      <BitField start="8" size="1" name="RTO" description="Response time-out." />
      <BitField start="9" size="1" name="DRTO" description="Data read time-out." />
      <BitField start="10" size="1" name="HTO" description="Data starvation-by-host time-out (HTO)." />
      <BitField start="11" size="1" name="FRUN" description="FIFO underrun/overrun error." />
      <BitField start="12" size="1" name="HLE" description="Hardware locked write error." />
      <BitField start="13" size="1" name="SBE" description="Start-bit error." />
      <BitField start="14" size="1" name="ACD" description="Auto command done." />
      <BitField start="15" size="1" name="EBE" description="End-bit error (read)/write no CRC." />
      <BitField start="16" size="1" name="SDIO_INTERRUPT" description="Interrupt from SDIO card." />
    </Register>
    <Register start="+0x44" size="4" name="RINTSTS" access="Read/Write" description="Raw Interrupt Status register" reset_value="0" reset_mask="0x1FFFF">
      <BitField start="0" size="1" name="CDET" description="Card detect." />
      <BitField start="1" size="1" name="RE" description="Response error." />
      <BitField start="2" size="1" name="CDONE" description="Command done." />
      <BitField start="3" size="1" name="DTO" description="Data transfer over." />
      <BitField start="4" size="1" name="TXDR" description="Transmit FIFO data request." />
      <BitField start="5" size="1" name="RXDR" description="Receive FIFO data request." />
      <BitField start="6" size="1" name="RCRC" description="Response CRC error." />
      <BitField start="7" size="1" name="DCRC" description="Data CRC error." />
      <BitField start="8" size="1" name="RTO_BAR" description="Response time-out (RTO)/Boot Ack Received (BAR)." />
      <BitField start="9" size="1" name="DRTO_BDS" description="Data read time-out (DRTO)/Boot Data Start (BDS)." />
      <BitField start="10" size="1" name="HTO" description="Data starvation-by-host time-out (HTO)." />
      <BitField start="11" size="1" name="FRUN" description="FIFO underrun/overrun error." />
      <BitField start="12" size="1" name="HLE" description="Hardware locked write error." />
      <BitField start="13" size="1" name="SBE" description="Start-bit error." />
      <BitField start="14" size="1" name="ACD" description="Auto command done." />
      <BitField start="15" size="1" name="EBE" description="End-bit error (read)/write no CRC." />
      <BitField start="16" size="1" name="SDIO_INTERRUPT" description="Interrupt from SDIO card." />
    </Register>
    <Register start="+0x48" size="4" name="STATUS" access="Read/Write" description="Status register" reset_value="0x406" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="1" name="FIFO_RX_WATERMARK" description="FIFO reached Receive watermark level; not qualified with data transfer." />
      <BitField start="1" size="1" name="FIFO_TX_WATERMARK" description="FIFO reached Transmit watermark level; not qualified with data transfer." />
      <BitField start="2" size="1" name="FIFO_EMPTY" description="FIFO is empty status." />
      <BitField start="3" size="1" name="FIFO_FULL" description="FIFO is full status." />
      <BitField start="4" size="4" name="CMDFSMSTATES" description="Command FSM states: 0 - Idle 1 - Send init sequence 2 - Tx cmd start bit 3 - Tx cmd tx bit 4 - Tx cmd index + arg 5 - Tx cmd crc7 6 - Tx cmd end bit 7 - Rx resp start bit 8 - Rx resp IRQ response 9 - Rx resp tx bit 10 - Rx resp cmd idx 11 - Rx resp data 12 - Rx resp crc7 13 - Rx resp end bit 14 - Cmd path wait NCC 15 - Wait; CMD-to-response turnaround NOTE: The command FSM state is represented using 19 bits." />
      <BitField start="8" size="1" name="DATA_3_STATUS" description="Raw selected card_data[3]; checks whether card is present 0 - card not present 1 - card present." />
      <BitField start="9" size="1" name="DATA_BUSY" description="Inverted version of raw selected card_data[0] 0 - card data not busy 1 - card data busy." />
      <BitField start="10" size="1" name="DATA_STATE_MC_BUSY" description="Data transmit or receive state-machine is busy." />
      <BitField start="11" size="6" name="RESPONSE_INDEX" description="Index of previous response, including any auto-stop sent by core." />
      <BitField start="17" size="13" name="FIFO_COUNT" description="FIFO count - Number of filled locations in FIFO." />
      <BitField start="30" size="1" name="DMA_ACK" description="DMA acknowledge signal state." />
      <BitField start="31" size="1" name="DMA_REQ" description="DMA request signal state." />
    </Register>
    <Register start="+0x4C" size="4" name="FIFOTH" access="Read/Write" description="FIFO Threshold Watermark register" reset_value="0x1F0000" reset_mask="0x7FFF0FFF">
      <BitField start="0" size="12" name="TX_WMARK" description="FIFO threshold watermark level when transmitting data to card." />
      <BitField start="16" size="12" name="RX_WMARK" description="FIFO threshold watermark level when receiving data to card." />
      <BitField start="28" size="3" name="DMA_MTS" description="Burst size of multiple transaction; should be programmed same as DW-DMA controller multiple-transaction-size SRC/DEST_MSIZE." />
    </Register>
    <Register start="+0x50" size="4" name="CDETECT" access="Read/Write" description="Card Detect register" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="CARD_DETECT" description="Card detect." />
    </Register>
    <Register start="+0x54" size="4" name="WRTPRT" access="Read/Write" description="Write Protect register" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="WRITE_PROTECT" description="Write protect." />
    </Register>
    <Register start="+0x5C" size="4" name="TCBCNT" access="Read/Write" description="Transferred CIU Card Byte Count register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="TRANS_CARD_BYTE_COUNT" description="Number of bytes transferred by CIU unit to card." />
    </Register>
    <Register start="+0x60" size="4" name="TBBCNT" access="Read/Write" description="Transferred Host to BIU-FIFO Byte Count register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="TRANS_FIFO_BYTE_COUNT" description="Number of bytes transferred between Host/DMA memory and BIU FIFO." />
    </Register>
    <Register start="+0x64" size="4" name="DEBNCE" access="Read/Write" description="Debounce Count register" reset_value="0xFFFFFF" reset_mask="0xFFFFFF">
      <BitField start="0" size="24" name="DEBOUNCE_COUNT" description="Number of host clocks (SD_CLK) used by debounce filter logic for card detect; typical debounce time is 5-25 ms." />
    </Register>
    <Register start="+0x78" size="4" name="RST_N" access="Read/Write" description="Hardware Reset" reset_value="0x1" reset_mask="0x1">
      <BitField start="0" size="1" name="CARD_RESET" description="Hardware reset." />
    </Register>
    <Register start="+0x80" size="4" name="BMOD" access="Read/Write" description="Bus Mode register" reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="1" name="SWR" description="Software Reset." />
      <BitField start="1" size="1" name="FB" description="Fixed Burst." />
      <BitField start="2" size="5" name="DSL" description="Descriptor Skip Length." />
      <BitField start="7" size="1" name="DE" description="SD/MMC DMA Enable." />
      <BitField start="8" size="3" name="PBL" description="Programmable Burst Length." />
    </Register>
    <Register start="+0x84" size="4" name="PLDMND" access="Read/Write" description="Poll Demand register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="PD" description="Poll Demand." />
    </Register>
    <Register start="+0x88" size="4" name="DBADDR" access="Read/Write" description="Descriptor List Base Address register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="SDL" description="Start of Descriptor List." />
    </Register>
    <Register start="+0x8C" size="4" name="IDSTS" access="Read/Write" description="Internal DMAC Status register" reset_value="0" reset_mask="0x1FF37">
      <BitField start="0" size="1" name="TI" description="Transmit Interrupt." />
      <BitField start="1" size="1" name="RI" description="Receive Interrupt." />
      <BitField start="2" size="1" name="FBE" description="Fatal Bus Error Interrupt." />
      <BitField start="4" size="1" name="DU" description="Descriptor Unavailable Interrupt." />
      <BitField start="5" size="1" name="CES" description="Card Error Summary." />
      <BitField start="8" size="1" name="NIS" description="Normal Interrupt Summary." />
      <BitField start="9" size="1" name="AIS" description="Abnormal Interrupt Summary." />
      <BitField start="10" size="3" name="EB" description="Error Bits." />
      <BitField start="13" size="4" name="FSM" description="DMAC state machine present state." />
    </Register>
    <Register start="+0x90" size="4" name="IDINTEN" access="Read/Write" description="Internal DMAC Interrupt Enable register" reset_value="0" reset_mask="0x337">
      <BitField start="0" size="1" name="TI" description="Transmit Interrupt Enable." />
      <BitField start="1" size="1" name="RI" description="Receive Interrupt Enable." />
      <BitField start="2" size="1" name="FBE" description="Fatal Bus Error Enable." />
      <BitField start="4" size="1" name="DU" description="Descriptor Unavailable Interrupt." />
      <BitField start="5" size="1" name="CES" description="Card Error summary Interrupt Enable." />
      <BitField start="8" size="1" name="NIS" description="Normal Interrupt Summary Enable." />
      <BitField start="9" size="1" name="AIS" description="Abnormal Interrupt Summary Enable." />
    </Register>
    <Register start="+0x94" size="4" name="DSCADDR" access="Read/Write" description="Current Host Descriptor Address register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="HDA" description="Host Descriptor Address Pointer." />
    </Register>
    <Register start="+0x98" size="4" name="BUFADDR" access="Read/Write" description="Current Buffer Descriptor Address register" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="HBA" description="Host Buffer Address Pointer." />
    </Register>
    <Register start="+0x100" size="4" name="CARDTHRCTL" access="Read/Write" description="Card Threshold Control" reset_value="0" reset_mask="0xFF0003">
      <BitField start="0" size="1" name="CARDRDTHREN" description="Card Read Threshold Enable." />
      <BitField start="1" size="1" name="BSYCLRINTEN" description="Busy Clear Interrupt Enable." />
      <BitField start="16" size="8" name="CARDTHRESHOLD" description="Card Threshold size." />
    </Register>
    <Register start="+0x104" size="4" name="BACKENDPWR" access="Read/Write" description="Power control" reset_value="0" reset_mask="0x1">
      <BitField start="0" size="1" name="BACKENDPWR" description="Back-end Power control for card application." />
    </Register>
    <Register start="+0x200" size="4" name="FIFO0" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x204" size="4" name="FIFO1" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x208" size="4" name="FIFO2" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x20C" size="4" name="FIFO3" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x210" size="4" name="FIFO4" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x214" size="4" name="FIFO5" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x218" size="4" name="FIFO6" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x21C" size="4" name="FIFO7" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x220" size="4" name="FIFO8" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x224" size="4" name="FIFO9" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x228" size="4" name="FIFO10" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x22C" size="4" name="FIFO11" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x230" size="4" name="FIFO12" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x234" size="4" name="FIFO13" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x238" size="4" name="FIFO14" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x23C" size="4" name="FIFO15" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x240" size="4" name="FIFO16" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x244" size="4" name="FIFO17" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x248" size="4" name="FIFO18" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x24C" size="4" name="FIFO19" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x250" size="4" name="FIFO20" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x254" size="4" name="FIFO21" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x258" size="4" name="FIFO22" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x25C" size="4" name="FIFO23" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x260" size="4" name="FIFO24" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x264" size="4" name="FIFO25" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x268" size="4" name="FIFO26" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x26C" size="4" name="FIFO27" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x270" size="4" name="FIFO28" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x274" size="4" name="FIFO29" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x278" size="4" name="FIFO30" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x27C" size="4" name="FIFO31" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x280" size="4" name="FIFO32" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x284" size="4" name="FIFO33" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x288" size="4" name="FIFO34" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x28C" size="4" name="FIFO35" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x290" size="4" name="FIFO36" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x294" size="4" name="FIFO37" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x298" size="4" name="FIFO38" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x29C" size="4" name="FIFO39" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2A0" size="4" name="FIFO40" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2A4" size="4" name="FIFO41" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2A8" size="4" name="FIFO42" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2AC" size="4" name="FIFO43" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2B0" size="4" name="FIFO44" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2B4" size="4" name="FIFO45" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2B8" size="4" name="FIFO46" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2BC" size="4" name="FIFO47" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2C0" size="4" name="FIFO48" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2C4" size="4" name="FIFO49" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2C8" size="4" name="FIFO50" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2CC" size="4" name="FIFO51" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2D0" size="4" name="FIFO52" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2D4" size="4" name="FIFO53" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2D8" size="4" name="FIFO54" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2DC" size="4" name="FIFO55" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2E0" size="4" name="FIFO56" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2E4" size="4" name="FIFO57" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2E8" size="4" name="FIFO58" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2EC" size="4" name="FIFO59" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2F0" size="4" name="FIFO60" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2F4" size="4" name="FIFO61" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2F8" size="4" name="FIFO62" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
    <Register start="+0x2FC" size="4" name="FIFO63" access="Read/Write" description="SDIF FIFO" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="DATA" description="SDIF FIFO." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="ADC0" start="0x400A0000" description="LPC5411x 12-bit ADC controller (ADC)">
    <Register start="+0" size="4" name="CTRL" access="Read/Write" description="ADC Control register. Contains the clock divide value, resolution selection, sampling time selection, and mode controls." reset_value="0x600" reset_mask="0x7FFF">
      <BitField start="0" size="8" name="CLKDIV" description="In synchronous mode only, the system clock is divided by this value plus one to produce the clock for the ADC converter, which should be less than or equal to 72 MHz. Typically, software should program the smallest value in this field that yields this maximum clock rate or slightly less, but in certain cases (such as a high-impedance analog source) a slower clock may be desirable. This field is ignored in the asynchronous operating mode." />
      <BitField start="8" size="1" name="ASYNMODE" description="Select clock mode.">
        <Enum name="0" start="0b0" description="Synchronous mode. The ADC clock is derived from the system clock based on the divide value selected in the CLKDIV field. The ADC clock will be started in a controlled fashion in response to a trigger to eliminate any uncertainty in the launching of an ADC conversion in response to any synchronous (on-chip) trigger. In Synchronous mode with the SYNCBYPASS bit (in a sequence control register) set, sampling of the ADC input and start of conversion will initiate 2 system clocks after the leading edge of a (synchronous) trigger pulse." />
        <Enum name="1" start="0b1" description="Asynchronous mode. The ADC clock is based on the output of the ADC clock divider ADCCLKSEL in the SYSCON block." />
      </BitField>
      <BitField start="9" size="2" name="RESOL" description="The number of bits of ADC resolution. Accuracy can be reduced to achieve higher conversion rates. A single conversion (including one conversion in a burst or sequence) requires the selected number of bits of resolution plus 3 ADC clocks. This field must only be altered when the ADC is fully idle. Changing it during any kind of ADC operation may have unpredictable results. ADC clock frequencies for various resolutions must not exceed: - 5x the system clock rate for 12-bit resolution - 4.3x the system clock rate for 10-bit resolution - 3.6x the system clock for 8-bit resolution - 3x the bus clock rate for 6-bit resolution">
        <Enum name="0" start="0b00" description="6-bit resolution. An ADC conversion requires 9 ADC clocks, plus any clocks specified by the TSAMP field." />
        <Enum name="1" start="0b01" description="8-bit resolution. An ADC conversion requires 11 ADC clocks, plus any clocks specified by the TSAMP field." />
        <Enum name="10" start="0b10" description="10-bit resolution. An ADC conversion requires 13 ADC clocks, plus any clocks specified by the TSAMP field." />
        <Enum name="11" start="0b11" description="12-bit resolution. An ADC conversion requires 15 ADC clocks, plus any clocks specified by the TSAMP field." />
      </BitField>
      <BitField start="11" size="1" name="BYPASSCAL" description="Bypass Calibration. This bit may be set to avoid the need to calibrate if offset error is not a concern in the application.">
        <Enum name="0" start="0b0" description="Calibrate. The stored calibration value will be applied to the ADC during conversions to compensated for offset error. A calibration cycle must be performed each time the chip is powered-up. Re-calibration may be warranted periodically - especially if operating conditions have changed." />
        <Enum name="1" start="0b1" description="Bypass calibration. Calibration is not utilized. Less time is required when enabling the ADC - particularly following chip power-up. Attempts to launch a calibration cycle are blocked when this bit is set." />
      </BitField>
      <BitField start="12" size="3" name="TSAMP" description="Sample Time. The default sampling period (TSAMP = '000') at the start of each conversion is 2.5 ADC clock periods. Depending on a variety of factors, including operating conditions and the output impedance of the analog source, longer sampling times may be required. See Section 28.7.10. The TSAMP field specifies the number of additional ADC clock cycles, from zero to seven, by which the sample period will be extended. The total conversion time will increase by the same number of clocks. 000 - The sample period will be the default 2.5 ADC clocks. A complete conversion with 12-bits of accuracy will require 15 clocks. 001- The sample period will be extended by one ADC clock to a total of 3.5 clock periods. A complete 12-bit conversion will require 16 clocks. 010 - The sample period will be extended by two clocks to 4.5 ADC clock cycles. A complete 12-bit conversion will require 17 ADC clocks. 111 - The sample period will be extended by seven clocks to 9.5 ADC clock cycles. A complete 12-bit conversion will require 22 ADC clocks." />
    </Register>
    <Register start="+0x4" size="4" name="INSEL" access="Read/Write" description="Input Select. Allows selection of the temperature sensor as an alternate input to ADC channel 0." reset_value="0" reset_mask="0x3">
      <BitField start="0" size="2" name="SEL" description="Selects the input source for channel 0. All other values are reserved.">
        <Enum name="0" start="0b00" description="ADC0_IN0 function." />
        <Enum name="11" start="0b11" description="Internal temperature sensor." />
      </BitField>
    </Register>
    <Register start="+0x8" size="4" name="SEQ_CTRLA" access="Read/Write" description="ADC Conversion Sequence-n control register: Controls triggering and channel selection for conversion sequence-n. Also specifies interrupt mode for sequence-n." reset_value="0" reset_mask="0xFC0FFFFF">
      <BitField start="0" size="12" name="CHANNELS" description="Selects which one or more of the ADC channels will be sampled and converted when this sequence is launched. A 1 in any bit of this field will cause the corresponding channel to be included in the conversion sequence, where bit 0 corresponds to channel 0, bit 1 to channel 1 and so forth. When this conversion sequence is triggered, either by a hardware trigger or via software command, ADC conversions will be performed on each enabled channel, in sequence, beginning with the lowest-ordered channel. This field can ONLY be changed while SEQA_ENA (bit 31) is LOW. It is allowed to change this field and set bit 31 in the same write." />
      <BitField start="12" size="6" name="TRIGGER" description="Selects which of the available hardware trigger sources will cause this conversion sequence to be initiated. Program the trigger input number in this field. See Table 476. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write." />
      <BitField start="18" size="1" name="TRIGPOL" description="Select the polarity of the selected input trigger for this conversion sequence. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write.">
        <Enum name="0" start="0b0" description="Negative edge. A negative edge launches the conversion sequence on the selected trigger input." />
        <Enum name="1" start="0b1" description="Positive edge. A positive edge launches the conversion sequence on the selected trigger input." />
      </BitField>
      <BitField start="19" size="1" name="SYNCBYPASS" description="Setting this bit allows the hardware trigger input to bypass synchronization flip-flop stages and therefore shorten the time between the trigger input signal and the start of a conversion. There are slightly different criteria for whether or not this bit can be set depending on the clock operating mode: Synchronous mode (the ASYNMODE in the CTRL register = 0): Synchronization may be bypassed (this bit may be set) if the selected trigger source is already synchronous with the main system clock (eg. coming from an on-chip, system-clock-based timer). Whether this bit is set or not, a trigger pulse must be maintained for at least one system clock period. Asynchronous mode (the ASYNMODE in the CTRL register = 1): Synchronization may be bypassed (this bit may be set) if it is certain that the duration of a trigger input pulse will be at least one cycle of the ADC clock (regardless of whether the trigger comes from and on-chip or off-chip source). If this bit is NOT set, the trigger pulse must at least be maintained for one system clock period.">
        <Enum name="0" start="0b0" description="Enable trigger synchronization. The hardware trigger bypass is not enabled." />
        <Enum name="1" start="0b1" description="Bypass trigger synchronization. The hardware trigger bypass is enabled." />
      </BitField>
      <BitField start="26" size="1" name="START" description="Writing a 1 to this field will launch one pass through this conversion sequence. The behavior will be identical to a sequence triggered by a hardware trigger. Do not write 1 to this bit if the BURST bit is set. This bit is only set to a 1 momentarily when written to launch a conversion sequence. It will consequently always read back as a zero." />
      <BitField start="27" size="1" name="BURST" description="Writing a 1 to this bit will cause this conversion sequence to be continuously cycled through. Other sequence A triggers will be ignored while this bit is set. Repeated conversions can be halted by clearing this bit. The sequence currently in progress will be completed before conversions are terminated. Note that a new sequence could begin just before BURST is cleared." />
      <BitField start="28" size="1" name="SINGLESTEP" description="When this bit is set, a hardware trigger or a write to the START bit will launch a single conversion on the next channel in the sequence instead of the default response of launching an entire sequence of conversions. Once all of the channels comprising a sequence have been converted, a subsequent trigger will repeat the sequence beginning with the first enabled channel. Interrupt generation will still occur either after each individual conversion or at the end of the entire sequence, depending on the state of the MODE bit." />
      <BitField start="29" size="1" name="LOWPRIO" description="Set priority for sequence A.">
        <Enum name="0" start="0b0" description="Low priority. Any B trigger which occurs while an A conversion sequence is active will be ignored and lost." />
        <Enum name="1" start="0b1" description="High priority. Setting this bit to a 1 will permit any enabled B sequence trigger (including a B sequence software start) to immediately interrupt sequence A and launch a B sequence in it's place. The conversion currently in progress will be terminated. The A sequence that was interrupted will automatically resume after the B sequence completes. The channel whose conversion was terminated will be re-sampled and the conversion sequence will resume from that point." />
      </BitField>
      <BitField start="30" size="1" name="MODE" description="Indicates whether the primary method for retrieving conversion results for this sequence will be accomplished via reading the global data register (SEQA_GDAT) at the end of each conversion, or the individual channel result registers at the end of the entire sequence. Impacts when conversion-complete interrupt/DMA trigger for sequence-A will be generated and which overrun conditions contribute to an overrun interrupt as described below.">
        <Enum name="0" start="0b0" description="End of conversion. The sequence A interrupt/DMA trigger will be set at the end of each individual ADC conversion performed under sequence A. This flag will mirror the DATAVALID bit in the SEQA_GDAT register. The OVERRUN bit in the SEQA_GDAT register will contribute to generation of an overrun interrupt/DMA trigger if enabled." />
        <Enum name="1" start="0b1" description="End of sequence. The sequence A interrupt/DMA trigger will be set when the entire set of sequence-A conversions completes. This flag will need to be explicitly cleared by software or by the DMA-clear signal in this mode. The OVERRUN bit in the SEQA_GDAT register will NOT contribute to generation of an overrun interrupt/DMA trigger since it is assumed this register may not be utilized in this mode." />
      </BitField>
      <BitField start="31" size="1" name="SEQ_ENA" description="Sequence Enable. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled.">
        <Enum name="0" start="0b0" description="Disabled. Sequence n is disabled. Sequence n triggers are ignored. If this bit is cleared while sequence n is in progress, the sequence will be halted at the end of the current conversion. After the sequence is re-enabled, a new trigger will be required to restart the sequence beginning with the next enabled channel." />
        <Enum name="1" start="0b1" description="Enabled. Sequence n is enabled." />
      </BitField>
    </Register>
    <Register start="+0xC" size="4" name="SEQ_CTRLB" access="Read/Write" description="ADC Conversion Sequence-n control register: Controls triggering and channel selection for conversion sequence-n. Also specifies interrupt mode for sequence-n." reset_value="0" reset_mask="0xFC0FFFFF">
      <BitField start="0" size="12" name="CHANNELS" description="Selects which one or more of the ADC channels will be sampled and converted when this sequence is launched. A 1 in any bit of this field will cause the corresponding channel to be included in the conversion sequence, where bit 0 corresponds to channel 0, bit 1 to channel 1 and so forth. When this conversion sequence is triggered, either by a hardware trigger or via software command, ADC conversions will be performed on each enabled channel, in sequence, beginning with the lowest-ordered channel. This field can ONLY be changed while SEQA_ENA (bit 31) is LOW. It is allowed to change this field and set bit 31 in the same write." />
      <BitField start="12" size="6" name="TRIGGER" description="Selects which of the available hardware trigger sources will cause this conversion sequence to be initiated. Program the trigger input number in this field. See Table 476. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write." />
      <BitField start="18" size="1" name="TRIGPOL" description="Select the polarity of the selected input trigger for this conversion sequence. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write.">
        <Enum name="0" start="0b0" description="Negative edge. A negative edge launches the conversion sequence on the selected trigger input." />
        <Enum name="1" start="0b1" description="Positive edge. A positive edge launches the conversion sequence on the selected trigger input." />
      </BitField>
      <BitField start="19" size="1" name="SYNCBYPASS" description="Setting this bit allows the hardware trigger input to bypass synchronization flip-flop stages and therefore shorten the time between the trigger input signal and the start of a conversion. There are slightly different criteria for whether or not this bit can be set depending on the clock operating mode: Synchronous mode (the ASYNMODE in the CTRL register = 0): Synchronization may be bypassed (this bit may be set) if the selected trigger source is already synchronous with the main system clock (eg. coming from an on-chip, system-clock-based timer). Whether this bit is set or not, a trigger pulse must be maintained for at least one system clock period. Asynchronous mode (the ASYNMODE in the CTRL register = 1): Synchronization may be bypassed (this bit may be set) if it is certain that the duration of a trigger input pulse will be at least one cycle of the ADC clock (regardless of whether the trigger comes from and on-chip or off-chip source). If this bit is NOT set, the trigger pulse must at least be maintained for one system clock period.">
        <Enum name="0" start="0b0" description="Enable trigger synchronization. The hardware trigger bypass is not enabled." />
        <Enum name="1" start="0b1" description="Bypass trigger synchronization. The hardware trigger bypass is enabled." />
      </BitField>
      <BitField start="26" size="1" name="START" description="Writing a 1 to this field will launch one pass through this conversion sequence. The behavior will be identical to a sequence triggered by a hardware trigger. Do not write 1 to this bit if the BURST bit is set. This bit is only set to a 1 momentarily when written to launch a conversion sequence. It will consequently always read back as a zero." />
      <BitField start="27" size="1" name="BURST" description="Writing a 1 to this bit will cause this conversion sequence to be continuously cycled through. Other sequence A triggers will be ignored while this bit is set. Repeated conversions can be halted by clearing this bit. The sequence currently in progress will be completed before conversions are terminated. Note that a new sequence could begin just before BURST is cleared." />
      <BitField start="28" size="1" name="SINGLESTEP" description="When this bit is set, a hardware trigger or a write to the START bit will launch a single conversion on the next channel in the sequence instead of the default response of launching an entire sequence of conversions. Once all of the channels comprising a sequence have been converted, a subsequent trigger will repeat the sequence beginning with the first enabled channel. Interrupt generation will still occur either after each individual conversion or at the end of the entire sequence, depending on the state of the MODE bit." />
      <BitField start="29" size="1" name="LOWPRIO" description="Set priority for sequence A.">
        <Enum name="0" start="0b0" description="Low priority. Any B trigger which occurs while an A conversion sequence is active will be ignored and lost." />
        <Enum name="1" start="0b1" description="High priority. Setting this bit to a 1 will permit any enabled B sequence trigger (including a B sequence software start) to immediately interrupt sequence A and launch a B sequence in it's place. The conversion currently in progress will be terminated. The A sequence that was interrupted will automatically resume after the B sequence completes. The channel whose conversion was terminated will be re-sampled and the conversion sequence will resume from that point." />
      </BitField>
      <BitField start="30" size="1" name="MODE" description="Indicates whether the primary method for retrieving conversion results for this sequence will be accomplished via reading the global data register (SEQA_GDAT) at the end of each conversion, or the individual channel result registers at the end of the entire sequence. Impacts when conversion-complete interrupt/DMA trigger for sequence-A will be generated and which overrun conditions contribute to an overrun interrupt as described below.">
        <Enum name="0" start="0b0" description="End of conversion. The sequence A interrupt/DMA trigger will be set at the end of each individual ADC conversion performed under sequence A. This flag will mirror the DATAVALID bit in the SEQA_GDAT register. The OVERRUN bit in the SEQA_GDAT register will contribute to generation of an overrun interrupt/DMA trigger if enabled." />
        <Enum name="1" start="0b1" description="End of sequence. The sequence A interrupt/DMA trigger will be set when the entire set of sequence-A conversions completes. This flag will need to be explicitly cleared by software or by the DMA-clear signal in this mode. The OVERRUN bit in the SEQA_GDAT register will NOT contribute to generation of an overrun interrupt/DMA trigger since it is assumed this register may not be utilized in this mode." />
      </BitField>
      <BitField start="31" size="1" name="SEQ_ENA" description="Sequence Enable. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled.">
        <Enum name="0" start="0b0" description="Disabled. Sequence n is disabled. Sequence n triggers are ignored. If this bit is cleared while sequence n is in progress, the sequence will be halted at the end of the current conversion. After the sequence is re-enabled, a new trigger will be required to restart the sequence beginning with the next enabled channel." />
        <Enum name="1" start="0b1" description="Enabled. Sequence n is enabled." />
      </BitField>
    </Register>
    <Register start="+0x10" size="4" name="SEQ_GDATA" access="ReadOnly" description="ADC Sequence-n Global Data register. This register contains the result of the most recent ADC conversion performed under sequence-n." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the most recent conversion performed under conversion sequence associated with this register. The result is a binary fraction representing the voltage on the currently-selected input channel as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP. DATAVALID = 1 indicates that this result has not yet been read." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Indicates whether the result of the last conversion performed was above, below or within the range established by the designated threshold comparison registers (THRn_LOW and THRn_HIGH)." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Indicates whether the result of the last conversion performed represented a crossing of the threshold level established by the designated LOW threshold comparison register (THRn_LOW) and, if so, in what direction the crossing occurred." />
      <BitField start="26" size="4" name="CHN" description="These bits contain the channel from which the RESULT bits were converted (e.g. 0000 identifies channel 0, 0001 channel 1, etc.)." />
      <BitField start="30" size="1" name="OVERRUN" description="This bit is set if a new conversion result is loaded into the RESULT field before a previous result has been read - i.e. while the DATAVALID bit is set. This bit is cleared, along with the DATAVALID bit, whenever this register is read. This bit will contribute to an overrun interrupt/DMA trigger if the MODE bit (in SEQAA_CTRL) for the corresponding sequence is set to '0' (and if the overrun interrupt is enabled)." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to '1' at the end of each conversion when a new result is loaded into the RESULT field. It is cleared whenever this register is read. This bit will cause a conversion-complete interrupt for the corresponding sequence if the MODE bit (in SEQA_CTRL) for that sequence is set to 0 (and if the interrupt is enabled)." />
    </Register>
    <Register start="+0x14" size="4" name="SEQ_GDATB" access="ReadOnly" description="ADC Sequence-n Global Data register. This register contains the result of the most recent ADC conversion performed under sequence-n." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the most recent conversion performed under conversion sequence associated with this register. The result is a binary fraction representing the voltage on the currently-selected input channel as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP. DATAVALID = 1 indicates that this result has not yet been read." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Indicates whether the result of the last conversion performed was above, below or within the range established by the designated threshold comparison registers (THRn_LOW and THRn_HIGH)." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Indicates whether the result of the last conversion performed represented a crossing of the threshold level established by the designated LOW threshold comparison register (THRn_LOW) and, if so, in what direction the crossing occurred." />
      <BitField start="26" size="4" name="CHN" description="These bits contain the channel from which the RESULT bits were converted (e.g. 0000 identifies channel 0, 0001 channel 1, etc.)." />
      <BitField start="30" size="1" name="OVERRUN" description="This bit is set if a new conversion result is loaded into the RESULT field before a previous result has been read - i.e. while the DATAVALID bit is set. This bit is cleared, along with the DATAVALID bit, whenever this register is read. This bit will contribute to an overrun interrupt/DMA trigger if the MODE bit (in SEQAA_CTRL) for the corresponding sequence is set to '0' (and if the overrun interrupt is enabled)." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to '1' at the end of each conversion when a new result is loaded into the RESULT field. It is cleared whenever this register is read. This bit will cause a conversion-complete interrupt for the corresponding sequence if the MODE bit (in SEQA_CTRL) for that sequence is set to 0 (and if the interrupt is enabled)." />
    </Register>
    <Register start="+0x20" size="4" name="DAT0" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x24" size="4" name="DAT1" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x28" size="4" name="DAT2" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x2C" size="4" name="DAT3" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x30" size="4" name="DAT4" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x34" size="4" name="DAT5" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x38" size="4" name="DAT6" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x3C" size="4" name="DAT7" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x40" size="4" name="DAT8" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x44" size="4" name="DAT9" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x48" size="4" name="DAT10" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x4C" size="4" name="DAT11" access="ReadOnly" description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0." reset_value="0" reset_mask="0xFC0FFFF0">
      <BitField start="4" size="12" name="RESULT" description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP." />
      <BitField start="16" size="2" name="THCMPRANGE" description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved." />
      <BitField start="18" size="2" name="THCMPCROSS" description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold." />
      <BitField start="26" size="4" name="CHANNEL" description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)" />
      <BitField start="30" size="1" name="OVERRUN" description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
      <BitField start="31" size="1" name="DATAVALID" description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled." />
    </Register>
    <Register start="+0x50" size="4" name="THR0_LOW" access="Read/Write" description="ADC Low Compare Threshold register 0: Contains the lower threshold level for automatic threshold comparison for any channels linked to threshold pair 0." reset_value="0" reset_mask="0xFFF0">
      <BitField start="4" size="12" name="THRLOW" description="Low threshold value against which ADC results will be compared" />
    </Register>
    <Register start="+0x54" size="4" name="THR1_LOW" access="Read/Write" description="ADC Low Compare Threshold register 1: Contains the lower threshold level for automatic threshold comparison for any channels linked to threshold pair 1." reset_value="0" reset_mask="0xFFF0">
      <BitField start="4" size="12" name="THRLOW" description="Low threshold value against which ADC results will be compared" />
    </Register>
    <Register start="+0x58" size="4" name="THR0_HIGH" access="Read/Write" description="ADC High Compare Threshold register 0: Contains the upper threshold level for automatic threshold comparison for any channels linked to threshold pair 0." reset_value="0" reset_mask="0xFFF0">
      <BitField start="4" size="12" name="THRHIGH" description="High threshold value against which ADC results will be compared" />
    </Register>
    <Register start="+0x5C" size="4" name="THR1_HIGH" access="Read/Write" description="ADC High Compare Threshold register 1: Contains the upper threshold level for automatic threshold comparison for any channels linked to threshold pair 1." reset_value="0" reset_mask="0xFFF0">
      <BitField start="4" size="12" name="THRHIGH" description="High threshold value against which ADC results will be compared" />
    </Register>
    <Register start="+0x60" size="4" name="CHAN_THRSEL" access="Read/Write" description="ADC Channel-Threshold Select register. Specifies which set of threshold compare registers are to be used for each channel" reset_value="0" reset_mask="0xFFF">
      <BitField start="0" size="1" name="CH0_THRSEL" description="Threshold select for channel 0.">
        <Enum name="0" start="0b0" description="Threshold 0. Results for this channel will be compared against the threshold levels indicated in the THR0_LOW and THR0_HIGH registers." />
        <Enum name="1" start="0b1" description="Threshold 1. Results for this channel will be compared against the threshold levels indicated in the THR1_LOW and THR1_HIGH registers." />
      </BitField>
      <BitField start="1" size="1" name="CH1_THRSEL" description="Threshold select for channel 1. See description for channel 0." />
      <BitField start="2" size="1" name="CH2_THRSEL" description="Threshold select for channel 2. See description for channel 0." />
      <BitField start="3" size="1" name="CH3_THRSEL" description="Threshold select for channel 3. See description for channel 0." />
      <BitField start="4" size="1" name="CH4_THRSEL" description="Threshold select for channel 4. See description for channel 0." />
      <BitField start="5" size="1" name="CH5_THRSEL" description="Threshold select for channel 5. See description for channel 0." />
      <BitField start="6" size="1" name="CH6_THRSEL" description="Threshold select for channel 6. See description for channel 0." />
      <BitField start="7" size="1" name="CH7_THRSEL" description="Threshold select for channel 7. See description for channel 0." />
      <BitField start="8" size="1" name="CH8_THRSEL" description="Threshold select for channel 8. See description for channel 0." />
      <BitField start="9" size="1" name="CH9_THRSEL" description="Threshold select for channel 9. See description for channel 0." />
      <BitField start="10" size="1" name="CH10_THRSEL" description="Threshold select for channel 10. See description for channel 0." />
      <BitField start="11" size="1" name="CH11_THRSEL" description="Threshold select for channel 11. See description for channel 0." />
    </Register>
    <Register start="+0x64" size="4" name="INTEN" access="Read/Write" description="ADC Interrupt Enable register. This register contains enable bits that enable the sequence-A, sequence-B, threshold compare and data overrun interrupts to be generated." reset_value="0" reset_mask="0x7FFFFFF">
      <BitField start="0" size="1" name="SEQA_INTEN" description="Sequence A interrupt enable.">
        <Enum name="0" start="0b0" description="Disabled. The sequence A interrupt/DMA trigger is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The sequence A interrupt/DMA trigger is enabled and will be asserted either upon completion of each individual conversion performed as part of sequence A, or upon completion of the entire A sequence of conversions, depending on the MODE bit in the SEQA_CTRL register." />
      </BitField>
      <BitField start="1" size="1" name="SEQB_INTEN" description="Sequence B interrupt enable.">
        <Enum name="0" start="0b0" description="Disabled. The sequence B interrupt/DMA trigger is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The sequence B interrupt/DMA trigger is enabled and will be asserted either upon completion of each individual conversion performed as part of sequence B, or upon completion of the entire B sequence of conversions, depending on the MODE bit in the SEQB_CTRL register." />
      </BitField>
      <BitField start="2" size="1" name="OVR_INTEN" description="Overrun interrupt enable.">
        <Enum name="0" start="0b0" description="Disabled. The overrun interrupt is disabled." />
        <Enum name="1" start="0b1" description="Enabled. The overrun interrupt is enabled. Detection of an overrun condition on any of the 12 channel data registers will cause an overrun interrupt/DMA trigger. In addition, if the MODE bit for a particular sequence is 0, then an overrun in the global data register for that sequence will also cause this interrupt/DMA trigger to be asserted." />
      </BitField>
      <BitField start="3" size="2" name="ADCMPINTEN0" description="Threshold comparison interrupt enable for channel 0.">
        <Enum name="0" start="0b00" description="Disabled." />
        <Enum name="1" start="0b01" description="Outside threshold." />
        <Enum name="10" start="0b10" description="Crossing threshold." />
      </BitField>
      <BitField start="5" size="2" name="ADCMPINTEN1" description="Channel 1 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="7" size="2" name="ADCMPINTEN2" description="Channel 2 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="9" size="2" name="ADCMPINTEN3" description="Channel 3 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="11" size="2" name="ADCMPINTEN4" description="Channel 4 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="13" size="2" name="ADCMPINTEN5" description="Channel 5 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="15" size="2" name="ADCMPINTEN6" description="Channel 6 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="17" size="2" name="ADCMPINTEN7" description="Channel 7 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="19" size="2" name="ADCMPINTEN8" description="Channel 8 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="21" size="2" name="ADCMPINTEN9" description="Channel 9 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="23" size="2" name="ADCMPINTEN10" description="Channel 10 threshold comparison interrupt enable. See description for channel 0." />
      <BitField start="25" size="2" name="ADCMPINTEN11" description="Channel 21 threshold comparison interrupt enable. See description for channel 0." />
    </Register>
    <Register start="+0x68" size="4" name="FLAGS" access="Read/Write" description="ADC Flags register. Contains the four interrupt/DMA trigger flags and the individual component overrun and threshold-compare flags. (The overrun bits replicate information stored in the result registers)." reset_value="0" reset_mask="0xF3FFFFFF">
      <BitField start="0" size="1" name="THCMP0" description="Threshold comparison event on Channel 0. Set to 1 upon either an out-of-range result or a threshold-crossing result if enabled to do so in the INTEN register. This bit is cleared by writing a 1." />
      <BitField start="1" size="1" name="THCMP1" description="Threshold comparison event on Channel 1. See description for channel 0." />
      <BitField start="2" size="1" name="THCMP2" description="Threshold comparison event on Channel 2. See description for channel 0." />
      <BitField start="3" size="1" name="THCMP3" description="Threshold comparison event on Channel 3. See description for channel 0." />
      <BitField start="4" size="1" name="THCMP4" description="Threshold comparison event on Channel 4. See description for channel 0." />
      <BitField start="5" size="1" name="THCMP5" description="Threshold comparison event on Channel 5. See description for channel 0." />
      <BitField start="6" size="1" name="THCMP6" description="Threshold comparison event on Channel 6. See description for channel 0." />
      <BitField start="7" size="1" name="THCMP7" description="Threshold comparison event on Channel 7. See description for channel 0." />
      <BitField start="8" size="1" name="THCMP8" description="Threshold comparison event on Channel 8. See description for channel 0." />
      <BitField start="9" size="1" name="THCMP9" description="Threshold comparison event on Channel 9. See description for channel 0." />
      <BitField start="10" size="1" name="THCMP10" description="Threshold comparison event on Channel 10. See description for channel 0." />
      <BitField start="11" size="1" name="THCMP11" description="Threshold comparison event on Channel 11. See description for channel 0." />
      <BitField start="12" size="1" name="OVERRUN0" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 0" />
      <BitField start="13" size="1" name="OVERRUN1" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 1" />
      <BitField start="14" size="1" name="OVERRUN2" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 2" />
      <BitField start="15" size="1" name="OVERRUN3" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 3" />
      <BitField start="16" size="1" name="OVERRUN4" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 4" />
      <BitField start="17" size="1" name="OVERRUN5" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 5" />
      <BitField start="18" size="1" name="OVERRUN6" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 6" />
      <BitField start="19" size="1" name="OVERRUN7" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 7" />
      <BitField start="20" size="1" name="OVERRUN8" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 8" />
      <BitField start="21" size="1" name="OVERRUN9" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 9" />
      <BitField start="22" size="1" name="OVERRUN10" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 10" />
      <BitField start="23" size="1" name="OVERRUN11" description="Mirrors the OVERRRUN status flag from the result register for ADC channel 11" />
      <BitField start="24" size="1" name="SEQA_OVR" description="Mirrors the global OVERRUN status flag in the SEQA_GDAT register" />
      <BitField start="25" size="1" name="SEQB_OVR" description="Mirrors the global OVERRUN status flag in the SEQB_GDAT register" />
      <BitField start="28" size="1" name="SEQA_INT" description="Sequence A interrupt/DMA trigger. If the MODE bit in the SEQA_CTRL register is 0, this flag will mirror the DATAVALID bit in the sequence A global data register (SEQA_GDAT), which is set at the end of every ADC conversion performed as part of sequence A. It will be cleared automatically when the SEQA_GDAT register is read. If the MODE bit in the SEQA_CTRL register is 1, this flag will be set upon completion of an entire A sequence. In this case it must be cleared by writing a 1 to this SEQA_INT bit. This interrupt must be enabled in the INTEN register." />
      <BitField start="29" size="1" name="SEQB_INT" description="Sequence A interrupt/DMA trigger. If the MODE bit in the SEQB_CTRL register is 0, this flag will mirror the DATAVALID bit in the sequence A global data register (SEQB_GDAT), which is set at the end of every ADC conversion performed as part of sequence B. It will be cleared automatically when the SEQB_GDAT register is read. If the MODE bit in the SEQB_CTRL register is 1, this flag will be set upon completion of an entire B sequence. In this case it must be cleared by writing a 1 to this SEQB_INT bit. This interrupt must be enabled in the INTEN register." />
      <BitField start="30" size="1" name="THCMP_INT" description="Threshold Comparison Interrupt. This bit will be set if any of the THCMP flags in the lower bits of this register are set to 1 (due to an enabled out-of-range or threshold-crossing event on any channel). Each type of threshold comparison interrupt on each channel must be individually enabled in the INTEN register to cause this interrupt. This bit will be cleared when all of the individual threshold flags are cleared via writing 1s to those bits." />
      <BitField start="31" size="1" name="OVR_INT" description="Overrun Interrupt flag. Any overrun bit in any of the individual channel data registers will cause this interrupt. In addition, if the MODE bit in either of the SEQn_CTRL registers is 0 then the OVERRUN bit in the corresponding SEQn_GDAT register will also cause this interrupt. This interrupt must be enabled in the INTEN register. This bit will be cleared when all of the individual overrun bits have been cleared via reading the corresponding data registers." />
    </Register>
    <Register start="+0x6C" size="4" name="STARTUP" access="Read/Write" description="ADC Startup register." reset_value="0" reset_mask="0x3">
      <BitField start="0" size="1" name="ADC_ENA" description="ADC Enable bit. This bit can only be set to a 1 by software. It is cleared automatically whenever the ADC is powered down. This bit must not be set until at least 10 microseconds after the ADC is powered up (typically by altering a system-level ADC power control bit)." />
      <BitField start="1" size="1" name="ADC_INIT" description="ADC Initialization. After enabling the ADC (setting the ADC_ENA bit), the API routine will EITHER set this bit or the CALIB bit in the CALIB register, depending on whether or not calibration is required. Setting this bit will launch the 'dummy' conversion cycle that is required if a calibration is not performed. It will also reload the stored calibration value from a previous calibration unless the BYPASSCAL bit is set. This bit should only be set AFTER the ADC_ENA bit is set and after the CALIREQD bit is tested to determine whether a calibration or an ADC dummy conversion cycle is required. It should not be set during the same write that sets the ADC_ENA bit. This bit can only be set to a '1' by software. It is cleared automatically when the 'dummy' conversion cycle completes." />
    </Register>
    <Register start="+0x70" size="4" name="CALIB" access="Read/Write" description="ADC Calibration register." reset_value="0x2" reset_mask="0x1FF">
      <BitField start="0" size="1" name="CALIB" description="Calibration request. Setting this bit will launch an ADC calibration cycle. This bit can only be set to a '1' by software. It is cleared automatically when the calibration cycle completes." />
      <BitField start="1" size="1" name="CALREQD" description="Calibration required. This read-only bit indicates if calibration is required when enabling the ADC. CALREQD will be '1' if no calibration has been run since the chip was powered-up and if the BYPASSCAL bit in the CTRL register is low. Software will test this bit to determine whether to initiate a calibration cycle or whether to set the ADC_INIT bit (in the STARTUP register) to launch the ADC initialization process which includes a 'dummy' conversion cycle. Note: A 'dummy' conversion cycle requires approximately 6 ADC clocks as opposed to 81 clocks required for calibration." />
      <BitField start="2" size="7" name="CALVALUE" description="Calibration Value. This read-only field displays the calibration value established during last calibration cycle. This value is not typically of any use to the user." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USBFSH" start="0x400A2000" description="LPC54S60x/LPC5460x USB0 Full-speed Host controller">
    <Register start="+0" size="4" name="HCREVISION" access="ReadOnly" description="BCD representation of the version of the HCI specification that is implemented by the Host Controller (HC)" reset_value="0x10" reset_mask="0xFF">
      <BitField start="0" size="8" name="REV" description="Revision." />
    </Register>
    <Register start="+0x4" size="4" name="HCCONTROL" access="Read/Write" description="Defines the operating modes of the HC" reset_value="0" reset_mask="0x7FF">
      <BitField start="0" size="2" name="CBSR" description="ControlBulkServiceRatio." />
      <BitField start="2" size="1" name="PLE" description="PeriodicListEnable." />
      <BitField start="3" size="1" name="IE" description="IsochronousEnable." />
      <BitField start="4" size="1" name="CLE" description="ControlListEnable." />
      <BitField start="5" size="1" name="BLE" description="BulkListEnable This bit is set to enable the processing of the Bulk list in the next Frame." />
      <BitField start="6" size="2" name="HCFS" description="HostControllerFunctionalState for USB 00b: USBRESET 01b: USBRESUME 10b: USBOPERATIONAL 11b: USBSUSPEND A transition to USBOPERATIONAL from another state causes SOFgeneration to begin 1 ms later." />
      <BitField start="8" size="1" name="IR" description="InterruptRouting This bit determines the routing of interrupts generated by events registered in HcInterruptStatus." />
      <BitField start="9" size="1" name="RWC" description="RemoteWakeupConnected This bit indicates whether HC supports remote wake-up signaling." />
      <BitField start="10" size="1" name="RWE" description="RemoteWakeupEnable This bit is used by HCD to enable or disable the remote wake-up feature upon the detection of upstream resume signaling." />
    </Register>
    <Register start="+0x8" size="4" name="HCCOMMANDSTATUS" access="Read/Write" description="This register is used to receive the commands from the Host Controller Driver (HCD)" reset_value="0" reset_mask="0xCF">
      <BitField start="0" size="1" name="HCR" description="HostControllerReset This bit is set by HCD to initiate a software reset of HC." />
      <BitField start="1" size="1" name="CLF" description="ControlListFilled This bit is used to indicate whether there are any TDs on the Control list." />
      <BitField start="2" size="1" name="BLF" description="BulkListFilled This bit is used to indicate whether there are any TDs on the Bulk list." />
      <BitField start="3" size="1" name="OCR" description="OwnershipChangeRequest This bit is set by an OS HCD to request a change of control of the HC." />
      <BitField start="6" size="2" name="SOC" description="SchedulingOverrunCount These bits are incremented on each scheduling overrun error." />
    </Register>
    <Register start="+0xC" size="4" name="HCINTERRUPTSTATUS" access="Read/Write" description="Indicates the status on various events that cause hardware interrupts by setting the appropriate bits" reset_value="0" reset_mask="0xFFFFFC7F">
      <BitField start="0" size="1" name="SO" description="SchedulingOverrun This bit is set when the USB schedule for the current Frame overruns and after the update of HccaFrameNumber." />
      <BitField start="1" size="1" name="WDH" description="WritebackDoneHead This bit is set immediately after HC has written HcDoneHead to HccaDoneHead." />
      <BitField start="2" size="1" name="SF" description="StartofFrame This bit is set by HC at each start of a frame and after the update of HccaFrameNumber." />
      <BitField start="3" size="1" name="RD" description="ResumeDetected This bit is set when HC detects that a device on the USB is asserting resume signaling." />
      <BitField start="4" size="1" name="UE" description="UnrecoverableError This bit is set when HC detects a system error not related to USB." />
      <BitField start="5" size="1" name="FNO" description="FrameNumberOverflow This bit is set when the MSb of HcFmNumber (bit 15) changes value, from 0 to 1 or from 1 to 0, and after HccaFrameNumber has been updated." />
      <BitField start="6" size="1" name="RHSC" description="RootHubStatusChange This bit is set when the content of HcRhStatus or the content of any of HcRhPortStatus[NumberofDownstreamPort] has changed." />
      <BitField start="10" size="22" name="OC" description="OwnershipChange This bit is set by HC when HCD sets the OwnershipChangeRequest field in HcCommandStatus." />
    </Register>
    <Register start="+0x10" size="4" name="HCINTERRUPTENABLE" access="Read/Write" description="Controls the bits in the HcInterruptStatus register and indicates which events will generate a hardware interrupt" reset_value="0" reset_mask="0xC000007F">
      <BitField start="0" size="1" name="SO" description="Scheduling Overrun interrupt." />
      <BitField start="1" size="1" name="WDH" description="HcDoneHead Writeback interrupt." />
      <BitField start="2" size="1" name="SF" description="Start of Frame interrupt." />
      <BitField start="3" size="1" name="RD" description="Resume Detect interrupt." />
      <BitField start="4" size="1" name="UE" description="Unrecoverable Error interrupt." />
      <BitField start="5" size="1" name="FNO" description="Frame Number Overflow interrupt." />
      <BitField start="6" size="1" name="RHSC" description="Root Hub Status Change interrupt." />
      <BitField start="30" size="1" name="OC" description="Ownership Change interrupt." />
      <BitField start="31" size="1" name="MIE" description="Master Interrupt Enable." />
    </Register>
    <Register start="+0x14" size="4" name="HCINTERRUPTDISABLE" access="Read/Write" description="The bits in this register are used to disable corresponding bits in the HCInterruptStatus register and in turn disable that event leading to hardware interrupt" reset_value="0" reset_mask="0xC000007F">
      <BitField start="0" size="1" name="SO" description="Scheduling Overrun interrupt." />
      <BitField start="1" size="1" name="WDH" description="HcDoneHead Writeback interrupt." />
      <BitField start="2" size="1" name="SF" description="Start of Frame interrupt." />
      <BitField start="3" size="1" name="RD" description="Resume Detect interrupt." />
      <BitField start="4" size="1" name="UE" description="Unrecoverable Error interrupt." />
      <BitField start="5" size="1" name="FNO" description="Frame Number Overflow interrupt." />
      <BitField start="6" size="1" name="RHSC" description="Root Hub Status Change interrupt." />
      <BitField start="30" size="1" name="OC" description="Ownership Change interrupt." />
      <BitField start="31" size="1" name="MIE" description="A 0 written to this field is ignored by HC." />
    </Register>
    <Register start="+0x18" size="4" name="HCHCCA" access="Read/Write" description="Contains the physical address of the host controller communication area" reset_value="0" reset_mask="0xFFFFFF00">
      <BitField start="8" size="24" name="HCCA" description="Base address of the Host Controller Communication Area." />
    </Register>
    <Register start="+0x1C" size="4" name="HCPERIODCURRENTED" access="Read/Write" description="Contains the physical address of the current isochronous or interrupt endpoint descriptor" reset_value="0" reset_mask="0xFFFFFFF0">
      <BitField start="4" size="28" name="PCED" description="The content of this register is updated by HC after a periodic ED is processed." />
    </Register>
    <Register start="+0x20" size="4" name="HCCONTROLHEADED" access="Read/Write" description="Contains the physical address of the first endpoint descriptor of the control list" reset_value="0" reset_mask="0xFFFFFFF0">
      <BitField start="4" size="28" name="CHED" description="HC traverses the Control list starting with the HcControlHeadED pointer." />
    </Register>
    <Register start="+0x24" size="4" name="HCCONTROLCURRENTED" access="Read/Write" description="Contains the physical address of the current endpoint descriptor of the control list" reset_value="0" reset_mask="0xFFFFFFF0">
      <BitField start="4" size="28" name="CCED" description="ControlCurrentED." />
    </Register>
    <Register start="+0x28" size="4" name="HCBULKHEADED" access="Read/Write" description="Contains the physical address of the first endpoint descriptor of the bulk list" reset_value="0" reset_mask="0xFFFFFFF0">
      <BitField start="4" size="28" name="BHED" description="BulkHeadED HC traverses the bulk list starting with the HcBulkHeadED pointer." />
    </Register>
    <Register start="+0x2C" size="4" name="HCBULKCURRENTED" access="Read/Write" description="Contains the physical address of the current endpoint descriptor of the bulk list" reset_value="0" reset_mask="0xFFFFFFF0">
      <BitField start="4" size="28" name="BCED" description="BulkCurrentED This is advanced to the next ED after the HC has served the current one." />
    </Register>
    <Register start="+0x30" size="4" name="HCDONEHEAD" access="Read/Write" description="Contains the physical address of the last transfer descriptor added to the 'Done' queue" reset_value="0" reset_mask="0xFFFFFFF0">
      <BitField start="4" size="28" name="DH" description="DoneHead When a TD is completed, HC writes the content of HcDoneHead to the NextTD field of the TD." />
    </Register>
    <Register start="+0x34" size="4" name="HCFMINTERVAL" access="Read/Write" description="Defines the bit time interval in a frame and the full speed maximum packet size which would not cause an overrun" reset_value="0x2EDF" reset_mask="0xFFFF3FFF">
      <BitField start="0" size="14" name="FI" description="FrameInterval This specifies the interval between two consecutive SOFs in bit times." />
      <BitField start="16" size="15" name="FSMPS" description="FSLargestDataPacket This field specifies a value which is loaded into the Largest Data Packet Counter at the beginning of each frame." />
      <BitField start="31" size="1" name="FIT" description="FrameIntervalToggle HCD toggles this bit whenever it loads a new value to FrameInterval." />
    </Register>
    <Register start="+0x38" size="4" name="HCFMREMAINING" access="Read/Write" description="A 14-bit counter showing the bit time remaining in the current frame" reset_value="0" reset_mask="0x80003FFF">
      <BitField start="0" size="14" name="FR" description="FrameRemaining This counter is decremented at each bit time." />
      <BitField start="31" size="1" name="FRT" description="FrameRemainingToggle This bit is loaded from the FrameIntervalToggle field of HcFmInterval whenever FrameRemaining reaches 0." />
    </Register>
    <Register start="+0x3C" size="4" name="HCFMNUMBER" access="Read/Write" description="Contains a 16-bit counter and provides the timing reference among events happening in the HC and the HCD" reset_value="0" reset_mask="0xFFFF">
      <BitField start="0" size="16" name="FN" description="FrameNumber This is incremented when HcFmRemaining is re-loaded." />
    </Register>
    <Register start="+0x40" size="4" name="HCPERIODICSTART" access="Read/Write" description="Contains a programmable 14-bit value which determines the earliest time HC should start processing a periodic list" reset_value="0" reset_mask="0x3FFF">
      <BitField start="0" size="14" name="PS" description="PeriodicStart After a hardware reset, this field is cleared and then set by HCD during the HC initialization." />
    </Register>
    <Register start="+0x44" size="4" name="HCLSTHRESHOLD" access="Read/Write" description="Contains 11-bit value which is used by the HC to determine whether to commit to transfer a maximum of 8-byte LS packet before EOF" reset_value="0x628" reset_mask="0xFFF">
      <BitField start="0" size="12" name="LST" description="LSThreshold This field contains a value which is compared to the FrameRemaining field prior to initiating a Low Speed transaction." />
    </Register>
    <Register start="+0x48" size="4" name="HCRHDESCRIPTORA" access="Read/Write" description="First of the two registers which describes the characteristics of the root hub" reset_value="0xFF000902" reset_mask="0xFF001FFF">
      <BitField start="0" size="8" name="NDP" description="NumberDownstreamPorts These bits specify the number of downstream ports supported by the root hub." />
      <BitField start="8" size="1" name="PSM" description="PowerSwitchingMode This bit is used to specify how the power switching of the root hub ports is controlled." />
      <BitField start="9" size="1" name="NPS" description="NoPowerSwitching These bits are used to specify whether power switching is supported or port are always powered." />
      <BitField start="10" size="1" name="DT" description="DeviceType This bit specifies that the root hub is not a compound device." />
      <BitField start="11" size="1" name="OCPM" description="OverCurrentProtectionMode This bit describes how the overcurrent status for the root hub ports are reported." />
      <BitField start="12" size="1" name="NOCP" description="NoOverCurrentProtection This bit describes how the overcurrent status for the root hub ports are reported." />
      <BitField start="24" size="8" name="POTPGT" description="PowerOnToPowerGoodTime This byte specifies the duration the HCD has to wait before accessing a powered-on port of the root hub." />
    </Register>
    <Register start="+0x4C" size="4" name="HCRHDESCRIPTORB" access="Read/Write" description="Second of the two registers which describes the characteristics of the Root Hub" reset_value="0" reset_mask="0x3FFFFFFF">
      <BitField start="0" size="16" name="DR" description="DeviceRemovable Each bit is dedicated to a port of the Root Hub." />
      <BitField start="16" size="16" name="PPCM" description="PortPowerControlMask Each bit indicates if a port is affected by a global power control command when PowerSwitchingMode is set." />
    </Register>
    <Register start="+0x50" size="4" name="HCRHSTATUS" access="Read/Write" description="This register is divided into two parts" reset_value="0" reset_mask="0x80038003">
      <BitField start="0" size="1" name="LPS" description="(read) LocalPowerStatus The Root Hub does not support the local power status feature; thus, this bit is always read as 0." />
      <BitField start="1" size="1" name="OCI" description="OverCurrentIndicator This bit reports overcurrent conditions when the global reporting is implemented." />
      <BitField start="15" size="1" name="DRWE" description="(read) DeviceRemoteWakeupEnable This bit enables a ConnectStatusChange bit as a resume event, causing a USBSUSPEND to USBRESUME state transition and setting the ResumeDetected interrupt." />
      <BitField start="16" size="1" name="LPSC" description="(read) LocalPowerStatusChange The root hub does not support the local power status feature." />
      <BitField start="17" size="1" name="OCIC" description="OverCurrentIndicatorChange This bit is set by hardware when a change has occurred to the OCI field of this register." />
      <BitField start="31" size="1" name="CRWE" description="(write) ClearRemoteWakeupEnable Writing a 1 clears DeviceRemoveWakeupEnable." />
    </Register>
    <Register start="+0x54" size="4" name="HCRHPORTSTATUS" access="Read/Write" description="Controls and reports the port events on a per-port basis" reset_value="0" reset_mask="0x1F031F">
      <BitField start="0" size="1" name="CCS" description="(read) CurrentConnectStatus This bit reflects the current state of the downstream port." />
      <BitField start="1" size="1" name="PES" description="(read) PortEnableStatus This bit indicates whether the port is enabled or disabled." />
      <BitField start="2" size="1" name="PSS" description="(read) PortSuspendStatus This bit indicates the port is suspended or in the resume sequence." />
      <BitField start="3" size="1" name="POCI" description="(read) PortOverCurrentIndicator This bit is only valid when the Root Hub is configured in such a way that overcurrent conditions are reported on a per-port basis." />
      <BitField start="4" size="1" name="PRS" description="(read) PortResetStatus When this bit is set by a write to SetPortReset, port reset signaling is asserted." />
      <BitField start="8" size="1" name="PPS" description="(read) PortPowerStatus This bit reflects the porta's power status, regardless of the type of power switching implemented." />
      <BitField start="9" size="1" name="LSDA" description="(read) LowSpeedDeviceAttached This bit indicates the speed of the device attached to this port." />
      <BitField start="16" size="1" name="CSC" description="ConnectStatusChange This bit is set whenever a connect or disconnect event occurs." />
      <BitField start="17" size="1" name="PESC" description="PortEnableStatusChange This bit is set when hardware events cause the PortEnableStatus bit to be cleared." />
      <BitField start="18" size="1" name="PSSC" description="PortSuspendStatusChange This bit is set when the full resume sequence is completed." />
      <BitField start="19" size="1" name="OCIC" description="PortOverCurrentIndicatorChange This bit is valid only if overcurrent conditions are reported on a per-port basis." />
      <BitField start="20" size="1" name="PRSC" description="PortResetStatusChange This bit is set at the end of the 10 ms port reset signal." />
    </Register>
    <Register start="+0x5C" size="4" name="PORTMODE" access="Read/Write" description="Controls the port if it is attached to the host block or the device block" reset_value="0" reset_mask="0x10101">
      <BitField start="0" size="1" name="ID" description="Port ID pin value." />
      <BitField start="8" size="1" name="ID_EN" description="Port ID pin pull-up enable." />
      <BitField start="16" size="1" name="DEV_ENABLE" description="1: device 0: host." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="USBHSH" start="0x400A3000" description="LPC54S60x/LPC5460x USB1 High-speed Host Controller">
    <Register start="+0" size="4" name="CAPLENGTH_CHIPID" access="ReadOnly" description="This register contains the offset value towards the start of the operational register space and the version number of the IP block" reset_value="0x1010010" reset_mask="0xFFFF00FF">
      <BitField start="0" size="8" name="CAPLENGTH" description="Capability Length: This is used as an offset." />
      <BitField start="16" size="16" name="CHIPID" description="Chip identification: indicates major and minor revision of the IP: [31:24] = Major revision [23:16] = Minor revision Major revisions used: 0x01: USB2." />
    </Register>
    <Register start="+0x4" size="4" name="HCSPARAMS" access="ReadOnly" description="Host Controller Structural Parameters" reset_value="0x10011" reset_mask="0x1001F">
      <BitField start="0" size="4" name="N_PORTS" description="This register specifies the number of physical downstream ports implemented on this host controller." />
      <BitField start="4" size="1" name="PPC" description="This field indicates whether the host controller implementation includes port power control." />
      <BitField start="16" size="1" name="P_INDICATOR" description="This bit indicates whether the ports support port indicator control." />
    </Register>
    <Register start="+0x8" size="4" name="HCCPARAMS" access="ReadOnly" description="Host Controller Capability Parameters" reset_value="0x20006" reset_mask="0xFFFFFFFF">
      <BitField start="17" size="1" name="LPMC" description="Link Power Management Capability." />
    </Register>
    <Register start="+0xC" size="4" name="FLADJ_FRINDEX" access="Read/Write" description="Frame Length Adjustment" reset_value="0x20" reset_mask="0x3FFF003F">
      <BitField start="0" size="6" name="FLADJ" description="Frame Length Timing Value." />
      <BitField start="16" size="14" name="FRINDEX" description="Frame Index: Bits 29 to16 in this register are used for the frame number field in the SOF packet." />
    </Register>
    <Register start="+0x10" size="4" name="ATL_PTD_BASE_ADDR" access="Read/Write" description="Memory base address where ATL PTD0 is stored" reset_value="0" reset_mask="0xFFFFFFF0">
      <BitField start="4" size="5" name="ATL_CUR" description="This indicates the current PTD that is used by the hardware when it is processing the ATL list." />
      <BitField start="9" size="23" name="ATL_BASE" description="Base address to be used by the hardware to find the start of the ATL list." />
    </Register>
    <Register start="+0x14" size="4" name="ISO_PTD_BASE_ADDR" access="Read/Write" description="Memory base address where ISO PTD0 is stored" reset_value="0" reset_mask="0xFFFFFFE0">
      <BitField start="5" size="5" name="ISO_FIRST" description="This indicates the first PTD that is used by the hardware when it is processing the ISO list." />
      <BitField start="10" size="22" name="ISO_BASE" description="Base address to be used by the hardware to find the start of the ISO list." />
    </Register>
    <Register start="+0x18" size="4" name="INT_PTD_BASE_ADDR" access="Read/Write" description="Memory base address where INT PTD0 is stored" reset_value="0" reset_mask="0xFFFFFFE0">
      <BitField start="5" size="5" name="INT_FIRST" description="This indicates the first PTD that is used by the hardware when it is processing the INT list." />
      <BitField start="10" size="22" name="INT_BASE" description="Base address to be used by the hardware to find the start of the INT list." />
    </Register>
    <Register start="+0x1C" size="4" name="DATA_PAYLOAD_BASE_ADDR" access="Read/Write" description="Memory base address that indicates the start of the data payload buffers" reset_value="0" reset_mask="0xFFFF0000">
      <BitField start="16" size="16" name="DAT_BASE" description="Base address to be used by the hardware to find the start of the data payload section." />
    </Register>
    <Register start="+0x20" size="4" name="USBCMD" access="Read/Write" description="USB Command register" reset_value="0" reset_mask="0x1F00078F">
      <BitField start="0" size="1" name="RS" description="Run/Stop: 1b = Run." />
      <BitField start="1" size="1" name="HCRESET" description="Host Controller Reset: This control bit is used by the software to reset the host controller." />
      <BitField start="2" size="2" name="FLS" description="Frame List Size: This field specifies the size of the frame list." />
      <BitField start="7" size="1" name="LHCR" description="Light Host Controller Reset: This bit allows the driver software to reset the host controller without affecting the state of the ports." />
      <BitField start="8" size="1" name="ATL_EN" description="ATL List enabled." />
      <BitField start="9" size="1" name="ISO_EN" description="ISO List enabled." />
      <BitField start="10" size="1" name="INT_EN" description="INT List enabled." />
      <BitField start="24" size="4" name="HIRD" description="Host-Initiated Resume Duration." />
      <BitField start="28" size="1" name="LPM_RWU" description="bRemoteWake field." />
    </Register>
    <Register start="+0x24" size="4" name="USBSTS" access="Read/Write" description="USB Interrupt Status register" reset_value="0" reset_mask="0xF000C">
      <BitField start="2" size="1" name="PCD" description="Port Change Detect: The host controller sets this bit to logic 1 when any port has a change bit transition from a 0 to a one or a Force Port Resume bit transition from a 0 to a 1 as a result of a J-K transition detected on a suspended port." />
      <BitField start="3" size="1" name="FLR" description="Frame List Rollover: The host controller sets this bit to logic 1 when the frame list index rolls over its maximum value to 0." />
      <BitField start="16" size="1" name="ATL_IRQ" description="ATL IRQ: Indicates that an ATL PTD (with I-bit set) was completed." />
      <BitField start="17" size="1" name="ISO_IRQ" description="ISO IRQ: Indicates that an ISO PTD (with I-bit set) was completed." />
      <BitField start="18" size="1" name="INT_IRQ" description="INT IRQ: Indicates that an INT PTD (with I-bit set) was completed." />
      <BitField start="19" size="1" name="SOF_IRQ" description="SOF interrupt: Every time when the host sends a Start of Frame token on the USB bus, this bit is set." />
    </Register>
    <Register start="+0x28" size="4" name="USBINTR" access="Read/Write" description="USB Interrupt Enable register" reset_value="0" reset_mask="0xF000C">
      <BitField start="2" size="1" name="PCDE" description="Port Change Detect Interrupt Enable: 1: enable 0: disable." />
      <BitField start="3" size="1" name="FLRE" description="Frame List Rollover Interrupt Enable: 1: enable 0: disable." />
      <BitField start="16" size="1" name="ATL_IRQ_E" description="ATL IRQ Enable bit: 1: enable 0: disable." />
      <BitField start="17" size="1" name="ISO_IRQ_E" description="ISO IRQ Enable bit: 1: enable 0: disable." />
      <BitField start="18" size="1" name="INT_IRQ_E" description="INT IRQ Enable bit: 1: enable 0: disable." />
      <BitField start="19" size="1" name="SOF_E" description="SOF Interrupt Enable bit: 1: enable 0: disable." />
    </Register>
    <Register start="+0x2C" size="4" name="PORTSC1" access="Read/Write" description="Port Status and Control register" reset_value="0" reset_mask="0xFFFFDFFF">
      <BitField start="0" size="1" name="CCS" description="Current Connect Status: Logic 1 indicates a device is present on the port." />
      <BitField start="1" size="1" name="CSC" description="Connect Status Change: Logic 1 means that the value of CCS has changed." />
      <BitField start="2" size="1" name="PED" description="Port Enabled/Disabled." />
      <BitField start="3" size="1" name="PEDC" description="Port Enabled/Disabled Change: Logic 1 means that the value of PED has changed." />
      <BitField start="4" size="1" name="OCA" description="Over-current active: Logic 1 means that this port has an over-current condition." />
      <BitField start="5" size="1" name="OCC" description="Over-current change: Logic 1 means that the value of OCA has changed." />
      <BitField start="6" size="1" name="FPR" description="Force Port Resume: Logic 1 means resume (K-state) detected or driven on the port." />
      <BitField start="7" size="1" name="SUSP" description="Suspend: Logic 1 means port is in the suspend state." />
      <BitField start="8" size="1" name="PR" description="Port Reset: Logic 1 means the port is in the reset state." />
      <BitField start="9" size="1" name="SUS_L1" description="Suspend using L1 0b = Suspend using L2 1b = Suspend using L1 When this bit is set to a 1 and a non-zero value is specified in the Device Address field, the host controller will generate an LPM Token to enter the L1 state whenever software writes a one to the Suspend bit, as well as L1 exit timing during any device or host-initiated resume." />
      <BitField start="10" size="2" name="LS" description="Line Status: This field reflects the current logical levels of the DP (bit 11) and DM (bit 10) signal lines." />
      <BitField start="12" size="1" name="PP" description="Port Power: The function of this bit depends on the value of the Port Power Control (PPC) bit in the HCSPARAMS register." />
      <BitField start="14" size="2" name="PIC" description="Port Indicator Control : Writing to this field has no effect if the P_INDICATOR bit in the HCSPARAMS register is logic 0." />
      <BitField start="16" size="4" name="PTC" description="Port Test Control: A non-zero value indicates that the port is operating in the test mode as indicated by the value." />
      <BitField start="20" size="2" name="PSPD" description="Port Speed: 00b: Low-speed 01b: Full-speed 10b: High-speed 11b: Reserved." />
      <BitField start="22" size="1" name="WOO" description="Wake on overcurrent enable: Writing this bit to a one enables the port to be sensitive to overcurrent conditions as wake-up events." />
      <BitField start="23" size="2" name="SUS_STAT" description="These two bits are used by software to determine whether the most recent L1 suspend request was successful: 00b: Success-state transition was successful (ACK) 01b: Not Yet - Device was unable to enter the L1 state at this time (NYET) 10b: Not supported - Device does not support the L1 state (STALL) 11b: Timeout/Error - Device failed to respond or an error occurred." />
      <BitField start="25" size="7" name="DEV_ADD" description="Device Address for LPM tokens." />
    </Register>
    <Register start="+0x30" size="4" name="ATL_PTD_DONE_MAP" access="Read/Write" description="Done map for each ATL PTD" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ATL_DONE" description="The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed." />
    </Register>
    <Register start="+0x34" size="4" name="ATL_PTD_SKIP_MAP" access="Read/Write" description="Skip map for each ATL PTD" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ATL_SKIP" description="When a bit in the PTD Skip Map is set to logic 1, the corresponding PTD will be skipped, independent of the V bit setting." />
    </Register>
    <Register start="+0x38" size="4" name="ISO_PTD_DONE_MAP" access="Read/Write" description="Done map for each ISO PTD" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ISO_DONE" description="The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed." />
    </Register>
    <Register start="+0x3C" size="4" name="ISO_PTD_SKIP_MAP" access="Read/Write" description="Skip map for each ISO PTD" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="ISO_SKIP" description="The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed." />
    </Register>
    <Register start="+0x40" size="4" name="INT_PTD_DONE_MAP" access="Read/Write" description="Done map for each INT PTD" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="INT_DONE" description="The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed." />
    </Register>
    <Register start="+0x44" size="4" name="INT_PTD_SKIP_MAP" access="Read/Write" description="Skip map for each INT PTD" reset_value="0" reset_mask="0xFFFFFFFF">
      <BitField start="0" size="32" name="INT_SKIP" description="When a bit in the PTD Skip Map is set to logic 1, the corresponding PTD will be skipped, independent of the V bit setting." />
    </Register>
    <Register start="+0x48" size="4" name="LAST_PTD_INUSE" access="Read/Write" description="Marks the last PTD in the list for ISO, INT and ATL" reset_value="0" reset_mask="0x1F1F1F">
      <BitField start="0" size="5" name="ATL_LAST" description="If hardware has reached this PTD and the J bit is not set, it will go to PTD0 as the next PTD to be processed." />
      <BitField start="8" size="5" name="ISO_LAST" description="This indicates the last PTD in the ISO list." />
      <BitField start="16" size="5" name="INT_LAST" description="This indicates the last PTD in the INT list." />
    </Register>
    <Register start="+0x4C" size="4" name="UTMIPLUS_ULPI_DEBUG" access="Read/Write" description="Register to read/write registers in the attached USB PHY" reset_value="0" reset_mask="0x83FFFFFF">
      <BitField start="0" size="8" name="PHY_ADDR" description="UTMI+ mode: Bits 3:0 are used to control VControl signal on Vendor Interface of UTMI+ ULPI mode: Bits 7:0 are used as the address when doing a register access over the ULPI interface." />
      <BitField start="8" size="8" name="PHY_WDATA" description="UTMI+ mode: Reserved." />
      <BitField start="16" size="8" name="PHY_RDATA" description="UTMI+ mode: Bits 7:0 contains the value returned by the VStatus signal on Vendor Interface of UTMI+ ULPI mode: Bits 7:0 are used for the read data when reading a value to a ULPI PHY register." />
      <BitField start="24" size="1" name="PHY_RW" description="UTMI+ mode: Reserved." />
      <BitField start="25" size="1" name="PHY_ACCESS" description="Software writes this bit to one to start a read or write operation." />
      <BitField start="31" size="1" name="PHY_MODE" description="This bit indicates if the interface between the controller is UTMI+ or ULPI 0b: UTMI+ 1b: ULPI If the hardware supports both modes, this bit is RW by SW." />
    </Register>
    <Register start="+0x50" size="4" name="PORTMODE" access="Read/Write" description="Controls the port if it is attached to the host block or the device block" reset_value="0x40000" reset_mask="0xD0101">
      <BitField start="0" size="1" name="ID0" description="Port 0 ID pin value." />
      <BitField start="8" size="1" name="ID0_EN" description="Port 0 ID pin pull-up enable." />
      <BitField start="16" size="1" name="DEV_ENABLE" description="If this bit is set to one, one of the ports will behave as a USB device." />
      <BitField start="18" size="1" name="SW_CTRL_PDCOM" description="This bit indicates if the PHY power-down input is controlled by software or by hardware." />
      <BitField start="19" size="1" name="SW_PDCOM" description="This bit is only used when SW_CTRL_PDCOM is set to 1b." />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="NVIC" start="0xE000E100" description="Nested Vectored Interrupt Controller">
    <Register name="NVIC_ISER0" description="Interrupt Set-Enable Register 0" start="0xE000E100">
      <BitField name="WDT_BOD" start="0" size="1" />
      <BitField name="DMA0" start="1" size="1" />
      <BitField name="GINT0" start="2" size="1" />
      <BitField name="GINT1" start="3" size="1" />
      <BitField name="PIN_INT0" start="4" size="1" />
      <BitField name="PIN_INT1" start="5" size="1" />
      <BitField name="PIN_INT2" start="6" size="1" />
      <BitField name="PIN_INT3" start="7" size="1" />
      <BitField name="UTICK0" start="8" size="1" />
      <BitField name="MRT0" start="9" size="1" />
      <BitField name="CTIMER0" start="10" size="1" />
      <BitField name="CTIMER1" start="11" size="1" />
      <BitField name="SCT0" start="12" size="1" />
      <BitField name="CTIMER3" start="13" size="1" />
      <BitField name="FLEXCOMM0" start="14" size="1" />
      <BitField name="FLEXCOMM1" start="15" size="1" />
      <BitField name="FLEXCOMM2" start="16" size="1" />
      <BitField name="FLEXCOMM3" start="17" size="1" />
      <BitField name="FLEXCOMM4" start="18" size="1" />
      <BitField name="FLEXCOMM5" start="19" size="1" />
      <BitField name="FLEXCOMM6" start="20" size="1" />
      <BitField name="FLEXCOMM7" start="21" size="1" />
      <BitField name="ADC0_SEQA" start="22" size="1" />
      <BitField name="ADC0_SEQB" start="23" size="1" />
      <BitField name="ADC0_THCMP" start="24" size="1" />
      <BitField name="DMIC0" start="25" size="1" />
      <BitField name="HWVAD0" start="26" size="1" />
      <BitField name="USB0_NEEDCLK" start="27" size="1" />
      <BitField name="USB0" start="28" size="1" />
      <BitField name="RTC" start="29" size="1" />
    </Register>
    <Register name="NVIC_ISER1" description="Interrupt Set-Enable Register 1" start="0xE000E104">
      <BitField name="PIN_INT4" start="0" size="1" />
      <BitField name="PIN_INT5" start="1" size="1" />
      <BitField name="PIN_INT6" start="2" size="1" />
      <BitField name="PIN_INT7" start="3" size="1" />
      <BitField name="CTIMER2" start="4" size="1" />
      <BitField name="CTIMER4" start="5" size="1" />
      <BitField name="RIT" start="6" size="1" />
      <BitField name="SPIFI0" start="7" size="1" />
      <BitField name="FLEXCOMM8" start="8" size="1" />
      <BitField name="FLEXCOMM9" start="9" size="1" />
      <BitField name="SDIO" start="10" size="1" />
      <BitField name="USB1" start="15" size="1" />
      <BitField name="USB1_NEEDCLK" start="16" size="1" />
      <BitField name="EEPROM" start="20" size="1" />
      <BitField name="SMARTCARD0" start="23" size="1" />
      <BitField name="SMARTCARD1" start="24" size="1" />
    </Register>
    <Register name="NVIC_ICER0" description="Interrupt Clear-Enable Register 0" start="0xE000E180">
      <BitField name="WDT_BOD" start="0" size="1" />
      <BitField name="DMA0" start="1" size="1" />
      <BitField name="GINT0" start="2" size="1" />
      <BitField name="GINT1" start="3" size="1" />
      <BitField name="PIN_INT0" start="4" size="1" />
      <BitField name="PIN_INT1" start="5" size="1" />
      <BitField name="PIN_INT2" start="6" size="1" />
      <BitField name="PIN_INT3" start="7" size="1" />
      <BitField name="UTICK0" start="8" size="1" />
      <BitField name="MRT0" start="9" size="1" />
      <BitField name="CTIMER0" start="10" size="1" />
      <BitField name="CTIMER1" start="11" size="1" />
      <BitField name="SCT0" start="12" size="1" />
      <BitField name="CTIMER3" start="13" size="1" />
      <BitField name="FLEXCOMM0" start="14" size="1" />
      <BitField name="FLEXCOMM1" start="15" size="1" />
      <BitField name="FLEXCOMM2" start="16" size="1" />
      <BitField name="FLEXCOMM3" start="17" size="1" />
      <BitField name="FLEXCOMM4" start="18" size="1" />
      <BitField name="FLEXCOMM5" start="19" size="1" />
      <BitField name="FLEXCOMM6" start="20" size="1" />
      <BitField name="FLEXCOMM7" start="21" size="1" />
      <BitField name="ADC0_SEQA" start="22" size="1" />
      <BitField name="ADC0_SEQB" start="23" size="1" />
      <BitField name="ADC0_THCMP" start="24" size="1" />
      <BitField name="DMIC0" start="25" size="1" />
      <BitField name="HWVAD0" start="26" size="1" />
      <BitField name="USB0_NEEDCLK" start="27" size="1" />
      <BitField name="USB0" start="28" size="1" />
      <BitField name="RTC" start="29" size="1" />
    </Register>
    <Register name="NVIC_ICER1" description="Interrupt Clear-Enable Register 1" start="0xE000E184">
      <BitField name="PIN_INT4" start="0" size="1" />
      <BitField name="PIN_INT5" start="1" size="1" />
      <BitField name="PIN_INT6" start="2" size="1" />
      <BitField name="PIN_INT7" start="3" size="1" />
      <BitField name="CTIMER2" start="4" size="1" />
      <BitField name="CTIMER4" start="5" size="1" />
      <BitField name="RIT" start="6" size="1" />
      <BitField name="SPIFI0" start="7" size="1" />
      <BitField name="FLEXCOMM8" start="8" size="1" />
      <BitField name="FLEXCOMM9" start="9" size="1" />
      <BitField name="SDIO" start="10" size="1" />
      <BitField name="USB1" start="15" size="1" />
      <BitField name="USB1_NEEDCLK" start="16" size="1" />
      <BitField name="EEPROM" start="20" size="1" />
      <BitField name="SMARTCARD0" start="23" size="1" />
      <BitField name="SMARTCARD1" start="24" size="1" />
    </Register>
    <Register name="NVIC_ISPR0" description="Interrupt Set-Pending Register 0" start="0xE000E200">
      <BitField name="WDT_BOD" start="0" size="1" />
      <BitField name="DMA0" start="1" size="1" />
      <BitField name="GINT0" start="2" size="1" />
      <BitField name="GINT1" start="3" size="1" />
      <BitField name="PIN_INT0" start="4" size="1" />
      <BitField name="PIN_INT1" start="5" size="1" />
      <BitField name="PIN_INT2" start="6" size="1" />
      <BitField name="PIN_INT3" start="7" size="1" />
      <BitField name="UTICK0" start="8" size="1" />
      <BitField name="MRT0" start="9" size="1" />
      <BitField name="CTIMER0" start="10" size="1" />
      <BitField name="CTIMER1" start="11" size="1" />
      <BitField name="SCT0" start="12" size="1" />
      <BitField name="CTIMER3" start="13" size="1" />
      <BitField name="FLEXCOMM0" start="14" size="1" />
      <BitField name="FLEXCOMM1" start="15" size="1" />
      <BitField name="FLEXCOMM2" start="16" size="1" />
      <BitField name="FLEXCOMM3" start="17" size="1" />
      <BitField name="FLEXCOMM4" start="18" size="1" />
      <BitField name="FLEXCOMM5" start="19" size="1" />
      <BitField name="FLEXCOMM6" start="20" size="1" />
      <BitField name="FLEXCOMM7" start="21" size="1" />
      <BitField name="ADC0_SEQA" start="22" size="1" />
      <BitField name="ADC0_SEQB" start="23" size="1" />
      <BitField name="ADC0_THCMP" start="24" size="1" />
      <BitField name="DMIC0" start="25" size="1" />
      <BitField name="HWVAD0" start="26" size="1" />
      <BitField name="USB0_NEEDCLK" start="27" size="1" />
      <BitField name="USB0" start="28" size="1" />
      <BitField name="RTC" start="29" size="1" />
    </Register>
    <Register name="NVIC_ISPR1" description="Interrupt Set-Pending Register 1" start="0xE000E204">
      <BitField name="PIN_INT4" start="0" size="1" />
      <BitField name="PIN_INT5" start="1" size="1" />
      <BitField name="PIN_INT6" start="2" size="1" />
      <BitField name="PIN_INT7" start="3" size="1" />
      <BitField name="CTIMER2" start="4" size="1" />
      <BitField name="CTIMER4" start="5" size="1" />
      <BitField name="RIT" start="6" size="1" />
      <BitField name="SPIFI0" start="7" size="1" />
      <BitField name="FLEXCOMM8" start="8" size="1" />
      <BitField name="FLEXCOMM9" start="9" size="1" />
      <BitField name="SDIO" start="10" size="1" />
      <BitField name="USB1" start="15" size="1" />
      <BitField name="USB1_NEEDCLK" start="16" size="1" />
      <BitField name="EEPROM" start="20" size="1" />
      <BitField name="SMARTCARD0" start="23" size="1" />
      <BitField name="SMARTCARD1" start="24" size="1" />
    </Register>
    <Register name="NVIC_ICPR0" description="Interrupt Clear-Pending Register 0" start="0xE000E280">
      <BitField name="WDT_BOD" start="0" size="1" />
      <BitField name="DMA0" start="1" size="1" />
      <BitField name="GINT0" start="2" size="1" />
      <BitField name="GINT1" start="3" size="1" />
      <BitField name="PIN_INT0" start="4" size="1" />
      <BitField name="PIN_INT1" start="5" size="1" />
      <BitField name="PIN_INT2" start="6" size="1" />
      <BitField name="PIN_INT3" start="7" size="1" />
      <BitField name="UTICK0" start="8" size="1" />
      <BitField name="MRT0" start="9" size="1" />
      <BitField name="CTIMER0" start="10" size="1" />
      <BitField name="CTIMER1" start="11" size="1" />
      <BitField name="SCT0" start="12" size="1" />
      <BitField name="CTIMER3" start="13" size="1" />
      <BitField name="FLEXCOMM0" start="14" size="1" />
      <BitField name="FLEXCOMM1" start="15" size="1" />
      <BitField name="FLEXCOMM2" start="16" size="1" />
      <BitField name="FLEXCOMM3" start="17" size="1" />
      <BitField name="FLEXCOMM4" start="18" size="1" />
      <BitField name="FLEXCOMM5" start="19" size="1" />
      <BitField name="FLEXCOMM6" start="20" size="1" />
      <BitField name="FLEXCOMM7" start="21" size="1" />
      <BitField name="ADC0_SEQA" start="22" size="1" />
      <BitField name="ADC0_SEQB" start="23" size="1" />
      <BitField name="ADC0_THCMP" start="24" size="1" />
      <BitField name="DMIC0" start="25" size="1" />
      <BitField name="HWVAD0" start="26" size="1" />
      <BitField name="USB0_NEEDCLK" start="27" size="1" />
      <BitField name="USB0" start="28" size="1" />
      <BitField name="RTC" start="29" size="1" />
    </Register>
    <Register name="NVIC_ICPR1" description="Interrupt Clear-Pending Register 1" start="0xE000E284">
      <BitField name="PIN_INT4" start="0" size="1" />
      <BitField name="PIN_INT5" start="1" size="1" />
      <BitField name="PIN_INT6" start="2" size="1" />
      <BitField name="PIN_INT7" start="3" size="1" />
      <BitField name="CTIMER2" start="4" size="1" />
      <BitField name="CTIMER4" start="5" size="1" />
      <BitField name="RIT" start="6" size="1" />
      <BitField name="SPIFI0" start="7" size="1" />
      <BitField name="FLEXCOMM8" start="8" size="1" />
      <BitField name="FLEXCOMM9" start="9" size="1" />
      <BitField name="SDIO" start="10" size="1" />
      <BitField name="USB1" start="15" size="1" />
      <BitField name="USB1_NEEDCLK" start="16" size="1" />
      <BitField name="EEPROM" start="20" size="1" />
      <BitField name="SMARTCARD0" start="23" size="1" />
      <BitField name="SMARTCARD1" start="24" size="1" />
    </Register>
    <Register name="NVIC_IABR0" description="Interrupt Active Bit Register 0" start="0xE000E300" access="ReadOnly">
      <BitField name="WDT_BOD" start="0" size="1" />
      <BitField name="DMA0" start="1" size="1" />
      <BitField name="GINT0" start="2" size="1" />
      <BitField name="GINT1" start="3" size="1" />
      <BitField name="PIN_INT0" start="4" size="1" />
      <BitField name="PIN_INT1" start="5" size="1" />
      <BitField name="PIN_INT2" start="6" size="1" />
      <BitField name="PIN_INT3" start="7" size="1" />
      <BitField name="UTICK0" start="8" size="1" />
      <BitField name="MRT0" start="9" size="1" />
      <BitField name="CTIMER0" start="10" size="1" />
      <BitField name="CTIMER1" start="11" size="1" />
      <BitField name="SCT0" start="12" size="1" />
      <BitField name="CTIMER3" start="13" size="1" />
      <BitField name="FLEXCOMM0" start="14" size="1" />
      <BitField name="FLEXCOMM1" start="15" size="1" />
      <BitField name="FLEXCOMM2" start="16" size="1" />
      <BitField name="FLEXCOMM3" start="17" size="1" />
      <BitField name="FLEXCOMM4" start="18" size="1" />
      <BitField name="FLEXCOMM5" start="19" size="1" />
      <BitField name="FLEXCOMM6" start="20" size="1" />
      <BitField name="FLEXCOMM7" start="21" size="1" />
      <BitField name="ADC0_SEQA" start="22" size="1" />
      <BitField name="ADC0_SEQB" start="23" size="1" />
      <BitField name="ADC0_THCMP" start="24" size="1" />
      <BitField name="DMIC0" start="25" size="1" />
      <BitField name="HWVAD0" start="26" size="1" />
      <BitField name="USB0_NEEDCLK" start="27" size="1" />
      <BitField name="USB0" start="28" size="1" />
      <BitField name="RTC" start="29" size="1" />
    </Register>
    <Register name="NVIC_IABR1" description="Interrupt Active Bit Register 1" start="0xE000E304" access="ReadOnly">
      <BitField name="PIN_INT4" start="0" size="1" />
      <BitField name="PIN_INT5" start="1" size="1" />
      <BitField name="PIN_INT6" start="2" size="1" />
      <BitField name="PIN_INT7" start="3" size="1" />
      <BitField name="CTIMER2" start="4" size="1" />
      <BitField name="CTIMER4" start="5" size="1" />
      <BitField name="RIT" start="6" size="1" />
      <BitField name="SPIFI0" start="7" size="1" />
      <BitField name="FLEXCOMM8" start="8" size="1" />
      <BitField name="FLEXCOMM9" start="9" size="1" />
      <BitField name="SDIO" start="10" size="1" />
      <BitField name="USB1" start="15" size="1" />
      <BitField name="USB1_NEEDCLK" start="16" size="1" />
      <BitField name="EEPROM" start="20" size="1" />
      <BitField name="SMARTCARD0" start="23" size="1" />
      <BitField name="SMARTCARD1" start="24" size="1" />
    </Register>
    <Register name="NVIC_IPR0" description="Interrupt Priority Register 0" start="0xE000E400">
      <BitField name="WDT_BOD" start="5" size="3" />
      <BitField name="DMA0" start="13" size="3" />
      <BitField name="GINT0" start="21" size="3" />
      <BitField name="GINT1" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR1" description="Interrupt Priority Register 1" start="0xE000E404">
      <BitField name="PIN_INT0" start="5" size="3" />
      <BitField name="PIN_INT1" start="13" size="3" />
      <BitField name="PIN_INT2" start="21" size="3" />
      <BitField name="PIN_INT3" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR2" description="Interrupt Priority Register 2" start="0xE000E408">
      <BitField name="UTICK0" start="5" size="3" />
      <BitField name="MRT0" start="13" size="3" />
      <BitField name="CTIMER0" start="21" size="3" />
      <BitField name="CTIMER1" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR3" description="Interrupt Priority Register 3" start="0xE000E40C">
      <BitField name="SCT0" start="5" size="3" />
      <BitField name="CTIMER3" start="13" size="3" />
      <BitField name="FLEXCOMM0" start="21" size="3" />
      <BitField name="FLEXCOMM1" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR4" description="Interrupt Priority Register 4" start="0xE000E410">
      <BitField name="FLEXCOMM2" start="5" size="3" />
      <BitField name="FLEXCOMM3" start="13" size="3" />
      <BitField name="FLEXCOMM4" start="21" size="3" />
      <BitField name="FLEXCOMM5" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR5" description="Interrupt Priority Register 5" start="0xE000E414">
      <BitField name="FLEXCOMM6" start="5" size="3" />
      <BitField name="FLEXCOMM7" start="13" size="3" />
      <BitField name="ADC0_SEQA" start="21" size="3" />
      <BitField name="ADC0_SEQB" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR6" description="Interrupt Priority Register 6" start="0xE000E418">
      <BitField name="ADC0_THCMP" start="5" size="3" />
      <BitField name="DMIC0" start="13" size="3" />
      <BitField name="HWVAD0" start="21" size="3" />
      <BitField name="USB0_NEEDCLK" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR7" description="Interrupt Priority Register 7" start="0xE000E41C">
      <BitField name="USB0" start="5" size="3" />
      <BitField name="RTC" start="13" size="3" />
    </Register>
    <Register name="NVIC_IPR8" description="Interrupt Priority Register 8" start="0xE000E420">
      <BitField name="PIN_INT4" start="5" size="3" />
      <BitField name="PIN_INT5" start="13" size="3" />
      <BitField name="PIN_INT6" start="21" size="3" />
      <BitField name="PIN_INT7" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR9" description="Interrupt Priority Register 9" start="0xE000E424">
      <BitField name="CTIMER2" start="5" size="3" />
      <BitField name="CTIMER4" start="13" size="3" />
      <BitField name="RIT" start="21" size="3" />
      <BitField name="SPIFI0" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR10" description="Interrupt Priority Register 10" start="0xE000E428">
      <BitField name="FLEXCOMM8" start="5" size="3" />
      <BitField name="FLEXCOMM9" start="13" size="3" />
      <BitField name="SDIO" start="21" size="3" />
    </Register>
    <Register name="NVIC_IPR11" description="Interrupt Priority Register 11" start="0xE000E42C">
      <BitField name="USB1" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR12" description="Interrupt Priority Register 12" start="0xE000E430">
      <BitField name="USB1_NEEDCLK" start="5" size="3" />
    </Register>
    <Register name="NVIC_IPR13" description="Interrupt Priority Register 13" start="0xE000E434">
      <BitField name="EEPROM" start="5" size="3" />
      <BitField name="SMARTCARD0" start="29" size="3" />
    </Register>
    <Register name="NVIC_IPR14" description="Interrupt Priority Register 14" start="0xE000E438">
      <BitField name="SMARTCARD1" start="5" size="3" />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SysTick" start="0xE000E010" description="24-bit System Timer">
    <Register name="SYST_CSR" start="0xE000E010" description="SysTick Control and Status Register">
      <BitField name="COUNTFLAG" start="16" size="1" description="Counter Flag" />
      <BitField name="CLKSOURCE" start="2" size="1" description="Timer Clock Source" />
      <BitField name="TICKINT" start="1" size="1" description="Tick Interrupt Enable" />
      <BitField name="ENABLE" start="0" size="1" description="Enable SysTick Timer" />
    </Register>
    <Register name="SYST_RVR" start="0xE000E014" description="SysTick Reload Value Register">
      <BitField name="RELOAD" start="0" size="24" description="Value to load into the SYST_CVR when the counter is enabled and when it reaches 0" />
    </Register>
    <Register name="SYST_CVR" start="0xE000E018" description="SysTick Current Value Register Register">
      <BitField name="CURRENT" start="0" size="24" description="The current value of the SysTick counter" />
    </Register>
    <Register name="SYST_CALIB" start="0xE000E01C" access="ReadOnly" description="SysTick Calibration Value Register">
      <BitField name="NOREF" start="31" size="1" description="Indicates whether the device provides a reference clock to the processor" />
      <BitField name="SKEW" start="30" size="1" description="Indicates whether the TENMS value is exact" />
      <BitField name="TENMS" start="0" size="24" description="Reload value for 10ms (100Hz) timing, subject to system clock skew errors" />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="SCB" start="" description="System Control Block">
    <Register name="ACTLR" start="0xE000E008" description="Auxiliary Control Register">
      <BitField name="DISOOFP" start="9" size="1" description="Disables floating pointinstructions completing outof order with respect to integer instructions" />
      <BitField name="DISFPCA" start="8" size="1" description="When set to 1, disables IT folding" />
      <BitField name="DISFOLD" start="2" size="1" description="When set to 1, disables write buffer use during default memory map accesses" />
      <BitField name="DISDEFWBUF" start="1" size="1" description="When set to 1, disables write buffer use during default memory map accesses" />
      <BitField name="DISMCYCINT" start="0" size="1" description="When set to 1, disables interruption of load multiple and store multiple instructions" />
    </Register>
    <Register name="CPUID" start="0xE000ED00" access="ReadOnly" description="CPUID Register">
      <BitField name="IMPLEMENTER" start="24" size="8" description="Implementer Code" />
      <BitField name="VARIANT" start="20" size="4" description="Variant Number" />
      <BitField name="PARTNO" start="4" size="12" description="Part Number" />
      <BitField name="REVISION" start="0" size="4" description="Revision Number" />
    </Register>
    <Register name="ICSR" start="0xE000ED04" description="Interrupt Control and State Register">
      <BitField name="NMIPENDSET" start="31" size="1" description="NMI set-pending bit" />
      <BitField name="PENDSVSET" start="28" size="1" description="PendSV set-pending bit" />
      <BitField name="PENDSVCLR" start="27" size="1" description="PendSV clear-pending bit" />
      <BitField name="PENDSTSET" start="26" size="1" description="SysTick exception set-pending bit" />
      <BitField name="PENDSTCLR" start="25" size="1" description="SysTick exception clear-pending bit" />
      <BitField name="ISRPREEMPT" start="23" size="1" description="" />
      <BitField name="ISRPENDING" start="22" size="1" description="Interrupt pending flag" />
      <BitField name="VECTPENDING" start="12" size="9" description="Indicates the exception number of the highest priority pending enabled exception" />
      <BitField name="RETTOBASE" start="11" size="1" description="Indicates whether there are preempted active exceptions" />
      <BitField name="VECTACTIVE" start="0" size="9" description="Contains the active exception number" />
    </Register>
    <Register name="VTOR" start="0xE000ED08" description="Vector Table Offset Register">
      <BitField name="TBLOFF" start="7" size="25" description="Vector table base offset field" />
    </Register>
    <Register name="AIRCR" start="0xE000ED0C" description="Application Interrupt and Reset Control Register">
      <BitField name="VECTKEY" start="16" size="16" description="Register key" />
      <BitField name="ENDIANESS" start="15" size="1" description="Data endianness bit" />
      <BitField name="PRIGROUP" start="8" size="3" description="Interrupt priority grouping field" />
      <BitField name="SYSRESETREQ" start="2" size="1" description="System reset request bit" />
      <BitField name="VECTCLRACTIVE" start="1" size="1" description="" />
      <BitField name="VECTRESET" start="0" size="1" description="" />
    </Register>
    <Register name="SCR" start="0xE000ED10" description="System Control Register">
      <BitField name="SEVONPEND" start="4" size="1" description="Send event on pending bit" />
      <BitField name="SLEEPDEEP" start="2" size="1" description="Controls whether the processor uses sleep or deep sleep as its low power mode" />
      <BitField name="SLEEPONEXIT" start="1" size="1" description="Indicates sleep-on-exit when returning from Handler mode to Thread mode" />
    </Register>
    <Register name="CCR" start="0xE000ED14" access="ReadOnly" description="Configuration and Control Register">
      <BitField name="STKALIGN" start="9" size="1" description="Indicates stack alignment on exception entry" />
      <BitField name="BFHFNMIGN" start="8" size="1" description="Enables handlers with priority -1 or-2 to ignore data BusFaults caused by load and store instructions" />
      <BitField name="DIV_0_TRP" start="4" size="1" description="Enables faulting or halting when the processor executes an SDIVor UDIV instruction with a divisor of 0" />
      <BitField name="UNALIGN_TRP" start="3" size="1" description="Enables unaligned access traps" />
      <BitField name="USERSETMPEND" start="1" size="1" description="Enables unprivileged software access to the STIR" />
      <BitField name="NONBASETHRDENA" start="0" size="1" description="Indicates how the processor enters Thread mode" />
    </Register>
    <Register name="SHPR1" start="0xE000ED18" description="System Handler Priority Register 1">
      <BitField name="PRI_6" start="21" size="3" description="Priority of system handler 6 (UsageFault)" />
      <BitField name="PRI_5" start="13" size="3" description="Priority of system handler 5 (BusFault)" />
      <BitField name="PRI_4" start="5" size="3" description="Priority of system handler 4 (MemManage)" />
    </Register>
    <Register name="SHPR2" start="0xE000ED1C" description="System Handler Priority Register 2">
      <BitField name="PRI_11" start="29" size="3" description="Priority of system handler 11 (SVCall)" />
    </Register>
    <Register name="SHPR3" start="0xE000ED20" description="System Handler Priority Register 3">
      <BitField name="PRI_15" start="29" size="3" description="Priority of system handler 15 (SysTick)" />
      <BitField name="PRI_14" start="21" size="3" description="Priority of system handler 14 (PendSV)" />
    </Register>
    <Register name="SHCSR" start="0xE000ED24" description="System Handler Control and State Register">
      <BitField name="USGFAULTENA" start="18" size="1" description="UsageFault enable Bit" />
      <BitField name="BUSFAULTENA" start="17" size="1" description="BusFault Enable Bit" />
      <BitField name="MEMFAULTENA" start="16" size="1" description="MemManage Enable Bit" />
      <BitField name="SVCALLPENDED" start="15" size="1" description="SVCall Pending Bit" />
      <BitField name="BUSFAULTPENDED" start="14" size="1" description="BusFault Exception Pending Bit" />
      <BitField name="MEMFAULTPENDED" start="13" size="1" description="MemManage Exception Pending Bit" />
      <BitField name="USGFAULTPENDED" start="12" size="1" description="UsageFault Exception Pending Bit" />
      <BitField name="SYSTICKACT" start="11" size="1" description="SysTick Exception Active Bit" />
      <BitField name="PENDSVACT" start="10" size="1" description="PendSV Exception Active Bit" />
      <BitField name="MONITORACT" start="8" size="1" description="Debug Monitor Active Bit" />
      <BitField name="SVCALLACT" start="7" size="1" description="SVCall Active Bit" />
      <BitField name="USGFAULTACT" start="3" size="1" description="UsageFault Exception Active Bit" />
      <BitField name="BUSFAULTACT" start="1" size="1" description="BusFault Exception Active Bit" />
      <BitField name="MEMFAULTACT" start="0" size="1" description="MemManage Exception Active Bit" />
    </Register>
    <Register name="MMSR" start="0xE000ED28" size="1" description="MemManage Fault Status Register">
      <BitField name="MMARVALID" start="7" size="1" description="MemManage Fault Address Register(MMFAR) valid flag" />
      <BitField name="MLSPERR" start="5" size="1" description="Indicates a MemManage fault occurred during floating-point lazy state preservation" />
      <BitField name="MSTKERR" start="4" size="1" description="MemManage fault on stacking for exception entry" />
      <BitField name="MUNSTKERR" start="3" size="1" description="MemManage fault on unstacking for a return from exception" />
      <BitField name="DACCVIOL" start="1" size="1" description="Data access violation flag" />
      <BitField name="IACCVIOL" start="0" size="1" description="Instruction access violation flag" />
    </Register>
    <Register name="BFSR" start="0xE000ED29" size="1" description="BusFault Status Register">
      <BitField name="BFARVALID" start="7" size="1" description="BusFault Address Register(BFAR) valid flag" />
      <BitField name="LSPERR" start="5" size="1" description="Indicates a bus fault occurred during floating-point lazy state preservation" />
      <BitField name="STKERR" start="4" size="1" description="BusFault on stacking for exception entry" />
      <BitField name="UNSTKERR" start="3" size="1" description="BusFault on unstacking for a return from exception" />
      <BitField name="IMPRECISERR" start="2" size="1" description="Imprecise data bus error" />
      <BitField name="PRECISERR" start="1" size="1" description="Precise data bus error" />
      <BitField name="IBUSERR" start="0" size="1" description="Instruction bus error" />
    </Register>
    <Register name="UFSR" start="0xE000ED2A" size="2" description="UsageFault Status Register">
      <BitField name="DIVBYZERO" start="9" size="1" description="Divide by zero UsageFault" />
      <BitField name="UNALIGNED" start="8" size="1" description="Unaligned access UsageFault" />
      <BitField name="NOCP" start="3" size="1" description="No coprocessor UsageFault" />
      <BitField name="INVPC" start="2" size="1" description="Invalid PC load UsageFault, causedby an invalid PC load by EXC_RETURN" />
      <BitField name="INVSTATE" start="1" size="1" description="Invalid state UsageFault" />
      <BitField name="UNDEFINSTR" start="0" size="1" description="Undefined instruction UsageFault" />
    </Register>
    <Register name="HFSR" start="0xE000ED2C" description="HardFault Status Register">
      <BitField name="DEBUGEVT" start="31" size="1" description="" />
      <BitField name="FORCED" start="30" size="1" description="Indicates a forced hard fault, generated by escalation of a fault with configurable priority that cannot be handled, either because of priority or because it is disabled" />
      <BitField name="VECTTBL" start="1" size="1" description="Indicates a BusFault on a vectortable read during exception processing" />
    </Register>
    <Register name="DFSR" start="0xE000ED30" description="Debug Fault Status Register">
      <BitField name="EXTERNAL" start="4" size="1" description="" />
      <BitField name="VCATCH" start="3" size="1" description="" />
      <BitField name="DWTTRAP" start="2" size="1" description="" />
      <BitField name="BKPT" start="1" size="1" description="" />
      <BitField name="HALTED" start="0" size="1" description="" />
    </Register>
    <Register name="MMAR" start="0xE000ED34" description="MemManage Fault Address Register">
      <BitField name="ADDRESS" start="0" size="32" description="When the MMARVALID bit of the MMFSR is set to 1, this field holds the address of the location that generated the MemManage fault" />
    </Register>
    <Register name="BFAR" start="0xE000ED38" description="BusFault Address Register">
      <BitField name="ADDRESS" start="0" size="32" description="When the BFARVALID bit of the BFSR is set to1, this field holds the address of the location that generated the BusFault" />
    </Register>
    <Register name="AFSR" start="0xE000ED3C" description="Auxiliary Fault Status Register">
      <BitField name="IMPDEF" start="0" size="32" description="Implementation defined, the bits map to the AUXFAULT input signals" />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="FPU" description="Floating Point Unit">
    <Register name="CPACR" start="0xE000ED88" description="Coprocessor Access Control Register">
      <BitField name="CP11" start="22" size="2" description="Access privileges for coprocessor 11" />
      <BitField name="CP10" start="20" size="2" description="Access privileges for coprocessor 10" />
    </Register>
    <Register name="FPCCR" start="0xE000EF34" description="Floating-point Context Control Register">
      <BitField name="ASPEN" start="31" size="1" description="Automatic State Preservation" />
      <BitField name="LSPEN" start="30" size="1" description="Lazy State Preservation Enabled" />
      <BitField name="MONRDY" start="8" size="1" description="Monitor Ready" />
      <BitField name="BFRDY" start="6" size="1" description="BusFault Ready" />
      <BitField name="MMRDY" start="5" size="1" description="MemManage Ready" />
      <BitField name="HFRDY" start="4" size="1" description="HardFault Ready" />
      <BitField name="THREAD" start="3" size="1" description="Thread Mode Allocated Stack Frame" />
      <BitField name="USER" start="1" size="1" description="User Allocated Stack Frame" />
      <BitField name="LSPACT" start="0" size="1" description="Lazy State Preservation Active" />
    </Register>
    <Register name="FPCAR" start="0xE000EF38" description="Floating-point Context Address Register">
      <BitField name="ADDRESSS" start="3" size="29" description="The location of the unpopulated floating-point register space allocated on an exception stack frame" />
    </Register>
    <Register name="FPDSCR" start="0xE000EF3C" description="Floating-point Status Control Register">
      <BitField name="N" start="31" size="1" description="Negative condition code flag" />
      <BitField name="Z" start="30" size="1" description="Zero condition code flag" />
      <BitField name="C" start="29" size="1" description="Carry condition code flag" />
      <BitField name="V" start="28" size="1" description="Overflow condition code flag" />
      <BitField name="AHP" start="26" size="1" description="Alternative half-precision control bit" />
      <BitField name="DN" start="25" size="1" description="Default NaN mode control bit" />
      <BitField name="FZ" start="24" size="1" description="Flush-to-zero mode control bit" />
      <BitField name="RMode" start="22" size="2" description="Rounding Mode control field" />
      <BitField name="IDC" start="7" size="1" description="Input Denormal cumulative exception bit" />
      <BitField name="IXC" start="4" size="1" description="Inexact cumulative exception bit" />
      <BitField name="UFC" start="3" size="1" description="Underflow cumulative exception bit" />
      <BitField name="OFC" start="2" size="1" description="Overflow cumulative exception bit" />
      <BitField name="DZC" start="1" size="1" description="Division by Zero cumulative exception bit" />
      <BitField name="IOC" start="0" size="1" description="Invalid Operation cumulative exception bit" />
    </Register>
  </RegisterGroup>
  <RegisterGroup name="MPU" start="0xE000ED90" description="Memory Protection Unit">
    <Register name="MPU_TYPE" start="0xE000ED90" access="ReadOnly" description="MPU Type Register">
      <BitField name="IREGION" start="16" size="8" description="Number of supported MPU instruction regions" />
      <BitField name="DREGION" start="8" size="8" description="Number of supported MPU data regions" />
      <BitField name="SEPARATE" start="0" size="1" description="Support for unified or separate instruction and date memory maps" />
    </Register>
    <Register name="MPU_CTRL" start="0xE000ED94" description="MPU Control Register">
      <BitField name="PRIVDEFENA" start="2" size="1" description="Enables privileged software access to the default memory map" />
      <BitField name="HFNMIENA" start="1" size="1" description="Enable the operation of MPU during hard fault, NMI, and FAULTMASK handlers" />
      <BitField name="ENABLE" start="0" size="1" description="Enable MPU" />
    </Register>
    <Register name="MPU_RNR" start="0xE000ED98" description="MPU Region Number Register">
      <BitField name="REGION" start="0" size="8" description="Indicates the MPU region referenced by the MPU_RBAR and MPU_RASR registers" />
    </Register>
    <Register name="MPU_RBAR" start="0xE000ED9C" description="MPU Region Base Address Register">
      <BitField name="ADDR" start="5" size="27" description="Region base address field" />
      <BitField name="VALID" start="4" size="1" description="MPU Region Number valid bit" />
      <BitField name="REGION" start="0" size="4" description="MPU region field" />
    </Register>
    <Register name="MPU_RASR" start="0xE000EDA0" description="MPU Region Attribute and Size Register">
      <BitField name="XN" start="28" size="1" description="Instruction access disable bit" />
      <BitField name="AP" start="24" size="3" description="Access permission field" />
      <BitField name="TEX" start="19" size="3" description="Memory access attribute" />
      <BitField name="S" start="18" size="1" description="Shareable bit" />
      <BitField name="C" start="17" size="1" description="Memory access attribute" />
      <BitField name="B" start="16" size="1" description="Memory access attribute" />
      <BitField name="SRD" start="8" size="8" description="Subregion disable bits" />
      <BitField name="SIZE" start="1" size="5" description="MPU protection region size" />
      <BitField name="ENABLE" start="0" size="1" description="Region enable bit" />
    </Register>
  </RegisterGroup>
</Processor>
